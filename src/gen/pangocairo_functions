quote
$(Expr(:toplevel, quote
    function context_get_font_options(_context::PangoContext)
        ret = ccall(("pango_cairo_context_get_font_options", libpangocairo), Ptr{cairoFontOptions}, (Ptr{GObject},), _context)
        ret2 = if ret == C_NULL
                nothing
            else
                convert(cairoFontOptions, ret, false)
            end
        ret2
    end
    function context_get_resolution(_context::PangoContext)
        ret = ccall(("pango_cairo_context_get_resolution", libpangocairo), Float64, (Ptr{GObject},), _context)
        ret
    end
    function context_set_font_options(_context::PangoContext, _options::Maybe(cairoFontOptions))
        _options = if _options == nothing
                C_NULL
            else
                _options
            end
        ret = ccall(("pango_cairo_context_set_font_options", libpangocairo), Nothing, (Ptr{GObject}, Ptr{cairoFontOptions}), _context, _options)
        nothing
    end
    function context_set_resolution(_context::PangoContext, _dpi::Real)
        ret = ccall(("pango_cairo_context_set_resolution", libpangocairo), Nothing, (Ptr{GObject}, Float64), _context, _dpi)
        nothing
    end
    function context_set_shape_renderer(_context::PangoContext, _func::Maybe(Function), _data::Maybe(Nothing), _dnotify::Maybe(Function))
        _func = if _func == nothing
                C_NULL
            else
                _func
            end
        _data = if _data == nothing
                C_NULL
            else
                _data
            end
        _dnotify = if _dnotify == nothing
                C_NULL
            else
                _dnotify
            end
        ret = ccall(("pango_cairo_context_set_shape_renderer", libpangocairo), Nothing, (Ptr{GObject}, Ptr{Nothing}, Ptr{Nothing}, Ptr{Nothing}), _context, _func, _data, _dnotify)
        nothing
    end
    function create_context(_cr::cairoContext)
        ret = ccall(("pango_cairo_create_context", libpangocairo), Ptr{GObject}, (Ptr{cairoContext},), _cr)
        ret2 = convert(PangoContext, ret, true)
        ret2
    end
    function create_layout(_cr::cairoContext)
        ret = ccall(("pango_cairo_create_layout", libpangocairo), Ptr{GObject}, (Ptr{cairoContext},), _cr)
        ret2 = convert(PangoLayout, ret, true)
        ret2
    end
    function error_underline_path(_cr::cairoContext, _x::Real, _y::Real, _width::Real, _height::Real)
        ret = ccall(("pango_cairo_error_underline_path", libpangocairo), Nothing, (Ptr{cairoContext}, Float64, Float64, Float64, Float64), _cr, _x, _y, _width, _height)
        nothing
    end
    function font_map_get_default()
        ret = ccall(("pango_cairo_font_map_get_default", libpangocairo), Ptr{GObject}, ())
        ret2 = convert(PangoFontMap, ret, false)
        ret2
    end
    function font_map_new()
        ret = ccall(("pango_cairo_font_map_new", libpangocairo), Ptr{GObject}, ())
        ret2 = convert(PangoFontMap, ret, true)
        ret2
    end
    function font_map_new_for_font_type(_fonttype)
        ret = ccall(("pango_cairo_font_map_new_for_font_type", libpangocairo), Ptr{GObject}, (Int32,), _fonttype)
        ret2 = if ret == C_NULL
                nothing
            else
                convert(PangoFontMap, ret, true)
            end
        ret2
    end
    function layout_path(_cr::cairoContext, _layout::PangoLayout)
        ret = ccall(("pango_cairo_layout_path", libpangocairo), Nothing, (Ptr{cairoContext}, Ptr{GObject}), _cr, _layout)
        nothing
    end
    function show_error_underline(_cr::cairoContext, _x::Real, _y::Real, _width::Real, _height::Real)
        ret = ccall(("pango_cairo_show_error_underline", libpangocairo), Nothing, (Ptr{cairoContext}, Float64, Float64, Float64, Float64), _cr, _x, _y, _width, _height)
        nothing
    end
    function show_layout(_cr::cairoContext, _layout::PangoLayout)
        ret = ccall(("pango_cairo_show_layout", libpangocairo), Nothing, (Ptr{cairoContext}, Ptr{GObject}), _cr, _layout)
        nothing
    end
    function update_context(_cr::cairoContext, _context::PangoContext)
        ret = ccall(("pango_cairo_update_context", libpangocairo), Nothing, (Ptr{cairoContext}, Ptr{GObject}), _cr, _context)
        nothing
    end
    function update_layout(_cr::cairoContext, _layout::PangoLayout)
        ret = ccall(("pango_cairo_update_layout", libpangocairo), Nothing, (Ptr{cairoContext}, Ptr{GObject}), _cr, _layout)
        nothing
    end
end))
end
