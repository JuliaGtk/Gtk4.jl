quote
$(Expr(:toplevel, quote
    begin
        ACCESSIBLE_VALUE_UNDEFINED = -1
        BINARY_AGE = 402
        IM_MODULE_EXTENSION_POINT_NAME = "gtk-im-module"
        INPUT_ERROR = -1
        INTERFACE_AGE = 2
        INVALID_LIST_POSITION = -1
        LEVEL_BAR_OFFSET_FULL = "full"
        LEVEL_BAR_OFFSET_HIGH = "high"
        LEVEL_BAR_OFFSET_LOW = "low"
        MAJOR_VERSION = 4
        MAX_COMPOSE_LEN = 7
        MEDIA_FILE_EXTENSION_POINT_NAME = "gtk-media-file"
        MICRO_VERSION = 2
        MINOR_VERSION = 4
        PAPER_NAME_A3 = "iso_a3"
        PAPER_NAME_A4 = "iso_a4"
        PAPER_NAME_A5 = "iso_a5"
        PAPER_NAME_B5 = "iso_b5"
        PAPER_NAME_EXECUTIVE = "na_executive"
        PAPER_NAME_LEGAL = "na_legal"
        PAPER_NAME_LETTER = "na_letter"
        PRINT_SETTINGS_COLLATE = "collate"
        PRINT_SETTINGS_DEFAULT_SOURCE = "default-source"
        PRINT_SETTINGS_DITHER = "dither"
        PRINT_SETTINGS_DUPLEX = "duplex"
        PRINT_SETTINGS_FINISHINGS = "finishings"
        PRINT_SETTINGS_MEDIA_TYPE = "media-type"
        PRINT_SETTINGS_NUMBER_UP = "number-up"
        PRINT_SETTINGS_NUMBER_UP_LAYOUT = "number-up-layout"
        PRINT_SETTINGS_N_COPIES = "n-copies"
        PRINT_SETTINGS_ORIENTATION = "orientation"
        PRINT_SETTINGS_OUTPUT_BASENAME = "output-basename"
        PRINT_SETTINGS_OUTPUT_BIN = "output-bin"
        PRINT_SETTINGS_OUTPUT_DIR = "output-dir"
        PRINT_SETTINGS_OUTPUT_FILE_FORMAT = "output-file-format"
        PRINT_SETTINGS_OUTPUT_URI = "output-uri"
        PRINT_SETTINGS_PAGE_RANGES = "page-ranges"
        PRINT_SETTINGS_PAGE_SET = "page-set"
        PRINT_SETTINGS_PAPER_FORMAT = "paper-format"
        PRINT_SETTINGS_PAPER_HEIGHT = "paper-height"
        PRINT_SETTINGS_PAPER_WIDTH = "paper-width"
        PRINT_SETTINGS_PRINTER = "printer"
        PRINT_SETTINGS_PRINTER_LPI = "printer-lpi"
        PRINT_SETTINGS_PRINT_PAGES = "print-pages"
        PRINT_SETTINGS_QUALITY = "quality"
        PRINT_SETTINGS_RESOLUTION = "resolution"
        PRINT_SETTINGS_RESOLUTION_X = "resolution-x"
        PRINT_SETTINGS_RESOLUTION_Y = "resolution-y"
        PRINT_SETTINGS_REVERSE = "reverse"
        PRINT_SETTINGS_SCALE = "scale"
        PRINT_SETTINGS_USE_COLOR = "use-color"
        PRINT_SETTINGS_WIN32_DRIVER_EXTRA = "win32-driver-extra"
        PRINT_SETTINGS_WIN32_DRIVER_VERSION = "win32-driver-version"
        PRIORITY_RESIZE = 110
        STYLE_PROVIDER_PRIORITY_APPLICATION = 600
        STYLE_PROVIDER_PRIORITY_FALLBACK = 1
        STYLE_PROVIDER_PRIORITY_SETTINGS = 400
        STYLE_PROVIDER_PRIORITY_THEME = 200
        STYLE_PROVIDER_PRIORITY_USER = 800
        TEXT_VIEW_PRIORITY_VALIDATE = 125
        TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID = -1
        TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID = -2
        begin
            @cenum AccessibleAutocomplete::Int32 AccessibleAutocomplete_NONE = 0 AccessibleAutocomplete_INLINE = 1 AccessibleAutocomplete_LIST = 2 AccessibleAutocomplete_BOTH = 3
            (GLib.g_type(::Type{T}) where T <: AccessibleAutocomplete) = begin
                    ccall(("gtk_accessible_autocomplete_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum AccessibleInvalidState::Int32 AccessibleInvalidState_FALSE = 0 AccessibleInvalidState_TRUE = 1 AccessibleInvalidState_GRAMMAR = 2 AccessibleInvalidState_SPELLING = 3
            (GLib.g_type(::Type{T}) where T <: AccessibleInvalidState) = begin
                    ccall(("gtk_accessible_invalid_state_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum AccessibleProperty::Int32 AccessibleProperty_AUTOCOMPLETE = 0 AccessibleProperty_DESCRIPTION = 1 AccessibleProperty_HAS_POPUP = 2 AccessibleProperty_KEY_SHORTCUTS = 3 AccessibleProperty_LABEL = 4 AccessibleProperty_LEVEL = 5 AccessibleProperty_MODAL = 6 AccessibleProperty_MULTI_LINE = 7 AccessibleProperty_MULTI_SELECTABLE = 8 AccessibleProperty_ORIENTATION = 9 AccessibleProperty_PLACEHOLDER = 10 AccessibleProperty_READ_ONLY = 11 AccessibleProperty_REQUIRED = 12 AccessibleProperty_ROLE_DESCRIPTION = 13 AccessibleProperty_SORT = 14 AccessibleProperty_VALUE_MAX = 15 AccessibleProperty_VALUE_MIN = 16 AccessibleProperty_VALUE_NOW = 17 AccessibleProperty_VALUE_TEXT = 18
            (GLib.g_type(::Type{T}) where T <: AccessibleProperty) = begin
                    ccall(("gtk_accessible_property_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum AccessibleRelation::Int32 AccessibleRelation_ACTIVE_DESCENDANT = 0 AccessibleRelation_COL_COUNT = 1 AccessibleRelation_COL_INDEX = 2 AccessibleRelation_COL_INDEX_TEXT = 3 AccessibleRelation_COL_SPAN = 4 AccessibleRelation_CONTROLS = 5 AccessibleRelation_DESCRIBED_BY = 6 AccessibleRelation_DETAILS = 7 AccessibleRelation_ERROR_MESSAGE = 8 AccessibleRelation_FLOW_TO = 9 AccessibleRelation_LABELLED_BY = 10 AccessibleRelation_OWNS = 11 AccessibleRelation_POS_IN_SET = 12 AccessibleRelation_ROW_COUNT = 13 AccessibleRelation_ROW_INDEX = 14 AccessibleRelation_ROW_INDEX_TEXT = 15 AccessibleRelation_ROW_SPAN = 16 AccessibleRelation_SET_SIZE = 17
            (GLib.g_type(::Type{T}) where T <: AccessibleRelation) = begin
                    ccall(("gtk_accessible_relation_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum AccessibleRole::Int32 AccessibleRole_ALERT = 0 AccessibleRole_ALERT_DIALOG = 1 AccessibleRole_BANNER = 2 AccessibleRole_BUTTON = 3 AccessibleRole_CAPTION = 4 AccessibleRole_CELL = 5 AccessibleRole_CHECKBOX = 6 AccessibleRole_COLUMN_HEADER = 7 AccessibleRole_COMBO_BOX = 8 AccessibleRole_COMMAND = 9 AccessibleRole_COMPOSITE = 10 AccessibleRole_DIALOG = 11 AccessibleRole_DOCUMENT = 12 AccessibleRole_FEED = 13 AccessibleRole_FORM = 14 AccessibleRole_GENERIC = 15 AccessibleRole_GRID = 16 AccessibleRole_GRID_CELL = 17 AccessibleRole_GROUP = 18 AccessibleRole_HEADING = 19 AccessibleRole_IMG = 20 AccessibleRole_INPUT = 21 AccessibleRole_LABEL = 22 AccessibleRole_LANDMARK = 23 AccessibleRole_LEGEND = 24 AccessibleRole_LINK = 25 AccessibleRole_LIST = 26 AccessibleRole_LIST_BOX = 27 AccessibleRole_LIST_ITEM = 28 AccessibleRole_LOG = 29 AccessibleRole_MAIN = 30 AccessibleRole_MARQUEE = 31 AccessibleRole_MATH = 32 AccessibleRole_METER = 33 AccessibleRole_MENU = 34 AccessibleRole_MENU_BAR = 35 AccessibleRole_MENU_ITEM = 36 AccessibleRole_MENU_ITEM_CHECKBOX = 37 AccessibleRole_MENU_ITEM_RADIO = 38 AccessibleRole_NAVIGATION = 39 AccessibleRole_NONE = 40 AccessibleRole_NOTE = 41 AccessibleRole_OPTION = 42 AccessibleRole_PRESENTATION = 43 AccessibleRole_PROGRESS_BAR = 44 AccessibleRole_RADIO = 45 AccessibleRole_RADIO_GROUP = 46 AccessibleRole_RANGE = 47 AccessibleRole_REGION = 48 AccessibleRole_ROW = 49 AccessibleRole_ROW_GROUP = 50 AccessibleRole_ROW_HEADER = 51 AccessibleRole_SCROLLBAR = 52 AccessibleRole_SEARCH = 53 AccessibleRole_SEARCH_BOX = 54 AccessibleRole_SECTION = 55 AccessibleRole_SECTION_HEAD = 56 AccessibleRole_SELECT = 57 AccessibleRole_SEPARATOR = 58 AccessibleRole_SLIDER = 59 AccessibleRole_SPIN_BUTTON = 60 AccessibleRole_STATUS = 61 AccessibleRole_STRUCTURE = 62 AccessibleRole_SWITCH = 63 AccessibleRole_TAB = 64 AccessibleRole_TABLE = 65 AccessibleRole_TAB_LIST = 66 AccessibleRole_TAB_PANEL = 67 AccessibleRole_TEXT_BOX = 68 AccessibleRole_TIME = 69 AccessibleRole_TIMER = 70 AccessibleRole_TOOLBAR = 71 AccessibleRole_TOOLTIP = 72 AccessibleRole_TREE = 73 AccessibleRole_TREE_GRID = 74 AccessibleRole_TREE_ITEM = 75 AccessibleRole_WIDGET = 76 AccessibleRole_WINDOW = 77
            (GLib.g_type(::Type{T}) where T <: AccessibleRole) = begin
                    ccall(("gtk_accessible_role_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum AccessibleSort::Int32 AccessibleSort_NONE = 0 AccessibleSort_ASCENDING = 1 AccessibleSort_DESCENDING = 2 AccessibleSort_OTHER = 3
            (GLib.g_type(::Type{T}) where T <: AccessibleSort) = begin
                    ccall(("gtk_accessible_sort_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum AccessibleState::Int32 AccessibleState_BUSY = 0 AccessibleState_CHECKED = 1 AccessibleState_DISABLED = 2 AccessibleState_EXPANDED = 3 AccessibleState_HIDDEN = 4 AccessibleState_INVALID = 5 AccessibleState_PRESSED = 6 AccessibleState_SELECTED = 7
            (GLib.g_type(::Type{T}) where T <: AccessibleState) = begin
                    ccall(("gtk_accessible_state_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum AccessibleTristate::Int32 AccessibleTristate_FALSE = 0 AccessibleTristate_TRUE = 1 AccessibleTristate_MIXED = 2
            (GLib.g_type(::Type{T}) where T <: AccessibleTristate) = begin
                    ccall(("gtk_accessible_tristate_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum Align::Int32 Align_FILL = 0 Align_START = 1 Align_END = 2 Align_CENTER = 3 Align_BASELINE = 4
            (GLib.g_type(::Type{T}) where T <: Align) = begin
                    ccall(("gtk_align_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ArrowType::Int32 ArrowType_UP = 0 ArrowType_DOWN = 1 ArrowType_LEFT = 2 ArrowType_RIGHT = 3 ArrowType_NONE = 4
            (GLib.g_type(::Type{T}) where T <: ArrowType) = begin
                    ccall(("gtk_arrow_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum AssistantPageType::Int32 AssistantPageType_CONTENT = 0 AssistantPageType_INTRO = 1 AssistantPageType_CONFIRM = 2 AssistantPageType_SUMMARY = 3 AssistantPageType_PROGRESS = 4 AssistantPageType_CUSTOM = 5
            (GLib.g_type(::Type{T}) where T <: AssistantPageType) = begin
                    ccall(("gtk_assistant_page_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum BaselinePosition::Int32 BaselinePosition_TOP = 0 BaselinePosition_CENTER = 1 BaselinePosition_BOTTOM = 2
            (GLib.g_type(::Type{T}) where T <: BaselinePosition) = begin
                    ccall(("gtk_baseline_position_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum BorderStyle::Int32 BorderStyle_NONE = 0 BorderStyle_HIDDEN = 1 BorderStyle_SOLID = 2 BorderStyle_INSET = 3 BorderStyle_OUTSET = 4 BorderStyle_DOTTED = 5 BorderStyle_DASHED = 6 BorderStyle_DOUBLE = 7 BorderStyle_GROOVE = 8 BorderStyle_RIDGE = 9
            (GLib.g_type(::Type{T}) where T <: BorderStyle) = begin
                    ccall(("gtk_border_style_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum BuilderError::Int32 BuilderError_INVALID_TYPE_FUNCTION = 0 BuilderError_UNHANDLED_TAG = 1 BuilderError_MISSING_ATTRIBUTE = 2 BuilderError_INVALID_ATTRIBUTE = 3 BuilderError_INVALID_TAG = 4 BuilderError_MISSING_PROPERTY_VALUE = 5 BuilderError_INVALID_VALUE = 6 BuilderError_VERSION_MISMATCH = 7 BuilderError_DUPLICATE_ID = 8 BuilderError_OBJECT_TYPE_REFUSED = 9 BuilderError_TEMPLATE_MISMATCH = 10 BuilderError_INVALID_PROPERTY = 11 BuilderError_INVALID_SIGNAL = 12 BuilderError_INVALID_ID = 13 BuilderError_INVALID_FUNCTION = 14
            (GLib.g_type(::Type{T}) where T <: BuilderError) = begin
                    ccall(("gtk_builder_error_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ButtonsType::Int32 ButtonsType_NONE = 0 ButtonsType_OK = 1 ButtonsType_CLOSE = 2 ButtonsType_CANCEL = 3 ButtonsType_YES_NO = 4 ButtonsType_OK_CANCEL = 5
            (GLib.g_type(::Type{T}) where T <: ButtonsType) = begin
                    ccall(("gtk_buttons_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum CellRendererAccelMode::Int32 CellRendererAccelMode_GTK = 0 CellRendererAccelMode_OTHER = 1
            (GLib.g_type(::Type{T}) where T <: CellRendererAccelMode) = begin
                    ccall(("gtk_cell_renderer_accel_mode_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum CellRendererMode::Int32 CellRendererMode_INERT = 0 CellRendererMode_ACTIVATABLE = 1 CellRendererMode_EDITABLE = 2
            (GLib.g_type(::Type{T}) where T <: CellRendererMode) = begin
                    ccall(("gtk_cell_renderer_mode_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ConstraintAttribute::Int32 ConstraintAttribute_NONE = 0 ConstraintAttribute_LEFT = 1 ConstraintAttribute_RIGHT = 2 ConstraintAttribute_TOP = 3 ConstraintAttribute_BOTTOM = 4 ConstraintAttribute_START = 5 ConstraintAttribute_END = 6 ConstraintAttribute_WIDTH = 7 ConstraintAttribute_HEIGHT = 8 ConstraintAttribute_CENTER_X = 9 ConstraintAttribute_CENTER_Y = 10 ConstraintAttribute_BASELINE = 11
            (GLib.g_type(::Type{T}) where T <: ConstraintAttribute) = begin
                    ccall(("gtk_constraint_attribute_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ConstraintRelation::UInt16 ConstraintRelation_LE = 0xffff ConstraintRelation_EQ = 0x0000 ConstraintRelation_GE = 0x0001
            (GLib.g_type(::Type{T}) where T <: ConstraintRelation) = begin
                    ccall(("gtk_constraint_relation_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ConstraintStrength::Int32 ConstraintStrength_REQUIRED = 1001001000 ConstraintStrength_STRONG = 1000000000 ConstraintStrength_MEDIUM = 1000 ConstraintStrength_WEAK = 1
            (GLib.g_type(::Type{T}) where T <: ConstraintStrength) = begin
                    ccall(("gtk_constraint_strength_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ConstraintVflParserError::Int32 ConstraintVflParserError_SYMBOL = 0 ConstraintVflParserError_ATTRIBUTE = 1 ConstraintVflParserError_VIEW = 2 ConstraintVflParserError_METRIC = 3 ConstraintVflParserError_PRIORITY = 4 ConstraintVflParserError_RELATION = 5
            (GLib.g_type(::Type{T}) where T <: ConstraintVflParserError) = begin
                    ccall(("gtk_constraint_vfl_parser_error_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum CornerType::Int32 CornerType_TOP_LEFT = 0 CornerType_BOTTOM_LEFT = 1 CornerType_TOP_RIGHT = 2 CornerType_BOTTOM_RIGHT = 3
            (GLib.g_type(::Type{T}) where T <: CornerType) = begin
                    ccall(("gtk_corner_type_get_type", libgtk4), GType, ())
                end
        end
        @cenum CssParserError::Int32 CssParserError_FAILED = 0 CssParserError_SYNTAX = 1 CssParserError_IMPORT = 2 CssParserError_NAME = 3 CssParserError_UNKNOWN_VALUE = 4
        @cenum CssParserWarning::Int32 CssParserWarning_DEPRECATED = 0 CssParserWarning_SYNTAX = 1 CssParserWarning_UNIMPLEMENTED = 2
        begin
            @cenum DeleteType::Int32 DeleteType_CHARS = 0 DeleteType_WORD_ENDS = 1 DeleteType_WORDS = 2 DeleteType_DISPLAY_LINES = 3 DeleteType_DISPLAY_LINE_ENDS = 4 DeleteType_PARAGRAPH_ENDS = 5 DeleteType_PARAGRAPHS = 6 DeleteType_WHITESPACE = 7
            (GLib.g_type(::Type{T}) where T <: DeleteType) = begin
                    ccall(("gtk_delete_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum DirectionType::Int32 DirectionType_TAB_FORWARD = 0 DirectionType_TAB_BACKWARD = 1 DirectionType_UP = 2 DirectionType_DOWN = 3 DirectionType_LEFT = 4 DirectionType_RIGHT = 5
            (GLib.g_type(::Type{T}) where T <: DirectionType) = begin
                    ccall(("gtk_direction_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum EditableProperties::Int32 EditableProperties_PROP_TEXT = 0 EditableProperties_PROP_CURSOR_POSITION = 1 EditableProperties_PROP_SELECTION_BOUND = 2 EditableProperties_PROP_EDITABLE = 3 EditableProperties_PROP_WIDTH_CHARS = 4 EditableProperties_PROP_MAX_WIDTH_CHARS = 5 EditableProperties_PROP_XALIGN = 6 EditableProperties_PROP_ENABLE_UNDO = 7 EditableProperties_NUM_PROPERTIES = 8
            (GLib.g_type(::Type{T}) where T <: EditableProperties) = begin
                    ccall(("gtk_editable_properties_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum EntryIconPosition::Int32 EntryIconPosition_PRIMARY = 0 EntryIconPosition_SECONDARY = 1
            (GLib.g_type(::Type{T}) where T <: EntryIconPosition) = begin
                    ccall(("gtk_entry_icon_position_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum EventSequenceState::Int32 EventSequenceState_NONE = 0 EventSequenceState_CLAIMED = 1 EventSequenceState_DENIED = 2
            (GLib.g_type(::Type{T}) where T <: EventSequenceState) = begin
                    ccall(("gtk_event_sequence_state_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum FileChooserAction::Int32 FileChooserAction_OPEN = 0 FileChooserAction_SAVE = 1 FileChooserAction_SELECT_FOLDER = 2
            (GLib.g_type(::Type{T}) where T <: FileChooserAction) = begin
                    ccall(("gtk_file_chooser_action_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum FileChooserError::Int32 FileChooserError_NONEXISTENT = 0 FileChooserError_BAD_FILENAME = 1 FileChooserError_ALREADY_EXISTS = 2 FileChooserError_INCOMPLETE_HOSTNAME = 3
            (GLib.g_type(::Type{T}) where T <: FileChooserError) = begin
                    ccall(("gtk_file_chooser_error_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum FilterChange::Int32 FilterChange_DIFFERENT = 0 FilterChange_LESS_STRICT = 1 FilterChange_MORE_STRICT = 2
            (GLib.g_type(::Type{T}) where T <: FilterChange) = begin
                    ccall(("gtk_filter_change_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum FilterMatch::Int32 FilterMatch_SOME = 0 FilterMatch_NONE = 1 FilterMatch_ALL = 2
            (GLib.g_type(::Type{T}) where T <: FilterMatch) = begin
                    ccall(("gtk_filter_match_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum IconSize::Int32 IconSize_INHERIT = 0 IconSize_NORMAL = 1 IconSize_LARGE = 2
            (GLib.g_type(::Type{T}) where T <: IconSize) = begin
                    ccall(("gtk_icon_size_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum IconThemeError::Int32 IconThemeError_NOT_FOUND = 0 IconThemeError_FAILED = 1
            (GLib.g_type(::Type{T}) where T <: IconThemeError) = begin
                    ccall(("gtk_icon_theme_error_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum IconViewDropPosition::Int32 IconViewDropPosition_NO_DROP = 0 IconViewDropPosition_DROP_INTO = 1 IconViewDropPosition_DROP_LEFT = 2 IconViewDropPosition_DROP_RIGHT = 3 IconViewDropPosition_DROP_ABOVE = 4 IconViewDropPosition_DROP_BELOW = 5
            (GLib.g_type(::Type{T}) where T <: IconViewDropPosition) = begin
                    ccall(("gtk_icon_view_drop_position_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ImageType::Int32 ImageType_EMPTY = 0 ImageType_ICON_NAME = 1 ImageType_GICON = 2 ImageType_PAINTABLE = 3
            (GLib.g_type(::Type{T}) where T <: ImageType) = begin
                    ccall(("gtk_image_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum InputPurpose::Int32 InputPurpose_FREE_FORM = 0 InputPurpose_ALPHA = 1 InputPurpose_DIGITS = 2 InputPurpose_NUMBER = 3 InputPurpose_PHONE = 4 InputPurpose_URL = 5 InputPurpose_EMAIL = 6 InputPurpose_NAME = 7 InputPurpose_PASSWORD = 8 InputPurpose_PIN = 9 InputPurpose_TERMINAL = 10
            (GLib.g_type(::Type{T}) where T <: InputPurpose) = begin
                    ccall(("gtk_input_purpose_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum Justification::Int32 Justification_LEFT = 0 Justification_RIGHT = 1 Justification_CENTER = 2 Justification_FILL = 3
            (GLib.g_type(::Type{T}) where T <: Justification) = begin
                    ccall(("gtk_justification_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum LevelBarMode::Int32 LevelBarMode_CONTINUOUS = 0 LevelBarMode_DISCRETE = 1
            (GLib.g_type(::Type{T}) where T <: LevelBarMode) = begin
                    ccall(("gtk_level_bar_mode_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum License::Int32 License_UNKNOWN = 0 License_CUSTOM = 1 License_GPL_2_0 = 2 License_GPL_3_0 = 3 License_LGPL_2_1 = 4 License_LGPL_3_0 = 5 License_BSD = 6 License_MIT_X11 = 7 License_ARTISTIC = 8 License_GPL_2_0_ONLY = 9 License_GPL_3_0_ONLY = 10 License_LGPL_2_1_ONLY = 11 License_LGPL_3_0_ONLY = 12 License_AGPL_3_0 = 13 License_AGPL_3_0_ONLY = 14 License_BSD_3 = 15 License_APACHE_2_0 = 16 License_MPL_2_0 = 17
            (GLib.g_type(::Type{T}) where T <: License) = begin
                    ccall(("gtk_license_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum MessageType::Int32 MessageType_INFO = 0 MessageType_WARNING = 1 MessageType_QUESTION = 2 MessageType_ERROR = 3 MessageType_OTHER = 4
            (GLib.g_type(::Type{T}) where T <: MessageType) = begin
                    ccall(("gtk_message_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum MovementStep::Int32 MovementStep_LOGICAL_POSITIONS = 0 MovementStep_VISUAL_POSITIONS = 1 MovementStep_WORDS = 2 MovementStep_DISPLAY_LINES = 3 MovementStep_DISPLAY_LINE_ENDS = 4 MovementStep_PARAGRAPHS = 5 MovementStep_PARAGRAPH_ENDS = 6 MovementStep_PAGES = 7 MovementStep_BUFFER_ENDS = 8 MovementStep_HORIZONTAL_PAGES = 9
            (GLib.g_type(::Type{T}) where T <: MovementStep) = begin
                    ccall(("gtk_movement_step_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum NotebookTab::Int32 NotebookTab_FIRST = 0 NotebookTab_LAST = 1
            (GLib.g_type(::Type{T}) where T <: NotebookTab) = begin
                    ccall(("gtk_notebook_tab_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum NumberUpLayout::Int32 NumberUpLayout_LRTB = 0 NumberUpLayout_LRBT = 1 NumberUpLayout_RLTB = 2 NumberUpLayout_RLBT = 3 NumberUpLayout_TBLR = 4 NumberUpLayout_TBRL = 5 NumberUpLayout_BTLR = 6 NumberUpLayout_BTRL = 7
            (GLib.g_type(::Type{T}) where T <: NumberUpLayout) = begin
                    ccall(("gtk_number_up_layout_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum Ordering::UInt16 Ordering_SMALLER = 0xffff Ordering_EQUAL = 0x0000 Ordering_LARGER = 0x0001
            (GLib.g_type(::Type{T}) where T <: Ordering) = begin
                    ccall(("gtk_ordering_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum Orientation::Int32 Orientation_HORIZONTAL = 0 Orientation_VERTICAL = 1
            (GLib.g_type(::Type{T}) where T <: Orientation) = begin
                    ccall(("gtk_orientation_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum Overflow::Int32 Overflow_VISIBLE = 0 Overflow_HIDDEN = 1
            (GLib.g_type(::Type{T}) where T <: Overflow) = begin
                    ccall(("gtk_overflow_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PackType::Int32 PackType_START = 0 PackType_END = 1
            (GLib.g_type(::Type{T}) where T <: PackType) = begin
                    ccall(("gtk_pack_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PadActionType::Int32 PadActionType_BUTTON = 0 PadActionType_RING = 1 PadActionType_STRIP = 2
            (GLib.g_type(::Type{T}) where T <: PadActionType) = begin
                    ccall(("gtk_pad_action_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PageOrientation::Int32 PageOrientation_PORTRAIT = 0 PageOrientation_LANDSCAPE = 1 PageOrientation_REVERSE_PORTRAIT = 2 PageOrientation_REVERSE_LANDSCAPE = 3
            (GLib.g_type(::Type{T}) where T <: PageOrientation) = begin
                    ccall(("gtk_page_orientation_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PageSet::Int32 PageSet_ALL = 0 PageSet_EVEN = 1 PageSet_ODD = 2
            (GLib.g_type(::Type{T}) where T <: PageSet) = begin
                    ccall(("gtk_page_set_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PanDirection::Int32 PanDirection_LEFT = 0 PanDirection_RIGHT = 1 PanDirection_UP = 2 PanDirection_DOWN = 3
            (GLib.g_type(::Type{T}) where T <: PanDirection) = begin
                    ccall(("gtk_pan_direction_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PolicyType::Int32 PolicyType_ALWAYS = 0 PolicyType_AUTOMATIC = 1 PolicyType_NEVER = 2 PolicyType_EXTERNAL = 3
            (GLib.g_type(::Type{T}) where T <: PolicyType) = begin
                    ccall(("gtk_policy_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PositionType::Int32 PositionType_LEFT = 0 PositionType_RIGHT = 1 PositionType_TOP = 2 PositionType_BOTTOM = 3
            (GLib.g_type(::Type{T}) where T <: PositionType) = begin
                    ccall(("gtk_position_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PrintDuplex::Int32 PrintDuplex_SIMPLEX = 0 PrintDuplex_HORIZONTAL = 1 PrintDuplex_VERTICAL = 2
            (GLib.g_type(::Type{T}) where T <: PrintDuplex) = begin
                    ccall(("gtk_print_duplex_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PrintError::Int32 PrintError_GENERAL = 0 PrintError_INTERNAL_ERROR = 1 PrintError_NOMEM = 2 PrintError_INVALID_FILE = 3
            (GLib.g_type(::Type{T}) where T <: PrintError) = begin
                    ccall(("gtk_print_error_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PrintOperationAction::Int32 PrintOperationAction_PRINT_DIALOG = 0 PrintOperationAction_PRINT = 1 PrintOperationAction_PREVIEW = 2 PrintOperationAction_EXPORT = 3
            (GLib.g_type(::Type{T}) where T <: PrintOperationAction) = begin
                    ccall(("gtk_print_operation_action_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PrintOperationResult::Int32 PrintOperationResult_ERROR = 0 PrintOperationResult_APPLY = 1 PrintOperationResult_CANCEL = 2 PrintOperationResult_IN_PROGRESS = 3
            (GLib.g_type(::Type{T}) where T <: PrintOperationResult) = begin
                    ccall(("gtk_print_operation_result_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PrintPages::Int32 PrintPages_ALL = 0 PrintPages_CURRENT = 1 PrintPages_RANGES = 2 PrintPages_SELECTION = 3
            (GLib.g_type(::Type{T}) where T <: PrintPages) = begin
                    ccall(("gtk_print_pages_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PrintQuality::Int32 PrintQuality_LOW = 0 PrintQuality_NORMAL = 1 PrintQuality_HIGH = 2 PrintQuality_DRAFT = 3
            (GLib.g_type(::Type{T}) where T <: PrintQuality) = begin
                    ccall(("gtk_print_quality_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PrintStatus::Int32 PrintStatus_INITIAL = 0 PrintStatus_PREPARING = 1 PrintStatus_GENERATING_DATA = 2 PrintStatus_SENDING_DATA = 3 PrintStatus_PENDING = 4 PrintStatus_PENDING_ISSUE = 5 PrintStatus_PRINTING = 6 PrintStatus_FINISHED = 7 PrintStatus_FINISHED_ABORTED = 8
            (GLib.g_type(::Type{T}) where T <: PrintStatus) = begin
                    ccall(("gtk_print_status_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PropagationLimit::Int32 PropagationLimit_NONE = 0 PropagationLimit_SAME_NATIVE = 1
            (GLib.g_type(::Type{T}) where T <: PropagationLimit) = begin
                    ccall(("gtk_propagation_limit_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum PropagationPhase::Int32 PropagationPhase_NONE = 0 PropagationPhase_CAPTURE = 1 PropagationPhase_BUBBLE = 2 PropagationPhase_TARGET = 3
            (GLib.g_type(::Type{T}) where T <: PropagationPhase) = begin
                    ccall(("gtk_propagation_phase_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum RecentManagerError::Int32 RecentManagerError_NOT_FOUND = 0 RecentManagerError_INVALID_URI = 1 RecentManagerError_INVALID_ENCODING = 2 RecentManagerError_NOT_REGISTERED = 3 RecentManagerError_READ = 4 RecentManagerError_WRITE = 5 RecentManagerError_UNKNOWN = 6
            (GLib.g_type(::Type{T}) where T <: RecentManagerError) = begin
                    ccall(("gtk_recent_manager_error_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ResponseType::UInt16 ResponseType_NONE = 0xffff ResponseType_REJECT = 0xfffe ResponseType_ACCEPT = 0xfffd ResponseType_DELETE_EVENT = 0xfffc ResponseType_OK = 0xfffb ResponseType_CANCEL = 0xfffa ResponseType_CLOSE = 0xfff9 ResponseType_YES = 0xfff8 ResponseType_NO = 0xfff7 ResponseType_APPLY = 0xfff6 ResponseType_HELP = 0xfff5
            (GLib.g_type(::Type{T}) where T <: ResponseType) = begin
                    ccall(("gtk_response_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum RevealerTransitionType::Int32 RevealerTransitionType_NONE = 0 RevealerTransitionType_CROSSFADE = 1 RevealerTransitionType_SLIDE_RIGHT = 2 RevealerTransitionType_SLIDE_LEFT = 3 RevealerTransitionType_SLIDE_UP = 4 RevealerTransitionType_SLIDE_DOWN = 5 RevealerTransitionType_SWING_RIGHT = 6 RevealerTransitionType_SWING_LEFT = 7 RevealerTransitionType_SWING_UP = 8 RevealerTransitionType_SWING_DOWN = 9
            (GLib.g_type(::Type{T}) where T <: RevealerTransitionType) = begin
                    ccall(("gtk_revealer_transition_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ScrollStep::Int32 ScrollStep_STEPS = 0 ScrollStep_PAGES = 1 ScrollStep_ENDS = 2 ScrollStep_HORIZONTAL_STEPS = 3 ScrollStep_HORIZONTAL_PAGES = 4 ScrollStep_HORIZONTAL_ENDS = 5
            (GLib.g_type(::Type{T}) where T <: ScrollStep) = begin
                    ccall(("gtk_scroll_step_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ScrollType::Int32 ScrollType_NONE = 0 ScrollType_JUMP = 1 ScrollType_STEP_BACKWARD = 2 ScrollType_STEP_FORWARD = 3 ScrollType_PAGE_BACKWARD = 4 ScrollType_PAGE_FORWARD = 5 ScrollType_STEP_UP = 6 ScrollType_STEP_DOWN = 7 ScrollType_PAGE_UP = 8 ScrollType_PAGE_DOWN = 9 ScrollType_STEP_LEFT = 10 ScrollType_STEP_RIGHT = 11 ScrollType_PAGE_LEFT = 12 ScrollType_PAGE_RIGHT = 13 ScrollType_START = 14 ScrollType_END = 15
            (GLib.g_type(::Type{T}) where T <: ScrollType) = begin
                    ccall(("gtk_scroll_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ScrollablePolicy::Int32 ScrollablePolicy_MINIMUM = 0 ScrollablePolicy_NATURAL = 1
            (GLib.g_type(::Type{T}) where T <: ScrollablePolicy) = begin
                    ccall(("gtk_scrollable_policy_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SelectionMode::Int32 SelectionMode_NONE = 0 SelectionMode_SINGLE = 1 SelectionMode_BROWSE = 2 SelectionMode_MULTIPLE = 3
            (GLib.g_type(::Type{T}) where T <: SelectionMode) = begin
                    ccall(("gtk_selection_mode_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SensitivityType::Int32 SensitivityType_AUTO = 0 SensitivityType_ON = 1 SensitivityType_OFF = 2
            (GLib.g_type(::Type{T}) where T <: SensitivityType) = begin
                    ccall(("gtk_sensitivity_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ShortcutScope::Int32 ShortcutScope_LOCAL = 0 ShortcutScope_MANAGED = 1 ShortcutScope_GLOBAL = 2
            (GLib.g_type(::Type{T}) where T <: ShortcutScope) = begin
                    ccall(("gtk_shortcut_scope_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum ShortcutType::Int32 ShortcutType_ACCELERATOR = 0 ShortcutType_GESTURE_PINCH = 1 ShortcutType_GESTURE_STRETCH = 2 ShortcutType_GESTURE_ROTATE_CLOCKWISE = 3 ShortcutType_GESTURE_ROTATE_COUNTERCLOCKWISE = 4 ShortcutType_GESTURE_TWO_FINGER_SWIPE_LEFT = 5 ShortcutType_GESTURE_TWO_FINGER_SWIPE_RIGHT = 6 ShortcutType_GESTURE = 7 ShortcutType_GESTURE_SWIPE_LEFT = 8 ShortcutType_GESTURE_SWIPE_RIGHT = 9
            (GLib.g_type(::Type{T}) where T <: ShortcutType) = begin
                    ccall(("gtk_shortcut_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SizeGroupMode::Int32 SizeGroupMode_NONE = 0 SizeGroupMode_HORIZONTAL = 1 SizeGroupMode_VERTICAL = 2 SizeGroupMode_BOTH = 3
            (GLib.g_type(::Type{T}) where T <: SizeGroupMode) = begin
                    ccall(("gtk_size_group_mode_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SizeRequestMode::Int32 SizeRequestMode_HEIGHT_FOR_WIDTH = 0 SizeRequestMode_WIDTH_FOR_HEIGHT = 1 SizeRequestMode_CONSTANT_SIZE = 2
            (GLib.g_type(::Type{T}) where T <: SizeRequestMode) = begin
                    ccall(("gtk_size_request_mode_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SortType::Int32 SortType_ASCENDING = 0 SortType_DESCENDING = 1
            (GLib.g_type(::Type{T}) where T <: SortType) = begin
                    ccall(("gtk_sort_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SorterChange::Int32 SorterChange_DIFFERENT = 0 SorterChange_INVERTED = 1 SorterChange_LESS_STRICT = 2 SorterChange_MORE_STRICT = 3
            (GLib.g_type(::Type{T}) where T <: SorterChange) = begin
                    ccall(("gtk_sorter_change_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SorterOrder::Int32 SorterOrder_PARTIAL = 0 SorterOrder_NONE = 1 SorterOrder_TOTAL = 2
            (GLib.g_type(::Type{T}) where T <: SorterOrder) = begin
                    ccall(("gtk_sorter_order_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SpinButtonUpdatePolicy::Int32 SpinButtonUpdatePolicy_ALWAYS = 0 SpinButtonUpdatePolicy_IF_VALID = 1
            (GLib.g_type(::Type{T}) where T <: SpinButtonUpdatePolicy) = begin
                    ccall(("gtk_spin_button_update_policy_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SpinType::Int32 SpinType_STEP_FORWARD = 0 SpinType_STEP_BACKWARD = 1 SpinType_PAGE_FORWARD = 2 SpinType_PAGE_BACKWARD = 3 SpinType_HOME = 4 SpinType_END = 5 SpinType_USER_DEFINED = 6
            (GLib.g_type(::Type{T}) where T <: SpinType) = begin
                    ccall(("gtk_spin_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum StackTransitionType::Int32 StackTransitionType_NONE = 0 StackTransitionType_CROSSFADE = 1 StackTransitionType_SLIDE_RIGHT = 2 StackTransitionType_SLIDE_LEFT = 3 StackTransitionType_SLIDE_UP = 4 StackTransitionType_SLIDE_DOWN = 5 StackTransitionType_SLIDE_LEFT_RIGHT = 6 StackTransitionType_SLIDE_UP_DOWN = 7 StackTransitionType_OVER_UP = 8 StackTransitionType_OVER_DOWN = 9 StackTransitionType_OVER_LEFT = 10 StackTransitionType_OVER_RIGHT = 11 StackTransitionType_UNDER_UP = 12 StackTransitionType_UNDER_DOWN = 13 StackTransitionType_UNDER_LEFT = 14 StackTransitionType_UNDER_RIGHT = 15 StackTransitionType_OVER_UP_DOWN = 16 StackTransitionType_OVER_DOWN_UP = 17 StackTransitionType_OVER_LEFT_RIGHT = 18 StackTransitionType_OVER_RIGHT_LEFT = 19 StackTransitionType_ROTATE_LEFT = 20 StackTransitionType_ROTATE_RIGHT = 21 StackTransitionType_ROTATE_LEFT_RIGHT = 22
            (GLib.g_type(::Type{T}) where T <: StackTransitionType) = begin
                    ccall(("gtk_stack_transition_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum StringFilterMatchMode::Int32 StringFilterMatchMode_EXACT = 0 StringFilterMatchMode_SUBSTRING = 1 StringFilterMatchMode_PREFIX = 2
            (GLib.g_type(::Type{T}) where T <: StringFilterMatchMode) = begin
                    ccall(("gtk_string_filter_match_mode_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum SystemSetting::Int32 SystemSetting_DPI = 0 SystemSetting_FONT_NAME = 1 SystemSetting_FONT_CONFIG = 2 SystemSetting_DISPLAY = 3 SystemSetting_ICON_THEME = 4
            (GLib.g_type(::Type{T}) where T <: SystemSetting) = begin
                    ccall(("gtk_system_setting_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum TextDirection::Int32 TextDirection_NONE = 0 TextDirection_LTR = 1 TextDirection_RTL = 2
            (GLib.g_type(::Type{T}) where T <: TextDirection) = begin
                    ccall(("gtk_text_direction_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum TextExtendSelection::Int32 TextExtendSelection_WORD = 0 TextExtendSelection_LINE = 1
            (GLib.g_type(::Type{T}) where T <: TextExtendSelection) = begin
                    ccall(("gtk_text_extend_selection_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum TextViewLayer::Int32 TextViewLayer_BELOW_TEXT = 0 TextViewLayer_ABOVE_TEXT = 1
            (GLib.g_type(::Type{T}) where T <: TextViewLayer) = begin
                    ccall(("gtk_text_view_layer_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum TextWindowType::Int32 TextWindowType_WIDGET = 1 TextWindowType_TEXT = 2 TextWindowType_LEFT = 3 TextWindowType_RIGHT = 4 TextWindowType_TOP = 5 TextWindowType_BOTTOM = 6
            (GLib.g_type(::Type{T}) where T <: TextWindowType) = begin
                    ccall(("gtk_text_window_type_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum TreeViewColumnSizing::Int32 TreeViewColumnSizing_GROW_ONLY = 0 TreeViewColumnSizing_AUTOSIZE = 1 TreeViewColumnSizing_FIXED = 2
            (GLib.g_type(::Type{T}) where T <: TreeViewColumnSizing) = begin
                    ccall(("gtk_tree_view_column_sizing_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum TreeViewDropPosition::Int32 TreeViewDropPosition_BEFORE = 0 TreeViewDropPosition_AFTER = 1 TreeViewDropPosition_INTO_OR_BEFORE = 2 TreeViewDropPosition_INTO_OR_AFTER = 3
            (GLib.g_type(::Type{T}) where T <: TreeViewDropPosition) = begin
                    ccall(("gtk_tree_view_drop_position_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum TreeViewGridLines::Int32 TreeViewGridLines_NONE = 0 TreeViewGridLines_HORIZONTAL = 1 TreeViewGridLines_VERTICAL = 2 TreeViewGridLines_BOTH = 3
            (GLib.g_type(::Type{T}) where T <: TreeViewGridLines) = begin
                    ccall(("gtk_tree_view_grid_lines_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum Unit::Int32 Unit_NONE = 0 Unit_POINTS = 1 Unit_INCH = 2 Unit_MM = 3
            (GLib.g_type(::Type{T}) where T <: Unit) = begin
                    ccall(("gtk_unit_get_type", libgtk4), GType, ())
                end
        end
        begin
            @cenum WrapMode::Int32 WrapMode_NONE = 0 WrapMode_CHAR = 1 WrapMode_WORD = 2 WrapMode_WORD_CHAR = 3
            (GLib.g_type(::Type{T}) where T <: WrapMode) = begin
                    ccall(("gtk_wrap_mode_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag ApplicationInhibitFlags::UInt32 ApplicationInhibitFlags_LOGOUT = 1 ApplicationInhibitFlags_SWITCH = 2 ApplicationInhibitFlags_SUSPEND = 4 ApplicationInhibitFlags_IDLE = 8 ApplicationInhibitFlags_NONE = 0
            (GLib.g_type(::Type{T}) where T <: ApplicationInhibitFlags) = begin
                    ccall(("gtk_application_inhibit_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag BuilderClosureFlags::UInt32 BuilderClosureFlags_SWAPPED = 1 BuilderClosureFlags_NONE = 0
            (GLib.g_type(::Type{T}) where T <: BuilderClosureFlags) = begin
                    ccall(("gtk_builder_closure_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag CellRendererState::UInt32 CellRendererState_SELECTED = 1 CellRendererState_PRELIT = 2 CellRendererState_INSENSITIVE = 4 CellRendererState_SORTED = 8 CellRendererState_FOCUSED = 16 CellRendererState_EXPANDABLE = 32 CellRendererState_EXPANDED = 64 CellRendererState_NONE = 0
            (GLib.g_type(::Type{T}) where T <: CellRendererState) = begin
                    ccall(("gtk_cell_renderer_state_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag DebugFlags::UInt32 DebugFlags_TEXT = 1 DebugFlags_TREE = 2 DebugFlags_KEYBINDINGS = 4 DebugFlags_MODULES = 8 DebugFlags_GEOMETRY = 16 DebugFlags_ICONTHEME = 32 DebugFlags_PRINTING = 64 DebugFlags_BUILDER = 128 DebugFlags_SIZE_REQUEST = 256 DebugFlags_NO_CSS_CACHE = 512 DebugFlags_INTERACTIVE = 1024 DebugFlags_TOUCHSCREEN = 2048 DebugFlags_ACTIONS = 4096 DebugFlags_LAYOUT = 8192 DebugFlags_SNAPSHOT = 16384 DebugFlags_CONSTRAINTS = 32768 DebugFlags_BUILDER_OBJECTS = 65536 DebugFlags_A11Y = 131072 DebugFlags_ICONFALLBACK = 262144 DebugFlags_NONE = 0
            (GLib.g_type(::Type{T}) where T <: DebugFlags) = begin
                    ccall(("gtk_debug_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag DialogFlags::UInt32 DialogFlags_MODAL = 1 DialogFlags_DESTROY_WITH_PARENT = 2 DialogFlags_USE_HEADER_BAR = 4 DialogFlags_NONE = 0
            (GLib.g_type(::Type{T}) where T <: DialogFlags) = begin
                    ccall(("gtk_dialog_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag EventControllerScrollFlags::UInt32 EventControllerScrollFlags_NONE = 0 EventControllerScrollFlags_VERTICAL = 1 EventControllerScrollFlags_HORIZONTAL = 2 EventControllerScrollFlags_DISCRETE = 4 EventControllerScrollFlags_KINETIC = 8
            (GLib.g_type(::Type{T}) where T <: EventControllerScrollFlags) = begin
                    ccall(("gtk_event_controller_scroll_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag FontChooserLevel::UInt32 FontChooserLevel_FAMILY = 0 FontChooserLevel_STYLE = 1 FontChooserLevel_SIZE = 2 FontChooserLevel_VARIATIONS = 4 FontChooserLevel_FEATURES = 8
            (GLib.g_type(::Type{T}) where T <: FontChooserLevel) = begin
                    ccall(("gtk_font_chooser_level_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag IconLookupFlags::UInt32 IconLookupFlags_FORCE_REGULAR = 1 IconLookupFlags_FORCE_SYMBOLIC = 2 IconLookupFlags_PRELOAD = 4 IconLookupFlags_NONE = 0
            (GLib.g_type(::Type{T}) where T <: IconLookupFlags) = begin
                    ccall(("gtk_icon_lookup_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag InputHints::UInt32 InputHints_NONE = 0 InputHints_SPELLCHECK = 1 InputHints_NO_SPELLCHECK = 2 InputHints_WORD_COMPLETION = 4 InputHints_LOWERCASE = 8 InputHints_UPPERCASE_CHARS = 16 InputHints_UPPERCASE_WORDS = 32 InputHints_UPPERCASE_SENTENCES = 64 InputHints_INHIBIT_OSK = 128 InputHints_VERTICAL_WRITING = 256 InputHints_EMOJI = 512 InputHints_NO_EMOJI = 1024 InputHints_PRIVATE = 2048
            (GLib.g_type(::Type{T}) where T <: InputHints) = begin
                    ccall(("gtk_input_hints_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag PickFlags::UInt32 PickFlags_DEFAULT = 0 PickFlags_INSENSITIVE = 1 PickFlags_NON_TARGETABLE = 2
            (GLib.g_type(::Type{T}) where T <: PickFlags) = begin
                    ccall(("gtk_pick_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag PopoverMenuFlags::UInt32 PopoverMenuFlags_NESTED = 1 PopoverMenuFlags_NONE = 0
            (GLib.g_type(::Type{T}) where T <: PopoverMenuFlags) = begin
                    ccall(("gtk_popover_menu_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag PrintCapabilities::UInt32 PrintCapabilities_PAGE_SET = 1 PrintCapabilities_COPIES = 2 PrintCapabilities_COLLATE = 4 PrintCapabilities_REVERSE = 8 PrintCapabilities_SCALE = 16 PrintCapabilities_GENERATE_PDF = 32 PrintCapabilities_GENERATE_PS = 64 PrintCapabilities_PREVIEW = 128 PrintCapabilities_NUMBER_UP = 256 PrintCapabilities_NUMBER_UP_LAYOUT = 512 PrintCapabilities_NONE = 0
            (GLib.g_type(::Type{T}) where T <: PrintCapabilities) = begin
                    ccall(("gtk_print_capabilities_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag ShortcutActionFlags::UInt32 ShortcutActionFlags_EXCLUSIVE = 1 ShortcutActionFlags_NONE = 0
            (GLib.g_type(::Type{T}) where T <: ShortcutActionFlags) = begin
                    ccall(("gtk_shortcut_action_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag StateFlags::UInt32 StateFlags_NORMAL = 0 StateFlags_ACTIVE = 1 StateFlags_PRELIGHT = 2 StateFlags_SELECTED = 4 StateFlags_INSENSITIVE = 8 StateFlags_INCONSISTENT = 16 StateFlags_FOCUSED = 32 StateFlags_BACKDROP = 64 StateFlags_DIR_LTR = 128 StateFlags_DIR_RTL = 256 StateFlags_LINK = 512 StateFlags_VISITED = 1024 StateFlags_CHECKED = 2048 StateFlags_DROP_ACTIVE = 4096 StateFlags_FOCUS_VISIBLE = 8192 StateFlags_FOCUS_WITHIN = 16384
            (GLib.g_type(::Type{T}) where T <: StateFlags) = begin
                    ccall(("gtk_state_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag StyleContextPrintFlags::UInt32 StyleContextPrintFlags_NONE = 0 StyleContextPrintFlags_RECURSE = 1 StyleContextPrintFlags_SHOW_STYLE = 2 StyleContextPrintFlags_SHOW_CHANGE = 4
            (GLib.g_type(::Type{T}) where T <: StyleContextPrintFlags) = begin
                    ccall(("gtk_style_context_print_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag TextSearchFlags::UInt32 TextSearchFlags_VISIBLE_ONLY = 1 TextSearchFlags_TEXT_ONLY = 2 TextSearchFlags_CASE_INSENSITIVE = 4 TextSearchFlags_NONE = 0
            (GLib.g_type(::Type{T}) where T <: TextSearchFlags) = begin
                    ccall(("gtk_text_search_flags_get_type", libgtk4), GType, ())
                end
        end
        begin
            @bitflag TreeModelFlags::UInt32 TreeModelFlags_ITERS_PERSIST = 1 TreeModelFlags_LIST_ONLY = 2 TreeModelFlags_NONE = 0
            (GLib.g_type(::Type{T}) where T <: TreeModelFlags) = begin
                    ccall(("gtk_tree_model_flags_get_type", libgtk4), GType, ())
                end
        end
        @doc "An undefined value. The accessible attribute is either unset, or its\nvalue is undefined.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_VALUE_UNDEFINED.html)." ACCESSIBLE_VALUE_UNDEFINED
        @doc "Like gtk_get_binary_age(), but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.BINARY_AGE.html)." BINARY_AGE
        @doc "Constant to return from a signal handler for the ::input\nsignal in case of conversion failure.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.INPUT_ERROR.html)." INPUT_ERROR
        @doc "Like gtk_get_interface_age(), but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.INTERFACE_AGE.html)." INTERFACE_AGE
        @doc "The value used to refer to a guaranteed invalid position\nin a `GListModel`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.INVALID_LIST_POSITION.html)." INVALID_LIST_POSITION
        @doc "The name used for the stock full offset included by `GtkLevelBar`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.LEVEL_BAR_OFFSET_FULL.html)." LEVEL_BAR_OFFSET_FULL
        @doc "The name used for the stock high offset included by `GtkLevelBar`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.LEVEL_BAR_OFFSET_HIGH.html)." LEVEL_BAR_OFFSET_HIGH
        @doc "The name used for the stock low offset included by `GtkLevelBar`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.LEVEL_BAR_OFFSET_LOW.html)." LEVEL_BAR_OFFSET_LOW
        @doc "Like gtk_get_major_version(), but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.MAJOR_VERSION.html)." MAJOR_VERSION
        @doc "Like gtk_get_micro_version(), but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.MICRO_VERSION.html)." MICRO_VERSION
        @doc "Like gtk_get_minor_version(), but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.MINOR_VERSION.html)." MINOR_VERSION
        @doc "Name for the A3 paper size.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_A3.html)." PAPER_NAME_A3
        @doc "Name for the A4 paper size.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_A4.html)." PAPER_NAME_A4
        @doc "Name for the A5 paper size.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_A5.html)." PAPER_NAME_A5
        @doc "Name for the B5 paper size.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_B5.html)." PAPER_NAME_B5
        @doc "Name for the Executive paper size.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_EXECUTIVE.html)." PAPER_NAME_EXECUTIVE
        @doc "Name for the Legal paper size.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_LEGAL.html)." PAPER_NAME_LEGAL
        @doc "Name for the Letter paper size.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_LETTER.html)." PAPER_NAME_LETTER
        @doc "The key used by the “Print to file” printer to store the file\nname of the output without the path to the directory and the\nfile extension.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PRINT_SETTINGS_OUTPUT_BASENAME.html)." PRINT_SETTINGS_OUTPUT_BASENAME
        @doc "The key used by the “Print to file” printer to store the\ndirectory to which the output should be written.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PRINT_SETTINGS_OUTPUT_DIR.html)." PRINT_SETTINGS_OUTPUT_DIR
        @doc "The key used by the “Print to file” printer to store the format\nof the output. The supported values are “PS” and “PDF”.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PRINT_SETTINGS_OUTPUT_FILE_FORMAT.html)." PRINT_SETTINGS_OUTPUT_FILE_FORMAT
        @doc "The key used by the “Print to file” printer to store the URI\nto which the output should be written. GTK itself supports\nonly “file://” URIs.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PRINT_SETTINGS_OUTPUT_URI.html)." PRINT_SETTINGS_OUTPUT_URI
        @doc "Use this priority for functionality related to size allocation.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.PRIORITY_RESIZE.html)." PRIORITY_RESIZE
        @doc "A priority that can be used when adding a `GtkStyleProvider`\nfor application-specific style information.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_APPLICATION.html)." STYLE_PROVIDER_PRIORITY_APPLICATION
        @doc "The priority used for default style information\nthat is used in the absence of themes.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_FALLBACK.html)." STYLE_PROVIDER_PRIORITY_FALLBACK
        @doc "The priority used for style information provided\nvia `GtkSettings`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_SETTINGS.html)." STYLE_PROVIDER_PRIORITY_SETTINGS
        @doc "The priority used for style information provided\nby themes.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_THEME.html)." STYLE_PROVIDER_PRIORITY_THEME
        @doc "The priority used for the style information from\n`\$XDG_CONFIG_HOME/gtk-4.0/gtk.css`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_USER.html)." STYLE_PROVIDER_PRIORITY_USER
        @doc "The priority at which the text view validates onscreen lines\nin an idle job in the background.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.TEXT_VIEW_PRIORITY_VALIDATE.html)." TEXT_VIEW_PRIORITY_VALIDATE
        @doc "Uses the default sort function in a [iface@Gtk.TreeSortable].\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID.html)." TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID
        @doc "Disables sorting in a [iface@Gtk.TreeSortable].\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/const.TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID.html)." TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID
        @doc "The possible values for the %GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE\naccessible property.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleAutocomplete.html)." AccessibleAutocomplete
        @doc "The possible values for the %GTK_ACCESSIBLE_STATE_INVALID\naccessible state.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleInvalidState.html)." AccessibleInvalidState
        @doc "The possible accessible properties of a `GtkAccessible`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleProperty.html)." AccessibleProperty
        @doc "The possible accessible relations of a `GtkAccessible`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleRelation.html)." AccessibleRelation
        @doc "The accessible role for a `GtkAccessible` implementation.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleRole.html)." AccessibleRole
        @doc "The possible values for the %GTK_ACCESSIBLE_PROPERTY_SORT\naccessible property.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleSort.html)." AccessibleSort
        @doc "The possible accessible states of a `GtkAccessible`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleState.html)." AccessibleState
        @doc "The possible values for the %GTK_ACCESSIBLE_STATE_PRESSED\naccessible state.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleTristate.html)." AccessibleTristate
        @doc "Controls how a widget deals with extra space in a single dimension.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.Align.html)." Align
        @doc "Used to indicate the direction in which an arrow should point.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ArrowType.html)." ArrowType
        @doc "Determines the page role inside a `GtkAssistant`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.AssistantPageType.html)." AssistantPageType
        @doc "Baseline position in a row of widgets.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.BaselinePosition.html)." BaselinePosition
        @doc "Describes how the border of a UI element should be rendered.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.BorderStyle.html)." BorderStyle
        @doc "Error codes that identify various errors that can occur while using\n`GtkBuilder`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.BuilderError.html)." BuilderError
        @doc "Prebuilt sets of buttons for `GtkDialog`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ButtonsType.html)." ButtonsType
        @doc "Determines if the edited accelerators are GTK accelerators. If\nthey are, consumed modifiers are suppressed, only accelerators\naccepted by GTK are allowed, and the accelerators are rendered\nin the same way as they are in menus.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.CellRendererAccelMode.html)." CellRendererAccelMode
        @doc "Identifies how the user can interact with a particular cell.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.CellRendererMode.html)." CellRendererMode
        @doc "The widget attributes that can be used when creating a `GtkConstraint`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ConstraintAttribute.html)." ConstraintAttribute
        @doc "The relation between two terms of a constraint.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ConstraintRelation.html)." ConstraintRelation
        @doc "The strength of a constraint, expressed as a symbolic constant.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ConstraintStrength.html)." ConstraintStrength
        @doc "Domain for VFL parsing errors.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ConstraintVflParserError.html)." ConstraintVflParserError
        @doc "Specifies which corner a child widget should be placed in when packed into\na `GtkScrolledWindow.`\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.CornerType.html)." CornerType
        @doc "Errors that can occur while parsing CSS.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.CssParserError.html)." CssParserError
        @doc "Warnings that can occur while parsing CSS.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.CssParserWarning.html)." CssParserWarning
        @doc "Passed to various keybinding signals for deleting text.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.DeleteType.html)." DeleteType
        @doc "Focus movement types.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.DirectionType.html)." DirectionType
        @doc "Specifies the side of the entry at which an icon is placed.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.EntryIconPosition.html)." EntryIconPosition
        @doc "Describes the state of a `GdkEventSequence` in a `GtkGesture`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.EventSequenceState.html)." EventSequenceState
        @doc "Describes whether a `GtkFileChooser` is being used to open existing files\nor to save to a possibly new file.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.FileChooserAction.html)." FileChooserAction
        @doc "These identify the various errors that can occur while calling\n`GtkFileChooser` functions.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.FileChooserError.html)." FileChooserError
        @doc "Describes changes in a filter in more detail and allows objects\nusing the filter to optimize refiltering items.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.FilterChange.html)." FilterChange
        @doc "Describes the known strictness of a filter.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.FilterMatch.html)." FilterMatch
        @doc "Built-in icon sizes.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.IconSize.html)." IconSize
        @doc "Error codes for `GtkIconTheme` operations.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.IconThemeError.html)." IconThemeError
        @doc "An enum for determining where a dropped item goes.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.IconViewDropPosition.html)." IconViewDropPosition
        @doc "Describes the image data representation used by a [class@Gtk.Image].\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ImageType.html)." ImageType
        @doc "Describes primary purpose of the input widget.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.InputPurpose.html)." InputPurpose
        @doc "Used for justifying the text inside a `GtkLabel` widget.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.Justification.html)." Justification
        @doc "Describes how `GtkLevelBar` contents should be rendered.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.LevelBarMode.html)." LevelBarMode
        @doc "The type of license for an application.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.License.html)." License
        @doc "The type of message being displayed in a `GtkMessageDialog`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.MessageType.html)." MessageType
        @doc "Passed as argument to various keybinding signals for moving the\ncursor position.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.MovementStep.html)." MovementStep
        @doc "The parameter used in the action signals of `GtkNotebook`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.NotebookTab.html)." NotebookTab
        @doc "Used to determine the layout of pages on a sheet when printing\nmultiple pages per sheet.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.NumberUpLayout.html)." NumberUpLayout
        @doc "Describes the way two values can be compared.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.Ordering.html)." Ordering
        @doc "Represents the orientation of widgets and other objects.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.Orientation.html)." Orientation
        @doc "Defines how content overflowing a given area should be handled.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.Overflow.html)." Overflow
        @doc "Represents the packing location of a children in its parent.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PackType.html)." PackType
        @doc "The type of a pad action.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PadActionType.html)." PadActionType
        @doc "See also gtk_print_settings_set_orientation().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PageOrientation.html)." PageOrientation
        @doc "See also gtk_print_job_set_page_set().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PageSet.html)." PageSet
        @doc "Describes the panning direction of a `GtkGesturePan`\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PanDirection.html)." PanDirection
        @doc "Determines how the size should be computed to achieve the one of the\nvisibility mode for the scrollbars.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PolicyType.html)." PolicyType
        @doc "Describes which edge of a widget a certain feature is positioned at.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PositionType.html)." PositionType
        @doc "See also gtk_print_settings_set_duplex().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintDuplex.html)." PrintDuplex
        @doc "Error codes that identify various errors that can occur while\nusing the GTK printing support.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintError.html)." PrintError
        @doc "Determines what action the print operation should perform.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintOperationAction.html)." PrintOperationAction
        @doc "The result of a print operation.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintOperationResult.html)." PrintOperationResult
        @doc "See also gtk_print_job_set_pages()\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintPages.html)." PrintPages
        @doc "See also gtk_print_settings_set_quality().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintQuality.html)." PrintQuality
        @doc "The status gives a rough indication of the completion of a running\nprint operation.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintStatus.html)." PrintStatus
        @doc "Describes limits of a `GtkEventController` for handling events\ntargeting other widgets.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PropagationLimit.html)." PropagationLimit
        @doc "Describes the stage at which events are fed into a `GtkEventController`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.PropagationPhase.html)." PropagationPhase
        @doc "Error codes for `GtkRecentManager` operations\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.RecentManagerError.html)." RecentManagerError
        @doc "Predefined values for use as response ids in gtk_dialog_add_button().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ResponseType.html)." ResponseType
        @doc "These enumeration values describe the possible transitions\nwhen the child of a `GtkRevealer` widget is shown or hidden.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.RevealerTransitionType.html)." RevealerTransitionType
        @doc "Passed as argument to various keybinding signals.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ScrollStep.html)." ScrollStep
        @doc "Scrolling types.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ScrollType.html)." ScrollType
        @doc "Defines the policy to be used in a scrollable widget when updating\nthe scrolled window adjustments in a given orientation.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ScrollablePolicy.html)." ScrollablePolicy
        @doc "Used to control what selections users are allowed to make.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SelectionMode.html)." SelectionMode
        @doc "Determines how GTK handles the sensitivity of various controls,\nsuch as combo box buttons.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SensitivityType.html)." SensitivityType
        @doc "Describes where `GtkShortcut`s added to a\n`GtkShortcutController` get handled.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ShortcutScope.html)." ShortcutScope
        @doc "GtkShortcutType specifies the kind of shortcut that is being described.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.ShortcutType.html)." ShortcutType
        @doc "The mode of the size group determines the directions in which the size\ngroup affects the requested sizes of its component widgets.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SizeGroupMode.html)." SizeGroupMode
        @doc "Specifies a preference for height-for-width or\nwidth-for-height geometry management.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SizeRequestMode.html)." SizeRequestMode
        @doc "Determines the direction of a sort.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SortType.html)." SortType
        @doc "Describes changes in a sorter in more detail and allows users\nto optimize resorting.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SorterChange.html)." SorterChange
        @doc "Describes the type of order that a `GtkSorter` may produce.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SorterOrder.html)." SorterOrder
        @doc "Determines whether the spin button displays values outside the adjustment\nbounds.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SpinButtonUpdatePolicy.html)." SpinButtonUpdatePolicy
        @doc "The values of the GtkSpinType enumeration are used to specify the\nchange to make in gtk_spin_button_spin().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SpinType.html)." SpinType
        @doc "Possible transitions between pages in a `GtkStack` widget.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.StackTransitionType.html)." StackTransitionType
        @doc "Specifies how search strings are matched inside text.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.StringFilterMatchMode.html)." StringFilterMatchMode
        @doc "Values that can be passed to the [vfunc@Gtk.Widget.system_setting_changed]\nvfunc.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.SystemSetting.html)." SystemSetting
        @doc "Reading directions for text.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.TextDirection.html)." TextDirection
        @doc "Granularity types that extend the text selection. Use the\n`GtkTextView::extend-selection` signal to customize the selection.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.TextExtendSelection.html)." TextExtendSelection
        @doc "Used to reference the layers of `GtkTextView` for the purpose of customized\ndrawing with the ::snapshot_layer vfunc.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.TextViewLayer.html)." TextViewLayer
        @doc "Used to reference the parts of `GtkTextView`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.TextWindowType.html)." TextWindowType
        @doc "The sizing method the column uses to determine its width.  Please note\nthat %GTK_TREE_VIEW_COLUMN_AUTOSIZE are inefficient for large views, and\ncan make columns appear choppy.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.TreeViewColumnSizing.html)." TreeViewColumnSizing
        @doc "An enum for determining where a dropped row goes.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.TreeViewDropPosition.html)." TreeViewDropPosition
        @doc "Used to indicate which grid lines to draw in a tree view.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.TreeViewGridLines.html)." TreeViewGridLines
        @doc "See also gtk_print_settings_set_paper_width().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.Unit.html)." Unit
        @doc "Describes a type of line wrapping.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/enum.WrapMode.html)." WrapMode
        @doc "Types of user actions that may be blocked by `GtkApplication`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.ApplicationInhibitFlags.html)." ApplicationInhibitFlags
        @doc "The list of flags that can be passed to gtk_builder_create_closure().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.BuilderClosureFlags.html)." BuilderClosureFlags
        @doc "Tells how a cell is to be rendered.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.CellRendererState.html)." CellRendererState
        @doc "Flags to use with gtk_set_debug_flags().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.DebugFlags.html)." DebugFlags
        @doc "Flags used to influence dialog construction.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.DialogFlags.html)." DialogFlags
        @doc "Describes the behavior of a `GtkEventControllerScroll`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.EventControllerScrollFlags.html)." EventControllerScrollFlags
        @doc "Specifies the granularity of font selection\nthat is desired in a `GtkFontChooser`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.FontChooserLevel.html)." FontChooserLevel
        @doc "Used to specify options for gtk_icon_theme_lookup_icon().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.IconLookupFlags.html)." IconLookupFlags
        @doc "Describes hints that might be taken into account by input methods\nor applications.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.InputHints.html)." InputHints
        @doc "Flags that influence the behavior of gtk_widget_pick().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.PickFlags.html)." PickFlags
        @doc "Flags that affect how popover menus are created from\na menu model.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.PopoverMenuFlags.html)." PopoverMenuFlags
        @doc "Specifies which features the print dialog should offer.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.PrintCapabilities.html)." PrintCapabilities
        @doc "List of flags that can be passed to action activation.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.ShortcutActionFlags.html)." ShortcutActionFlags
        @doc "Describes a widget state.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.StateFlags.html)." StateFlags
        @doc "Flags that modify the behavior of gtk_style_context_to_string().\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.StyleContextPrintFlags.html)." StyleContextPrintFlags
        @doc "Flags affecting how a search is done.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.TextSearchFlags.html)." TextSearchFlags
        @doc "These flags indicate various properties of a `GtkTreeModel`.\n \nDetails can be found in the [GTK docs](https://docs.gtk.org/gtk4/flags.TreeModelFlags.html)." TreeModelFlags
        export AccessibleAutocomplete, AccessibleInvalidState, AccessibleProperty, AccessibleRelation, AccessibleRole, AccessibleSort, AccessibleState, AccessibleTristate, Align, ArrowType, AssistantPageType, BaselinePosition, BorderStyle, BuilderError, ButtonsType, CellRendererAccelMode, CellRendererMode, ConstraintAttribute, ConstraintRelation, ConstraintStrength, ConstraintVflParserError, CornerType, CssParserError, CssParserWarning, DeleteType, DirectionType, EditableProperties, EntryIconPosition, EventSequenceState, FileChooserAction, FileChooserError, FilterChange, FilterMatch, IconSize, IconThemeError, IconViewDropPosition, ImageType, InputPurpose, Justification, LevelBarMode, License, MessageType, MovementStep, NotebookTab, NumberUpLayout, Ordering, Orientation, Overflow, PackType, PadActionType, PageOrientation, PageSet, PanDirection, PolicyType, PositionType, PrintDuplex, PrintError, PrintOperationAction, PrintOperationResult, PrintPages, PrintQuality, PrintStatus, PropagationLimit, PropagationPhase, RecentManagerError, ResponseType, RevealerTransitionType, ScrollStep, ScrollType, ScrollablePolicy, SelectionMode, SensitivityType, ShortcutScope, ShortcutType, SizeGroupMode, SizeRequestMode, SortType, SorterChange, SorterOrder, SpinButtonUpdatePolicy, SpinType, StackTransitionType, StringFilterMatchMode, SystemSetting, TextDirection, TextExtendSelection, TextViewLayer, TextWindowType, TreeViewColumnSizing, TreeViewDropPosition, TreeViewGridLines, Unit, WrapMode, ApplicationInhibitFlags, BuilderClosureFlags, CellRendererState, DebugFlags, DialogFlags, EventControllerScrollFlags, FontChooserLevel, IconLookupFlags, InputHints, PickFlags, PopoverMenuFlags, PrintCapabilities, ShortcutActionFlags, StateFlags, StyleContextPrintFlags, TextSearchFlags, TreeModelFlags
    end
end))
end
