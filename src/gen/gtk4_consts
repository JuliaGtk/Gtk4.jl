const ACCESSIBLE_ATTRIBUTE_BACKGROUND = "bg-color"
const ACCESSIBLE_ATTRIBUTE_FAMILY = "family-name"
const ACCESSIBLE_ATTRIBUTE_FOREGROUND = "fg-color"
const ACCESSIBLE_ATTRIBUTE_OVERLINE = "overline"
const ACCESSIBLE_ATTRIBUTE_OVERLINE_NONE = "none"
const ACCESSIBLE_ATTRIBUTE_OVERLINE_SINGLE = "single"
const ACCESSIBLE_ATTRIBUTE_SIZE = "size"
const ACCESSIBLE_ATTRIBUTE_STRETCH = "stretch"
const ACCESSIBLE_ATTRIBUTE_STRETCH_CONDENSED = "condensed"
const ACCESSIBLE_ATTRIBUTE_STRETCH_EXPANDED = "expanded"
const ACCESSIBLE_ATTRIBUTE_STRETCH_EXTRA_CONDENSED = "extra_condensed"
const ACCESSIBLE_ATTRIBUTE_STRETCH_EXTRA_EXPANDED = "extra_expanded"
const ACCESSIBLE_ATTRIBUTE_STRETCH_NORMAL = "normal"
const ACCESSIBLE_ATTRIBUTE_STRETCH_SEMI_CONDENSED = "semi_condensed"
const ACCESSIBLE_ATTRIBUTE_STRETCH_SEMI_EXPANDED = "semi_expanded"
const ACCESSIBLE_ATTRIBUTE_STRETCH_ULTRA_CONDENSED = "ultra_condensed"
const ACCESSIBLE_ATTRIBUTE_STRETCH_ULTRA_EXPANDED = "ultra_expanded"
const ACCESSIBLE_ATTRIBUTE_STRIKETHROUGH = "strikethrough"
const ACCESSIBLE_ATTRIBUTE_STYLE = "style"
const ACCESSIBLE_ATTRIBUTE_STYLE_ITALIC = "italic"
const ACCESSIBLE_ATTRIBUTE_STYLE_NORMAL = "normal"
const ACCESSIBLE_ATTRIBUTE_STYLE_OBLIQUE = "oblique"
const ACCESSIBLE_ATTRIBUTE_UNDERLINE = "underline"
const ACCESSIBLE_ATTRIBUTE_UNDERLINE_DOUBLE = "double"
const ACCESSIBLE_ATTRIBUTE_UNDERLINE_ERROR = "error"
const ACCESSIBLE_ATTRIBUTE_UNDERLINE_NONE = "none"
const ACCESSIBLE_ATTRIBUTE_UNDERLINE_SINGLE = "single"
const ACCESSIBLE_ATTRIBUTE_VARIANT = "variant"
const ACCESSIBLE_ATTRIBUTE_VARIANT_ALL_PETITE_CAPS = "all-petite-caps"
const ACCESSIBLE_ATTRIBUTE_VARIANT_ALL_SMALL_CAPS = "all-small-caps"
const ACCESSIBLE_ATTRIBUTE_VARIANT_PETITE_CAPS = "petite-caps"
const ACCESSIBLE_ATTRIBUTE_VARIANT_SMALL_CAPS = "small-caps"
const ACCESSIBLE_ATTRIBUTE_VARIANT_TITLE_CAPS = "title-caps"
const ACCESSIBLE_ATTRIBUTE_VARIANT_UNICASE = "unicase"
const ACCESSIBLE_ATTRIBUTE_WEIGHT = "weight"
const ACCESSIBLE_VALUE_UNDEFINED = -1
const BINARY_AGE = 1405
const IM_MODULE_EXTENSION_POINT_NAME = "gtk-im-module"
const INPUT_ERROR = -1
const INTERFACE_AGE = 5
const INVALID_LIST_POSITION = 0xffffffff
const LEVEL_BAR_OFFSET_FULL = "full"
const LEVEL_BAR_OFFSET_HIGH = "high"
const LEVEL_BAR_OFFSET_LOW = "low"
const MAJOR_VERSION = 4
const MAX_COMPOSE_LEN = 7
const MEDIA_FILE_EXTENSION_POINT_NAME = "gtk-media-file"
const MICRO_VERSION = 5
const MINOR_VERSION = 14
const PAPER_NAME_A3 = "iso_a3"
const PAPER_NAME_A4 = "iso_a4"
const PAPER_NAME_A5 = "iso_a5"
const PAPER_NAME_B5 = "iso_b5"
const PAPER_NAME_EXECUTIVE = "na_executive"
const PAPER_NAME_LEGAL = "na_legal"
const PAPER_NAME_LETTER = "na_letter"
const PRINT_SETTINGS_COLLATE = "collate"
const PRINT_SETTINGS_DEFAULT_SOURCE = "default-source"
const PRINT_SETTINGS_DITHER = "dither"
const PRINT_SETTINGS_DUPLEX = "duplex"
const PRINT_SETTINGS_FINISHINGS = "finishings"
const PRINT_SETTINGS_MEDIA_TYPE = "media-type"
const PRINT_SETTINGS_NUMBER_UP = "number-up"
const PRINT_SETTINGS_NUMBER_UP_LAYOUT = "number-up-layout"
const PRINT_SETTINGS_N_COPIES = "n-copies"
const PRINT_SETTINGS_ORIENTATION = "orientation"
const PRINT_SETTINGS_OUTPUT_BASENAME = "output-basename"
const PRINT_SETTINGS_OUTPUT_BIN = "output-bin"
const PRINT_SETTINGS_OUTPUT_DIR = "output-dir"
const PRINT_SETTINGS_OUTPUT_FILE_FORMAT = "output-file-format"
const PRINT_SETTINGS_OUTPUT_URI = "output-uri"
const PRINT_SETTINGS_PAGE_RANGES = "page-ranges"
const PRINT_SETTINGS_PAGE_SET = "page-set"
const PRINT_SETTINGS_PAPER_FORMAT = "paper-format"
const PRINT_SETTINGS_PAPER_HEIGHT = "paper-height"
const PRINT_SETTINGS_PAPER_WIDTH = "paper-width"
const PRINT_SETTINGS_PRINTER = "printer"
const PRINT_SETTINGS_PRINTER_LPI = "printer-lpi"
const PRINT_SETTINGS_PRINT_PAGES = "print-pages"
const PRINT_SETTINGS_QUALITY = "quality"
const PRINT_SETTINGS_RESOLUTION = "resolution"
const PRINT_SETTINGS_RESOLUTION_X = "resolution-x"
const PRINT_SETTINGS_RESOLUTION_Y = "resolution-y"
const PRINT_SETTINGS_REVERSE = "reverse"
const PRINT_SETTINGS_SCALE = "scale"
const PRINT_SETTINGS_USE_COLOR = "use-color"
const PRINT_SETTINGS_WIN32_DRIVER_EXTRA = "win32-driver-extra"
const PRINT_SETTINGS_WIN32_DRIVER_VERSION = "win32-driver-version"
const PRIORITY_RESIZE = 110
const STYLE_PROVIDER_PRIORITY_APPLICATION = 600
const STYLE_PROVIDER_PRIORITY_FALLBACK = 1
const STYLE_PROVIDER_PRIORITY_SETTINGS = 400
const STYLE_PROVIDER_PRIORITY_THEME = 200
const STYLE_PROVIDER_PRIORITY_USER = 800
const TEXT_VIEW_PRIORITY_VALIDATE = 125
const TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID = -1
const TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID = -2
@cenum(AccessibleAnnouncementPriority::Int32, AccessibleAnnouncementPriority_LOW = 0, AccessibleAnnouncementPriority_MEDIUM = 1, AccessibleAnnouncementPriority_HIGH = 2)
(GLib.g_type(::Type{T}) where T <: AccessibleAnnouncementPriority) = ccall(("gtk_accessible_announcement_priority_get_type", libgtk4), GType, ())
@cenum(AccessibleAutocomplete::Int32, AccessibleAutocomplete_NONE = 0, AccessibleAutocomplete_INLINE = 1, AccessibleAutocomplete_LIST = 2, AccessibleAutocomplete_BOTH = 3)
(GLib.g_type(::Type{T}) where T <: AccessibleAutocomplete) = ccall(("gtk_accessible_autocomplete_get_type", libgtk4), GType, ())
@cenum(AccessibleInvalidState::Int32, AccessibleInvalidState_FALSE = 0, AccessibleInvalidState_TRUE = 1, AccessibleInvalidState_GRAMMAR = 2, AccessibleInvalidState_SPELLING = 3)
(GLib.g_type(::Type{T}) where T <: AccessibleInvalidState) = ccall(("gtk_accessible_invalid_state_get_type", libgtk4), GType, ())
@cenum(AccessiblePlatformState::Int32, AccessiblePlatformState_FOCUSABLE = 0, AccessiblePlatformState_FOCUSED = 1, AccessiblePlatformState_ACTIVE = 2)
(GLib.g_type(::Type{T}) where T <: AccessiblePlatformState) = ccall(("gtk_accessible_platform_state_get_type", libgtk4), GType, ())
@cenum(AccessibleProperty::Int32, AccessibleProperty_AUTOCOMPLETE = 0, AccessibleProperty_DESCRIPTION = 1, AccessibleProperty_HAS_POPUP = 2, AccessibleProperty_KEY_SHORTCUTS = 3, AccessibleProperty_LABEL = 4, AccessibleProperty_LEVEL = 5, AccessibleProperty_MODAL = 6, AccessibleProperty_MULTI_LINE = 7, AccessibleProperty_MULTI_SELECTABLE = 8, AccessibleProperty_ORIENTATION = 9, AccessibleProperty_PLACEHOLDER = 10, AccessibleProperty_READ_ONLY = 11, AccessibleProperty_REQUIRED = 12, AccessibleProperty_ROLE_DESCRIPTION = 13, AccessibleProperty_SORT = 14, AccessibleProperty_VALUE_MAX = 15, AccessibleProperty_VALUE_MIN = 16, AccessibleProperty_VALUE_NOW = 17, AccessibleProperty_VALUE_TEXT = 18)
(GLib.g_type(::Type{T}) where T <: AccessibleProperty) = ccall(("gtk_accessible_property_get_type", libgtk4), GType, ())
@cenum(AccessibleRelation::Int32, AccessibleRelation_ACTIVE_DESCENDANT = 0, AccessibleRelation_COL_COUNT = 1, AccessibleRelation_COL_INDEX = 2, AccessibleRelation_COL_INDEX_TEXT = 3, AccessibleRelation_COL_SPAN = 4, AccessibleRelation_CONTROLS = 5, AccessibleRelation_DESCRIBED_BY = 6, AccessibleRelation_DETAILS = 7, AccessibleRelation_ERROR_MESSAGE = 8, AccessibleRelation_FLOW_TO = 9, AccessibleRelation_LABELLED_BY = 10, AccessibleRelation_OWNS = 11, AccessibleRelation_POS_IN_SET = 12, AccessibleRelation_ROW_COUNT = 13, AccessibleRelation_ROW_INDEX = 14, AccessibleRelation_ROW_INDEX_TEXT = 15, AccessibleRelation_ROW_SPAN = 16, AccessibleRelation_SET_SIZE = 17)
(GLib.g_type(::Type{T}) where T <: AccessibleRelation) = ccall(("gtk_accessible_relation_get_type", libgtk4), GType, ())
@cenum(AccessibleRole::Int32, AccessibleRole_ALERT = 0, AccessibleRole_ALERT_DIALOG = 1, AccessibleRole_BANNER = 2, AccessibleRole_BUTTON = 3, AccessibleRole_CAPTION = 4, AccessibleRole_CELL = 5, AccessibleRole_CHECKBOX = 6, AccessibleRole_COLUMN_HEADER = 7, AccessibleRole_COMBO_BOX = 8, AccessibleRole_COMMAND = 9, AccessibleRole_COMPOSITE = 10, AccessibleRole_DIALOG = 11, AccessibleRole_DOCUMENT = 12, AccessibleRole_FEED = 13, AccessibleRole_FORM = 14, AccessibleRole_GENERIC = 15, AccessibleRole_GRID = 16, AccessibleRole_GRID_CELL = 17, AccessibleRole_GROUP = 18, AccessibleRole_HEADING = 19, AccessibleRole_IMG = 20, AccessibleRole_INPUT = 21, AccessibleRole_LABEL = 22, AccessibleRole_LANDMARK = 23, AccessibleRole_LEGEND = 24, AccessibleRole_LINK = 25, AccessibleRole_LIST = 26, AccessibleRole_LIST_BOX = 27, AccessibleRole_LIST_ITEM = 28, AccessibleRole_LOG = 29, AccessibleRole_MAIN = 30, AccessibleRole_MARQUEE = 31, AccessibleRole_MATH = 32, AccessibleRole_METER = 33, AccessibleRole_MENU = 34, AccessibleRole_MENU_BAR = 35, AccessibleRole_MENU_ITEM = 36, AccessibleRole_MENU_ITEM_CHECKBOX = 37, AccessibleRole_MENU_ITEM_RADIO = 38, AccessibleRole_NAVIGATION = 39, AccessibleRole_NONE = 40, AccessibleRole_NOTE = 41, AccessibleRole_OPTION = 42, AccessibleRole_PRESENTATION = 43, AccessibleRole_PROGRESS_BAR = 44, AccessibleRole_RADIO = 45, AccessibleRole_RADIO_GROUP = 46, AccessibleRole_RANGE = 47, AccessibleRole_REGION = 48, AccessibleRole_ROW = 49, AccessibleRole_ROW_GROUP = 50, AccessibleRole_ROW_HEADER = 51, AccessibleRole_SCROLLBAR = 52, AccessibleRole_SEARCH = 53, AccessibleRole_SEARCH_BOX = 54, AccessibleRole_SECTION = 55, AccessibleRole_SECTION_HEAD = 56, AccessibleRole_SELECT = 57, AccessibleRole_SEPARATOR = 58, AccessibleRole_SLIDER = 59, AccessibleRole_SPIN_BUTTON = 60, AccessibleRole_STATUS = 61, AccessibleRole_STRUCTURE = 62, AccessibleRole_SWITCH = 63, AccessibleRole_TAB = 64, AccessibleRole_TABLE = 65, AccessibleRole_TAB_LIST = 66, AccessibleRole_TAB_PANEL = 67, AccessibleRole_TEXT_BOX = 68, AccessibleRole_TIME = 69, AccessibleRole_TIMER = 70, AccessibleRole_TOOLBAR = 71, AccessibleRole_TOOLTIP = 72, AccessibleRole_TREE = 73, AccessibleRole_TREE_GRID = 74, AccessibleRole_TREE_ITEM = 75, AccessibleRole_WIDGET = 76, AccessibleRole_WINDOW = 77, AccessibleRole_TOGGLE_BUTTON = 78, AccessibleRole_APPLICATION = 79, AccessibleRole_PARAGRAPH = 80, AccessibleRole_BLOCK_QUOTE = 81, AccessibleRole_ARTICLE = 82, AccessibleRole_COMMENT = 83, AccessibleRole_TERMINAL = 84)
(GLib.g_type(::Type{T}) where T <: AccessibleRole) = ccall(("gtk_accessible_role_get_type", libgtk4), GType, ())
@cenum(AccessibleSort::Int32, AccessibleSort_NONE = 0, AccessibleSort_ASCENDING = 1, AccessibleSort_DESCENDING = 2, AccessibleSort_OTHER = 3)
(GLib.g_type(::Type{T}) where T <: AccessibleSort) = ccall(("gtk_accessible_sort_get_type", libgtk4), GType, ())
@cenum(AccessibleState::Int32, AccessibleState_BUSY = 0, AccessibleState_CHECKED = 1, AccessibleState_DISABLED = 2, AccessibleState_EXPANDED = 3, AccessibleState_HIDDEN = 4, AccessibleState_INVALID = 5, AccessibleState_PRESSED = 6, AccessibleState_SELECTED = 7, AccessibleState_VISITED = 8)
(GLib.g_type(::Type{T}) where T <: AccessibleState) = ccall(("gtk_accessible_state_get_type", libgtk4), GType, ())
@cenum(AccessibleTextContentChange::Int32, AccessibleTextContentChange_INSERT = 0, AccessibleTextContentChange_REMOVE = 1)
(GLib.g_type(::Type{T}) where T <: AccessibleTextContentChange) = ccall(("gtk_accessible_text_content_change_get_type", libgtk4), GType, ())
@cenum(AccessibleTextGranularity::Int32, AccessibleTextGranularity_CHARACTER = 0, AccessibleTextGranularity_WORD = 1, AccessibleTextGranularity_SENTENCE = 2, AccessibleTextGranularity_LINE = 3, AccessibleTextGranularity_PARAGRAPH = 4)
(GLib.g_type(::Type{T}) where T <: AccessibleTextGranularity) = ccall(("gtk_accessible_text_granularity_get_type", libgtk4), GType, ())
@cenum(AccessibleTristate::Int32, AccessibleTristate_FALSE = 0, AccessibleTristate_TRUE = 1, AccessibleTristate_MIXED = 2)
(GLib.g_type(::Type{T}) where T <: AccessibleTristate) = ccall(("gtk_accessible_tristate_get_type", libgtk4), GType, ())
@cenum(Align::Int32, Align_FILL = 0, Align_START = 1, Align_END = 2, Align_CENTER = 3, Align_BASELINE_FILL = 4, Align_BASELINE = 4, Align_BASELINE_CENTER = 5)
(GLib.g_type(::Type{T}) where T <: Align) = ccall(("gtk_align_get_type", libgtk4), GType, ())
@cenum(ArrowType::Int32, ArrowType_UP = 0, ArrowType_DOWN = 1, ArrowType_LEFT = 2, ArrowType_RIGHT = 3, ArrowType_NONE = 4)
(GLib.g_type(::Type{T}) where T <: ArrowType) = ccall(("gtk_arrow_type_get_type", libgtk4), GType, ())
@cenum(AssistantPageType::Int32, AssistantPageType_CONTENT = 0, AssistantPageType_INTRO = 1, AssistantPageType_CONFIRM = 2, AssistantPageType_SUMMARY = 3, AssistantPageType_PROGRESS = 4, AssistantPageType_CUSTOM = 5)
(GLib.g_type(::Type{T}) where T <: AssistantPageType) = ccall(("gtk_assistant_page_type_get_type", libgtk4), GType, ())
@cenum(BaselinePosition::Int32, BaselinePosition_TOP = 0, BaselinePosition_CENTER = 1, BaselinePosition_BOTTOM = 2)
(GLib.g_type(::Type{T}) where T <: BaselinePosition) = ccall(("gtk_baseline_position_get_type", libgtk4), GType, ())
@cenum(BorderStyle::Int32, BorderStyle_NONE = 0, BorderStyle_HIDDEN = 1, BorderStyle_SOLID = 2, BorderStyle_INSET = 3, BorderStyle_OUTSET = 4, BorderStyle_DOTTED = 5, BorderStyle_DASHED = 6, BorderStyle_DOUBLE = 7, BorderStyle_GROOVE = 8, BorderStyle_RIDGE = 9)
(GLib.g_type(::Type{T}) where T <: BorderStyle) = ccall(("gtk_border_style_get_type", libgtk4), GType, ())
@cenum(BuilderError::Int32, BuilderError_INVALID_TYPE_FUNCTION = 0, BuilderError_UNHANDLED_TAG = 1, BuilderError_MISSING_ATTRIBUTE = 2, BuilderError_INVALID_ATTRIBUTE = 3, BuilderError_INVALID_TAG = 4, BuilderError_MISSING_PROPERTY_VALUE = 5, BuilderError_INVALID_VALUE = 6, BuilderError_VERSION_MISMATCH = 7, BuilderError_DUPLICATE_ID = 8, BuilderError_OBJECT_TYPE_REFUSED = 9, BuilderError_TEMPLATE_MISMATCH = 10, BuilderError_INVALID_PROPERTY = 11, BuilderError_INVALID_SIGNAL = 12, BuilderError_INVALID_ID = 13, BuilderError_INVALID_FUNCTION = 14)
(GLib.g_type(::Type{T}) where T <: BuilderError) = ccall(("gtk_builder_error_get_type", libgtk4), GType, ())
@cenum(ButtonsType::Int32, ButtonsType_NONE = 0, ButtonsType_OK = 1, ButtonsType_CLOSE = 2, ButtonsType_CANCEL = 3, ButtonsType_YES_NO = 4, ButtonsType_OK_CANCEL = 5)
(GLib.g_type(::Type{T}) where T <: ButtonsType) = ccall(("gtk_buttons_type_get_type", libgtk4), GType, ())
@cenum(CellRendererAccelMode::Int32, CellRendererAccelMode_GTK = 0, CellRendererAccelMode_OTHER = 1)
(GLib.g_type(::Type{T}) where T <: CellRendererAccelMode) = ccall(("gtk_cell_renderer_accel_mode_get_type", libgtk4), GType, ())
@cenum(CellRendererMode::Int32, CellRendererMode_INERT = 0, CellRendererMode_ACTIVATABLE = 1, CellRendererMode_EDITABLE = 2)
(GLib.g_type(::Type{T}) where T <: CellRendererMode) = ccall(("gtk_cell_renderer_mode_get_type", libgtk4), GType, ())
@cenum(Collation::Int32, Collation_NONE = 0, Collation_UNICODE = 1, Collation_FILENAME = 2)
(GLib.g_type(::Type{T}) where T <: Collation) = ccall(("gtk_collation_get_type", libgtk4), GType, ())
@cenum(ConstraintAttribute::Int32, ConstraintAttribute_NONE = 0, ConstraintAttribute_LEFT = 1, ConstraintAttribute_RIGHT = 2, ConstraintAttribute_TOP = 3, ConstraintAttribute_BOTTOM = 4, ConstraintAttribute_START = 5, ConstraintAttribute_END = 6, ConstraintAttribute_WIDTH = 7, ConstraintAttribute_HEIGHT = 8, ConstraintAttribute_CENTER_X = 9, ConstraintAttribute_CENTER_Y = 10, ConstraintAttribute_BASELINE = 11)
(GLib.g_type(::Type{T}) where T <: ConstraintAttribute) = ccall(("gtk_constraint_attribute_get_type", libgtk4), GType, ())
@cenum(ConstraintRelation::UInt16, ConstraintRelation_LE = 0xffff, ConstraintRelation_EQ = 0x0000, ConstraintRelation_GE = 0x0001)
(GLib.g_type(::Type{T}) where T <: ConstraintRelation) = ccall(("gtk_constraint_relation_get_type", libgtk4), GType, ())
@cenum(ConstraintStrength::Int32, ConstraintStrength_REQUIRED = 1001001000, ConstraintStrength_STRONG = 1000000000, ConstraintStrength_MEDIUM = 1000, ConstraintStrength_WEAK = 1)
(GLib.g_type(::Type{T}) where T <: ConstraintStrength) = ccall(("gtk_constraint_strength_get_type", libgtk4), GType, ())
@cenum(ConstraintVflParserError::Int32, ConstraintVflParserError_SYMBOL = 0, ConstraintVflParserError_ATTRIBUTE = 1, ConstraintVflParserError_VIEW = 2, ConstraintVflParserError_METRIC = 3, ConstraintVflParserError_PRIORITY = 4, ConstraintVflParserError_RELATION = 5)
(GLib.g_type(::Type{T}) where T <: ConstraintVflParserError) = ccall(("gtk_constraint_vfl_parser_error_get_type", libgtk4), GType, ())
@cenum(ContentFit::Int32, ContentFit_FILL = 0, ContentFit_CONTAIN = 1, ContentFit_COVER = 2, ContentFit_SCALE_DOWN = 3)
(GLib.g_type(::Type{T}) where T <: ContentFit) = ccall(("gtk_content_fit_get_type", libgtk4), GType, ())
@cenum(CornerType::Int32, CornerType_TOP_LEFT = 0, CornerType_BOTTOM_LEFT = 1, CornerType_TOP_RIGHT = 2, CornerType_BOTTOM_RIGHT = 3)
(GLib.g_type(::Type{T}) where T <: CornerType) = ccall(("gtk_corner_type_get_type", libgtk4), GType, ())
@cenum(CssParserError::Int32, CssParserError_FAILED = 0, CssParserError_SYNTAX = 1, CssParserError_IMPORT = 2, CssParserError_NAME = 3, CssParserError_UNKNOWN_VALUE = 4)
@cenum(CssParserWarning::Int32, CssParserWarning_DEPRECATED = 0, CssParserWarning_SYNTAX = 1, CssParserWarning_UNIMPLEMENTED = 2)
@cenum(DeleteType::Int32, DeleteType_CHARS = 0, DeleteType_WORD_ENDS = 1, DeleteType_WORDS = 2, DeleteType_DISPLAY_LINES = 3, DeleteType_DISPLAY_LINE_ENDS = 4, DeleteType_PARAGRAPH_ENDS = 5, DeleteType_PARAGRAPHS = 6, DeleteType_WHITESPACE = 7)
(GLib.g_type(::Type{T}) where T <: DeleteType) = ccall(("gtk_delete_type_get_type", libgtk4), GType, ())
@cenum(DialogError::Int32, DialogError_FAILED = 0, DialogError_CANCELLED = 1, DialogError_DISMISSED = 2)
(GLib.g_type(::Type{T}) where T <: DialogError) = ccall(("gtk_dialog_error_get_type", libgtk4), GType, ())
@cenum(DirectionType::Int32, DirectionType_TAB_FORWARD = 0, DirectionType_TAB_BACKWARD = 1, DirectionType_UP = 2, DirectionType_DOWN = 3, DirectionType_LEFT = 4, DirectionType_RIGHT = 5)
(GLib.g_type(::Type{T}) where T <: DirectionType) = ccall(("gtk_direction_type_get_type", libgtk4), GType, ())
@cenum(EditableProperties::Int32, EditableProperties_PROP_TEXT = 0, EditableProperties_PROP_CURSOR_POSITION = 1, EditableProperties_PROP_SELECTION_BOUND = 2, EditableProperties_PROP_EDITABLE = 3, EditableProperties_PROP_WIDTH_CHARS = 4, EditableProperties_PROP_MAX_WIDTH_CHARS = 5, EditableProperties_PROP_XALIGN = 6, EditableProperties_PROP_ENABLE_UNDO = 7, EditableProperties_NUM_PROPERTIES = 8)
(GLib.g_type(::Type{T}) where T <: EditableProperties) = ccall(("gtk_editable_properties_get_type", libgtk4), GType, ())
@cenum(EntryIconPosition::Int32, EntryIconPosition_PRIMARY = 0, EntryIconPosition_SECONDARY = 1)
(GLib.g_type(::Type{T}) where T <: EntryIconPosition) = ccall(("gtk_entry_icon_position_get_type", libgtk4), GType, ())
@cenum(EventSequenceState::Int32, EventSequenceState_NONE = 0, EventSequenceState_CLAIMED = 1, EventSequenceState_DENIED = 2)
(GLib.g_type(::Type{T}) where T <: EventSequenceState) = ccall(("gtk_event_sequence_state_get_type", libgtk4), GType, ())
@cenum(FileChooserAction::Int32, FileChooserAction_OPEN = 0, FileChooserAction_SAVE = 1, FileChooserAction_SELECT_FOLDER = 2)
(GLib.g_type(::Type{T}) where T <: FileChooserAction) = ccall(("gtk_file_chooser_action_get_type", libgtk4), GType, ())
@cenum(FileChooserError::Int32, FileChooserError_NONEXISTENT = 0, FileChooserError_BAD_FILENAME = 1, FileChooserError_ALREADY_EXISTS = 2, FileChooserError_INCOMPLETE_HOSTNAME = 3)
(GLib.g_type(::Type{T}) where T <: FileChooserError) = ccall(("gtk_file_chooser_error_get_type", libgtk4), GType, ())
@cenum(FilterChange::Int32, FilterChange_DIFFERENT = 0, FilterChange_LESS_STRICT = 1, FilterChange_MORE_STRICT = 2)
(GLib.g_type(::Type{T}) where T <: FilterChange) = ccall(("gtk_filter_change_get_type", libgtk4), GType, ())
@cenum(FilterMatch::Int32, FilterMatch_SOME = 0, FilterMatch_NONE = 1, FilterMatch_ALL = 2)
(GLib.g_type(::Type{T}) where T <: FilterMatch) = ccall(("gtk_filter_match_get_type", libgtk4), GType, ())
@cenum(FontLevel::Int32, FontLevel_FAMILY = 0, FontLevel_FACE = 1, FontLevel_FONT = 2, FontLevel_FEATURES = 3)
(GLib.g_type(::Type{T}) where T <: FontLevel) = ccall(("gtk_font_level_get_type", libgtk4), GType, ())
@cenum(GraphicsOffloadEnabled::Int32, GraphicsOffloadEnabled_ENABLED = 0, GraphicsOffloadEnabled_DISABLED = 1)
(GLib.g_type(::Type{T}) where T <: GraphicsOffloadEnabled) = ccall(("gtk_graphics_offload_enabled_get_type", libgtk4), GType, ())
@cenum(IconSize::Int32, IconSize_INHERIT = 0, IconSize_NORMAL = 1, IconSize_LARGE = 2)
(GLib.g_type(::Type{T}) where T <: IconSize) = ccall(("gtk_icon_size_get_type", libgtk4), GType, ())
@cenum(IconThemeError::Int32, IconThemeError_NOT_FOUND = 0, IconThemeError_FAILED = 1)
(GLib.g_type(::Type{T}) where T <: IconThemeError) = ccall(("gtk_icon_theme_error_get_type", libgtk4), GType, ())
@cenum(IconViewDropPosition::Int32, IconViewDropPosition_NO_DROP = 0, IconViewDropPosition_DROP_INTO = 1, IconViewDropPosition_DROP_LEFT = 2, IconViewDropPosition_DROP_RIGHT = 3, IconViewDropPosition_DROP_ABOVE = 4, IconViewDropPosition_DROP_BELOW = 5)
(GLib.g_type(::Type{T}) where T <: IconViewDropPosition) = ccall(("gtk_icon_view_drop_position_get_type", libgtk4), GType, ())
@cenum(ImageType::Int32, ImageType_EMPTY = 0, ImageType_ICON_NAME = 1, ImageType_GICON = 2, ImageType_PAINTABLE = 3)
(GLib.g_type(::Type{T}) where T <: ImageType) = ccall(("gtk_image_type_get_type", libgtk4), GType, ())
@cenum(InputPurpose::Int32, InputPurpose_FREE_FORM = 0, InputPurpose_ALPHA = 1, InputPurpose_DIGITS = 2, InputPurpose_NUMBER = 3, InputPurpose_PHONE = 4, InputPurpose_URL = 5, InputPurpose_EMAIL = 6, InputPurpose_NAME = 7, InputPurpose_PASSWORD = 8, InputPurpose_PIN = 9, InputPurpose_TERMINAL = 10)
(GLib.g_type(::Type{T}) where T <: InputPurpose) = ccall(("gtk_input_purpose_get_type", libgtk4), GType, ())
@cenum(InscriptionOverflow::Int32, InscriptionOverflow_CLIP = 0, InscriptionOverflow_ELLIPSIZE_START = 1, InscriptionOverflow_ELLIPSIZE_MIDDLE = 2, InscriptionOverflow_ELLIPSIZE_END = 3)
(GLib.g_type(::Type{T}) where T <: InscriptionOverflow) = ccall(("gtk_inscription_overflow_get_type", libgtk4), GType, ())
@cenum(Justification::Int32, Justification_LEFT = 0, Justification_RIGHT = 1, Justification_CENTER = 2, Justification_FILL = 3)
(GLib.g_type(::Type{T}) where T <: Justification) = ccall(("gtk_justification_get_type", libgtk4), GType, ())
@cenum(LevelBarMode::Int32, LevelBarMode_CONTINUOUS = 0, LevelBarMode_DISCRETE = 1)
(GLib.g_type(::Type{T}) where T <: LevelBarMode) = ccall(("gtk_level_bar_mode_get_type", libgtk4), GType, ())
@cenum(License::Int32, License_UNKNOWN = 0, License_CUSTOM = 1, License_GPL_2_0 = 2, License_GPL_3_0 = 3, License_LGPL_2_1 = 4, License_LGPL_3_0 = 5, License_BSD = 6, License_MIT_X11 = 7, License_ARTISTIC = 8, License_GPL_2_0_ONLY = 9, License_GPL_3_0_ONLY = 10, License_LGPL_2_1_ONLY = 11, License_LGPL_3_0_ONLY = 12, License_AGPL_3_0 = 13, License_AGPL_3_0_ONLY = 14, License_BSD_3 = 15, License_APACHE_2_0 = 16, License_MPL_2_0 = 17, License_0BSD = 18)
(GLib.g_type(::Type{T}) where T <: License) = ccall(("gtk_license_get_type", libgtk4), GType, ())
@cenum(ListTabBehavior::Int32, ListTabBehavior_ALL = 0, ListTabBehavior_ITEM = 1, ListTabBehavior_CELL = 2)
(GLib.g_type(::Type{T}) where T <: ListTabBehavior) = ccall(("gtk_list_tab_behavior_get_type", libgtk4), GType, ())
@cenum(MessageType::Int32, MessageType_INFO = 0, MessageType_WARNING = 1, MessageType_QUESTION = 2, MessageType_ERROR = 3, MessageType_OTHER = 4)
(GLib.g_type(::Type{T}) where T <: MessageType) = ccall(("gtk_message_type_get_type", libgtk4), GType, ())
@cenum(MovementStep::Int32, MovementStep_LOGICAL_POSITIONS = 0, MovementStep_VISUAL_POSITIONS = 1, MovementStep_WORDS = 2, MovementStep_DISPLAY_LINES = 3, MovementStep_DISPLAY_LINE_ENDS = 4, MovementStep_PARAGRAPHS = 5, MovementStep_PARAGRAPH_ENDS = 6, MovementStep_PAGES = 7, MovementStep_BUFFER_ENDS = 8, MovementStep_HORIZONTAL_PAGES = 9)
(GLib.g_type(::Type{T}) where T <: MovementStep) = ccall(("gtk_movement_step_get_type", libgtk4), GType, ())
@cenum(NaturalWrapMode::Int32, NaturalWrapMode_INHERIT = 0, NaturalWrapMode_NONE = 1, NaturalWrapMode_WORD = 2)
(GLib.g_type(::Type{T}) where T <: NaturalWrapMode) = ccall(("gtk_natural_wrap_mode_get_type", libgtk4), GType, ())
@cenum(NotebookTab::Int32, NotebookTab_FIRST = 0, NotebookTab_LAST = 1)
(GLib.g_type(::Type{T}) where T <: NotebookTab) = ccall(("gtk_notebook_tab_get_type", libgtk4), GType, ())
@cenum(NumberUpLayout::Int32, NumberUpLayout_LRTB = 0, NumberUpLayout_LRBT = 1, NumberUpLayout_RLTB = 2, NumberUpLayout_RLBT = 3, NumberUpLayout_TBLR = 4, NumberUpLayout_TBRL = 5, NumberUpLayout_BTLR = 6, NumberUpLayout_BTRL = 7)
(GLib.g_type(::Type{T}) where T <: NumberUpLayout) = ccall(("gtk_number_up_layout_get_type", libgtk4), GType, ())
@cenum(Ordering::UInt16, Ordering_SMALLER = 0xffff, Ordering_EQUAL = 0x0000, Ordering_LARGER = 0x0001)
(GLib.g_type(::Type{T}) where T <: Ordering) = ccall(("gtk_ordering_get_type", libgtk4), GType, ())
@cenum(Orientation::Int32, Orientation_HORIZONTAL = 0, Orientation_VERTICAL = 1)
(GLib.g_type(::Type{T}) where T <: Orientation) = ccall(("gtk_orientation_get_type", libgtk4), GType, ())
@cenum(Overflow::Int32, Overflow_VISIBLE = 0, Overflow_HIDDEN = 1)
(GLib.g_type(::Type{T}) where T <: Overflow) = ccall(("gtk_overflow_get_type", libgtk4), GType, ())
@cenum(PackType::Int32, PackType_START = 0, PackType_END = 1)
(GLib.g_type(::Type{T}) where T <: PackType) = ccall(("gtk_pack_type_get_type", libgtk4), GType, ())
@cenum(PadActionType::Int32, PadActionType_BUTTON = 0, PadActionType_RING = 1, PadActionType_STRIP = 2)
(GLib.g_type(::Type{T}) where T <: PadActionType) = ccall(("gtk_pad_action_type_get_type", libgtk4), GType, ())
@cenum(PageOrientation::Int32, PageOrientation_PORTRAIT = 0, PageOrientation_LANDSCAPE = 1, PageOrientation_REVERSE_PORTRAIT = 2, PageOrientation_REVERSE_LANDSCAPE = 3)
(GLib.g_type(::Type{T}) where T <: PageOrientation) = ccall(("gtk_page_orientation_get_type", libgtk4), GType, ())
@cenum(PageSet::Int32, PageSet_ALL = 0, PageSet_EVEN = 1, PageSet_ODD = 2)
(GLib.g_type(::Type{T}) where T <: PageSet) = ccall(("gtk_page_set_get_type", libgtk4), GType, ())
@cenum(PanDirection::Int32, PanDirection_LEFT = 0, PanDirection_RIGHT = 1, PanDirection_UP = 2, PanDirection_DOWN = 3)
(GLib.g_type(::Type{T}) where T <: PanDirection) = ccall(("gtk_pan_direction_get_type", libgtk4), GType, ())
@cenum(PolicyType::Int32, PolicyType_ALWAYS = 0, PolicyType_AUTOMATIC = 1, PolicyType_NEVER = 2, PolicyType_EXTERNAL = 3)
(GLib.g_type(::Type{T}) where T <: PolicyType) = ccall(("gtk_policy_type_get_type", libgtk4), GType, ())
@cenum(PositionType::Int32, PositionType_LEFT = 0, PositionType_RIGHT = 1, PositionType_TOP = 2, PositionType_BOTTOM = 3)
(GLib.g_type(::Type{T}) where T <: PositionType) = ccall(("gtk_position_type_get_type", libgtk4), GType, ())
@cenum(PrintDuplex::Int32, PrintDuplex_SIMPLEX = 0, PrintDuplex_HORIZONTAL = 1, PrintDuplex_VERTICAL = 2)
(GLib.g_type(::Type{T}) where T <: PrintDuplex) = ccall(("gtk_print_duplex_get_type", libgtk4), GType, ())
@cenum(PrintError::Int32, PrintError_GENERAL = 0, PrintError_INTERNAL_ERROR = 1, PrintError_NOMEM = 2, PrintError_INVALID_FILE = 3)
(GLib.g_type(::Type{T}) where T <: PrintError) = ccall(("gtk_print_error_get_type", libgtk4), GType, ())
@cenum(PrintOperationAction::Int32, PrintOperationAction_PRINT_DIALOG = 0, PrintOperationAction_PRINT = 1, PrintOperationAction_PREVIEW = 2, PrintOperationAction_EXPORT = 3)
(GLib.g_type(::Type{T}) where T <: PrintOperationAction) = ccall(("gtk_print_operation_action_get_type", libgtk4), GType, ())
@cenum(PrintOperationResult::Int32, PrintOperationResult_ERROR = 0, PrintOperationResult_APPLY = 1, PrintOperationResult_CANCEL = 2, PrintOperationResult_IN_PROGRESS = 3)
(GLib.g_type(::Type{T}) where T <: PrintOperationResult) = ccall(("gtk_print_operation_result_get_type", libgtk4), GType, ())
@cenum(PrintPages::Int32, PrintPages_ALL = 0, PrintPages_CURRENT = 1, PrintPages_RANGES = 2, PrintPages_SELECTION = 3)
(GLib.g_type(::Type{T}) where T <: PrintPages) = ccall(("gtk_print_pages_get_type", libgtk4), GType, ())
@cenum(PrintQuality::Int32, PrintQuality_LOW = 0, PrintQuality_NORMAL = 1, PrintQuality_HIGH = 2, PrintQuality_DRAFT = 3)
(GLib.g_type(::Type{T}) where T <: PrintQuality) = ccall(("gtk_print_quality_get_type", libgtk4), GType, ())
@cenum(PrintStatus::Int32, PrintStatus_INITIAL = 0, PrintStatus_PREPARING = 1, PrintStatus_GENERATING_DATA = 2, PrintStatus_SENDING_DATA = 3, PrintStatus_PENDING = 4, PrintStatus_PENDING_ISSUE = 5, PrintStatus_PRINTING = 6, PrintStatus_FINISHED = 7, PrintStatus_FINISHED_ABORTED = 8)
(GLib.g_type(::Type{T}) where T <: PrintStatus) = ccall(("gtk_print_status_get_type", libgtk4), GType, ())
@cenum(PropagationLimit::Int32, PropagationLimit_NONE = 0, PropagationLimit_SAME_NATIVE = 1)
(GLib.g_type(::Type{T}) where T <: PropagationLimit) = ccall(("gtk_propagation_limit_get_type", libgtk4), GType, ())
@cenum(PropagationPhase::Int32, PropagationPhase_NONE = 0, PropagationPhase_CAPTURE = 1, PropagationPhase_BUBBLE = 2, PropagationPhase_TARGET = 3)
(GLib.g_type(::Type{T}) where T <: PropagationPhase) = ccall(("gtk_propagation_phase_get_type", libgtk4), GType, ())
@cenum(RecentManagerError::Int32, RecentManagerError_NOT_FOUND = 0, RecentManagerError_INVALID_URI = 1, RecentManagerError_INVALID_ENCODING = 2, RecentManagerError_NOT_REGISTERED = 3, RecentManagerError_READ = 4, RecentManagerError_WRITE = 5, RecentManagerError_UNKNOWN = 6)
(GLib.g_type(::Type{T}) where T <: RecentManagerError) = ccall(("gtk_recent_manager_error_get_type", libgtk4), GType, ())
@cenum(ResponseType::UInt16, ResponseType_NONE = 0xffff, ResponseType_REJECT = 0xfffe, ResponseType_ACCEPT = 0xfffd, ResponseType_DELETE_EVENT = 0xfffc, ResponseType_OK = 0xfffb, ResponseType_CANCEL = 0xfffa, ResponseType_CLOSE = 0xfff9, ResponseType_YES = 0xfff8, ResponseType_NO = 0xfff7, ResponseType_APPLY = 0xfff6, ResponseType_HELP = 0xfff5)
(GLib.g_type(::Type{T}) where T <: ResponseType) = ccall(("gtk_response_type_get_type", libgtk4), GType, ())
@cenum(RevealerTransitionType::Int32, RevealerTransitionType_NONE = 0, RevealerTransitionType_CROSSFADE = 1, RevealerTransitionType_SLIDE_RIGHT = 2, RevealerTransitionType_SLIDE_LEFT = 3, RevealerTransitionType_SLIDE_UP = 4, RevealerTransitionType_SLIDE_DOWN = 5, RevealerTransitionType_SWING_RIGHT = 6, RevealerTransitionType_SWING_LEFT = 7, RevealerTransitionType_SWING_UP = 8, RevealerTransitionType_SWING_DOWN = 9)
(GLib.g_type(::Type{T}) where T <: RevealerTransitionType) = ccall(("gtk_revealer_transition_type_get_type", libgtk4), GType, ())
@cenum(ScrollStep::Int32, ScrollStep_STEPS = 0, ScrollStep_PAGES = 1, ScrollStep_ENDS = 2, ScrollStep_HORIZONTAL_STEPS = 3, ScrollStep_HORIZONTAL_PAGES = 4, ScrollStep_HORIZONTAL_ENDS = 5)
(GLib.g_type(::Type{T}) where T <: ScrollStep) = ccall(("gtk_scroll_step_get_type", libgtk4), GType, ())
@cenum(ScrollType::Int32, ScrollType_NONE = 0, ScrollType_JUMP = 1, ScrollType_STEP_BACKWARD = 2, ScrollType_STEP_FORWARD = 3, ScrollType_PAGE_BACKWARD = 4, ScrollType_PAGE_FORWARD = 5, ScrollType_STEP_UP = 6, ScrollType_STEP_DOWN = 7, ScrollType_PAGE_UP = 8, ScrollType_PAGE_DOWN = 9, ScrollType_STEP_LEFT = 10, ScrollType_STEP_RIGHT = 11, ScrollType_PAGE_LEFT = 12, ScrollType_PAGE_RIGHT = 13, ScrollType_START = 14, ScrollType_END = 15)
(GLib.g_type(::Type{T}) where T <: ScrollType) = ccall(("gtk_scroll_type_get_type", libgtk4), GType, ())
@cenum(ScrollablePolicy::Int32, ScrollablePolicy_MINIMUM = 0, ScrollablePolicy_NATURAL = 1)
(GLib.g_type(::Type{T}) where T <: ScrollablePolicy) = ccall(("gtk_scrollable_policy_get_type", libgtk4), GType, ())
@cenum(SelectionMode::Int32, SelectionMode_NONE = 0, SelectionMode_SINGLE = 1, SelectionMode_BROWSE = 2, SelectionMode_MULTIPLE = 3)
(GLib.g_type(::Type{T}) where T <: SelectionMode) = ccall(("gtk_selection_mode_get_type", libgtk4), GType, ())
@cenum(SensitivityType::Int32, SensitivityType_AUTO = 0, SensitivityType_ON = 1, SensitivityType_OFF = 2)
(GLib.g_type(::Type{T}) where T <: SensitivityType) = ccall(("gtk_sensitivity_type_get_type", libgtk4), GType, ())
@cenum(ShortcutScope::Int32, ShortcutScope_LOCAL = 0, ShortcutScope_MANAGED = 1, ShortcutScope_GLOBAL = 2)
(GLib.g_type(::Type{T}) where T <: ShortcutScope) = ccall(("gtk_shortcut_scope_get_type", libgtk4), GType, ())
@cenum(ShortcutType::Int32, ShortcutType_ACCELERATOR = 0, ShortcutType_GESTURE_PINCH = 1, ShortcutType_GESTURE_STRETCH = 2, ShortcutType_GESTURE_ROTATE_CLOCKWISE = 3, ShortcutType_GESTURE_ROTATE_COUNTERCLOCKWISE = 4, ShortcutType_GESTURE_TWO_FINGER_SWIPE_LEFT = 5, ShortcutType_GESTURE_TWO_FINGER_SWIPE_RIGHT = 6, ShortcutType_GESTURE = 7, ShortcutType_GESTURE_SWIPE_LEFT = 8, ShortcutType_GESTURE_SWIPE_RIGHT = 9)
(GLib.g_type(::Type{T}) where T <: ShortcutType) = ccall(("gtk_shortcut_type_get_type", libgtk4), GType, ())
@cenum(SizeGroupMode::Int32, SizeGroupMode_NONE = 0, SizeGroupMode_HORIZONTAL = 1, SizeGroupMode_VERTICAL = 2, SizeGroupMode_BOTH = 3)
(GLib.g_type(::Type{T}) where T <: SizeGroupMode) = ccall(("gtk_size_group_mode_get_type", libgtk4), GType, ())
@cenum(SizeRequestMode::Int32, SizeRequestMode_HEIGHT_FOR_WIDTH = 0, SizeRequestMode_WIDTH_FOR_HEIGHT = 1, SizeRequestMode_CONSTANT_SIZE = 2)
(GLib.g_type(::Type{T}) where T <: SizeRequestMode) = ccall(("gtk_size_request_mode_get_type", libgtk4), GType, ())
@cenum(SortType::Int32, SortType_ASCENDING = 0, SortType_DESCENDING = 1)
(GLib.g_type(::Type{T}) where T <: SortType) = ccall(("gtk_sort_type_get_type", libgtk4), GType, ())
@cenum(SorterChange::Int32, SorterChange_DIFFERENT = 0, SorterChange_INVERTED = 1, SorterChange_LESS_STRICT = 2, SorterChange_MORE_STRICT = 3)
(GLib.g_type(::Type{T}) where T <: SorterChange) = ccall(("gtk_sorter_change_get_type", libgtk4), GType, ())
@cenum(SorterOrder::Int32, SorterOrder_PARTIAL = 0, SorterOrder_NONE = 1, SorterOrder_TOTAL = 2)
(GLib.g_type(::Type{T}) where T <: SorterOrder) = ccall(("gtk_sorter_order_get_type", libgtk4), GType, ())
@cenum(SpinButtonUpdatePolicy::Int32, SpinButtonUpdatePolicy_ALWAYS = 0, SpinButtonUpdatePolicy_IF_VALID = 1)
(GLib.g_type(::Type{T}) where T <: SpinButtonUpdatePolicy) = ccall(("gtk_spin_button_update_policy_get_type", libgtk4), GType, ())
@cenum(SpinType::Int32, SpinType_STEP_FORWARD = 0, SpinType_STEP_BACKWARD = 1, SpinType_PAGE_FORWARD = 2, SpinType_PAGE_BACKWARD = 3, SpinType_HOME = 4, SpinType_END = 5, SpinType_USER_DEFINED = 6)
(GLib.g_type(::Type{T}) where T <: SpinType) = ccall(("gtk_spin_type_get_type", libgtk4), GType, ())
@cenum(StackTransitionType::Int32, StackTransitionType_NONE = 0, StackTransitionType_CROSSFADE = 1, StackTransitionType_SLIDE_RIGHT = 2, StackTransitionType_SLIDE_LEFT = 3, StackTransitionType_SLIDE_UP = 4, StackTransitionType_SLIDE_DOWN = 5, StackTransitionType_SLIDE_LEFT_RIGHT = 6, StackTransitionType_SLIDE_UP_DOWN = 7, StackTransitionType_OVER_UP = 8, StackTransitionType_OVER_DOWN = 9, StackTransitionType_OVER_LEFT = 10, StackTransitionType_OVER_RIGHT = 11, StackTransitionType_UNDER_UP = 12, StackTransitionType_UNDER_DOWN = 13, StackTransitionType_UNDER_LEFT = 14, StackTransitionType_UNDER_RIGHT = 15, StackTransitionType_OVER_UP_DOWN = 16, StackTransitionType_OVER_DOWN_UP = 17, StackTransitionType_OVER_LEFT_RIGHT = 18, StackTransitionType_OVER_RIGHT_LEFT = 19, StackTransitionType_ROTATE_LEFT = 20, StackTransitionType_ROTATE_RIGHT = 21, StackTransitionType_ROTATE_LEFT_RIGHT = 22)
(GLib.g_type(::Type{T}) where T <: StackTransitionType) = ccall(("gtk_stack_transition_type_get_type", libgtk4), GType, ())
@cenum(StringFilterMatchMode::Int32, StringFilterMatchMode_EXACT = 0, StringFilterMatchMode_SUBSTRING = 1, StringFilterMatchMode_PREFIX = 2)
(GLib.g_type(::Type{T}) where T <: StringFilterMatchMode) = ccall(("gtk_string_filter_match_mode_get_type", libgtk4), GType, ())
@cenum(SymbolicColor::Int32, SymbolicColor_FOREGROUND = 0, SymbolicColor_ERROR = 1, SymbolicColor_WARNING = 2, SymbolicColor_SUCCESS = 3)
(GLib.g_type(::Type{T}) where T <: SymbolicColor) = ccall(("gtk_symbolic_color_get_type", libgtk4), GType, ())
@cenum(SystemSetting::Int32, SystemSetting_DPI = 0, SystemSetting_FONT_NAME = 1, SystemSetting_FONT_CONFIG = 2, SystemSetting_DISPLAY = 3, SystemSetting_ICON_THEME = 4)
(GLib.g_type(::Type{T}) where T <: SystemSetting) = ccall(("gtk_system_setting_get_type", libgtk4), GType, ())
@cenum(TextDirection::Int32, TextDirection_NONE = 0, TextDirection_LTR = 1, TextDirection_RTL = 2)
(GLib.g_type(::Type{T}) where T <: TextDirection) = ccall(("gtk_text_direction_get_type", libgtk4), GType, ())
@cenum(TextExtendSelection::Int32, TextExtendSelection_WORD = 0, TextExtendSelection_LINE = 1)
(GLib.g_type(::Type{T}) where T <: TextExtendSelection) = ccall(("gtk_text_extend_selection_get_type", libgtk4), GType, ())
@cenum(TextViewLayer::Int32, TextViewLayer_BELOW_TEXT = 0, TextViewLayer_ABOVE_TEXT = 1)
(GLib.g_type(::Type{T}) where T <: TextViewLayer) = ccall(("gtk_text_view_layer_get_type", libgtk4), GType, ())
@cenum(TextWindowType::Int32, TextWindowType_WIDGET = 1, TextWindowType_TEXT = 2, TextWindowType_LEFT = 3, TextWindowType_RIGHT = 4, TextWindowType_TOP = 5, TextWindowType_BOTTOM = 6)
(GLib.g_type(::Type{T}) where T <: TextWindowType) = ccall(("gtk_text_window_type_get_type", libgtk4), GType, ())
@cenum(TreeViewColumnSizing::Int32, TreeViewColumnSizing_GROW_ONLY = 0, TreeViewColumnSizing_AUTOSIZE = 1, TreeViewColumnSizing_FIXED = 2)
(GLib.g_type(::Type{T}) where T <: TreeViewColumnSizing) = ccall(("gtk_tree_view_column_sizing_get_type", libgtk4), GType, ())
@cenum(TreeViewDropPosition::Int32, TreeViewDropPosition_BEFORE = 0, TreeViewDropPosition_AFTER = 1, TreeViewDropPosition_INTO_OR_BEFORE = 2, TreeViewDropPosition_INTO_OR_AFTER = 3)
(GLib.g_type(::Type{T}) where T <: TreeViewDropPosition) = ccall(("gtk_tree_view_drop_position_get_type", libgtk4), GType, ())
@cenum(TreeViewGridLines::Int32, TreeViewGridLines_NONE = 0, TreeViewGridLines_HORIZONTAL = 1, TreeViewGridLines_VERTICAL = 2, TreeViewGridLines_BOTH = 3)
(GLib.g_type(::Type{T}) where T <: TreeViewGridLines) = ccall(("gtk_tree_view_grid_lines_get_type", libgtk4), GType, ())
@cenum(Unit::Int32, Unit_NONE = 0, Unit_POINTS = 1, Unit_INCH = 2, Unit_MM = 3)
(GLib.g_type(::Type{T}) where T <: Unit) = ccall(("gtk_unit_get_type", libgtk4), GType, ())
@cenum(WrapMode::Int32, WrapMode_NONE = 0, WrapMode_CHAR = 1, WrapMode_WORD = 2, WrapMode_WORD_CHAR = 3)
(GLib.g_type(::Type{T}) where T <: WrapMode) = ccall(("gtk_wrap_mode_get_type", libgtk4), GType, ())
@bitflag(ApplicationInhibitFlags::UInt32, ApplicationInhibitFlags_LOGOUT = 1, ApplicationInhibitFlags_SWITCH = 2, ApplicationInhibitFlags_SUSPEND = 4, ApplicationInhibitFlags_IDLE = 8, ApplicationInhibitFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: ApplicationInhibitFlags) = ccall(("gtk_application_inhibit_flags_get_type", libgtk4), GType, ())
@bitflag(BuilderClosureFlags::UInt32, BuilderClosureFlags_SWAPPED = 1, BuilderClosureFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: BuilderClosureFlags) = ccall(("gtk_builder_closure_flags_get_type", libgtk4), GType, ())
@bitflag(CellRendererState::UInt32, CellRendererState_SELECTED = 1, CellRendererState_PRELIT = 2, CellRendererState_INSENSITIVE = 4, CellRendererState_SORTED = 8, CellRendererState_FOCUSED = 16, CellRendererState_EXPANDABLE = 32, CellRendererState_EXPANDED = 64, CellRendererState_NONE = 0)
(GLib.g_type(::Type{T}) where T <: CellRendererState) = ccall(("gtk_cell_renderer_state_get_type", libgtk4), GType, ())
@bitflag(DebugFlags::UInt32, DebugFlags_TEXT = 1, DebugFlags_TREE = 2, DebugFlags_KEYBINDINGS = 4, DebugFlags_MODULES = 8, DebugFlags_GEOMETRY = 16, DebugFlags_ICONTHEME = 32, DebugFlags_PRINTING = 64, DebugFlags_BUILDER = 128, DebugFlags_SIZE_REQUEST = 256, DebugFlags_NO_CSS_CACHE = 512, DebugFlags_INTERACTIVE = 1024, DebugFlags_ACTIONS = 4096, DebugFlags_LAYOUT = 8192, DebugFlags_SNAPSHOT = 16384, DebugFlags_CONSTRAINTS = 32768, DebugFlags_BUILDER_OBJECTS = 65536, DebugFlags_A11Y = 131072, DebugFlags_ICONFALLBACK = 262144, DebugFlags_INVERT_TEXT_DIR = 524288, DebugFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: DebugFlags) = ccall(("gtk_debug_flags_get_type", libgtk4), GType, ())
@bitflag(DialogFlags::UInt32, DialogFlags_MODAL = 1, DialogFlags_DESTROY_WITH_PARENT = 2, DialogFlags_USE_HEADER_BAR = 4, DialogFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: DialogFlags) = ccall(("gtk_dialog_flags_get_type", libgtk4), GType, ())
@bitflag(EventControllerScrollFlags::UInt32, EventControllerScrollFlags_NONE = 0, EventControllerScrollFlags_VERTICAL = 1, EventControllerScrollFlags_HORIZONTAL = 2, EventControllerScrollFlags_DISCRETE = 4, EventControllerScrollFlags_KINETIC = 8)
(GLib.g_type(::Type{T}) where T <: EventControllerScrollFlags) = ccall(("gtk_event_controller_scroll_flags_get_type", libgtk4), GType, ())
@bitflag(FontChooserLevel::UInt32, FontChooserLevel_FAMILY = 0, FontChooserLevel_STYLE = 1, FontChooserLevel_SIZE = 2, FontChooserLevel_VARIATIONS = 4, FontChooserLevel_FEATURES = 8)
(GLib.g_type(::Type{T}) where T <: FontChooserLevel) = ccall(("gtk_font_chooser_level_get_type", libgtk4), GType, ())
@bitflag(IconLookupFlags::UInt32, IconLookupFlags_FORCE_REGULAR = 1, IconLookupFlags_FORCE_SYMBOLIC = 2, IconLookupFlags_PRELOAD = 4, IconLookupFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: IconLookupFlags) = ccall(("gtk_icon_lookup_flags_get_type", libgtk4), GType, ())
@bitflag(InputHints::UInt32, InputHints_NONE = 0, InputHints_SPELLCHECK = 1, InputHints_NO_SPELLCHECK = 2, InputHints_WORD_COMPLETION = 4, InputHints_LOWERCASE = 8, InputHints_UPPERCASE_CHARS = 16, InputHints_UPPERCASE_WORDS = 32, InputHints_UPPERCASE_SENTENCES = 64, InputHints_INHIBIT_OSK = 128, InputHints_VERTICAL_WRITING = 256, InputHints_EMOJI = 512, InputHints_NO_EMOJI = 1024, InputHints_PRIVATE = 2048)
(GLib.g_type(::Type{T}) where T <: InputHints) = ccall(("gtk_input_hints_get_type", libgtk4), GType, ())
@bitflag(ListScrollFlags::UInt32, ListScrollFlags_NONE = 0, ListScrollFlags_FOCUS = 1, ListScrollFlags_SELECT = 2)
(GLib.g_type(::Type{T}) where T <: ListScrollFlags) = ccall(("gtk_list_scroll_flags_get_type", libgtk4), GType, ())
@bitflag(PickFlags::UInt32, PickFlags_DEFAULT = 0, PickFlags_INSENSITIVE = 1, PickFlags_NON_TARGETABLE = 2)
(GLib.g_type(::Type{T}) where T <: PickFlags) = ccall(("gtk_pick_flags_get_type", libgtk4), GType, ())
@bitflag(PopoverMenuFlags::UInt32, PopoverMenuFlags_SLIDING = 0, PopoverMenuFlags_NESTED = 1)
(GLib.g_type(::Type{T}) where T <: PopoverMenuFlags) = ccall(("gtk_popover_menu_flags_get_type", libgtk4), GType, ())
@bitflag(PrintCapabilities::UInt32, PrintCapabilities_PAGE_SET = 1, PrintCapabilities_COPIES = 2, PrintCapabilities_COLLATE = 4, PrintCapabilities_REVERSE = 8, PrintCapabilities_SCALE = 16, PrintCapabilities_GENERATE_PDF = 32, PrintCapabilities_GENERATE_PS = 64, PrintCapabilities_PREVIEW = 128, PrintCapabilities_NUMBER_UP = 256, PrintCapabilities_NUMBER_UP_LAYOUT = 512, PrintCapabilities_NONE = 0)
(GLib.g_type(::Type{T}) where T <: PrintCapabilities) = ccall(("gtk_print_capabilities_get_type", libgtk4), GType, ())
@bitflag(ShortcutActionFlags::UInt32, ShortcutActionFlags_EXCLUSIVE = 1, ShortcutActionFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: ShortcutActionFlags) = ccall(("gtk_shortcut_action_flags_get_type", libgtk4), GType, ())
@bitflag(StateFlags::UInt32, StateFlags_NORMAL = 0, StateFlags_ACTIVE = 1, StateFlags_PRELIGHT = 2, StateFlags_SELECTED = 4, StateFlags_INSENSITIVE = 8, StateFlags_INCONSISTENT = 16, StateFlags_FOCUSED = 32, StateFlags_BACKDROP = 64, StateFlags_DIR_LTR = 128, StateFlags_DIR_RTL = 256, StateFlags_LINK = 512, StateFlags_VISITED = 1024, StateFlags_CHECKED = 2048, StateFlags_DROP_ACTIVE = 4096, StateFlags_FOCUS_VISIBLE = 8192, StateFlags_FOCUS_WITHIN = 16384)
(GLib.g_type(::Type{T}) where T <: StateFlags) = ccall(("gtk_state_flags_get_type", libgtk4), GType, ())
@bitflag(StyleContextPrintFlags::UInt32, StyleContextPrintFlags_NONE = 0, StyleContextPrintFlags_RECURSE = 1, StyleContextPrintFlags_SHOW_STYLE = 2, StyleContextPrintFlags_SHOW_CHANGE = 4)
(GLib.g_type(::Type{T}) where T <: StyleContextPrintFlags) = ccall(("gtk_style_context_print_flags_get_type", libgtk4), GType, ())
@bitflag(TextSearchFlags::UInt32, TextSearchFlags_VISIBLE_ONLY = 1, TextSearchFlags_TEXT_ONLY = 2, TextSearchFlags_CASE_INSENSITIVE = 4, TextSearchFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: TextSearchFlags) = ccall(("gtk_text_search_flags_get_type", libgtk4), GType, ())
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_BACKGROUND.html).", ACCESSIBLE_ATTRIBUTE_BACKGROUND)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_FAMILY.html).", ACCESSIBLE_ATTRIBUTE_FAMILY)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_FOREGROUND.html).", ACCESSIBLE_ATTRIBUTE_FOREGROUND)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_OVERLINE.html).", ACCESSIBLE_ATTRIBUTE_OVERLINE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_OVERLINE_NONE.html).", ACCESSIBLE_ATTRIBUTE_OVERLINE_NONE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_OVERLINE_SINGLE.html).", ACCESSIBLE_ATTRIBUTE_OVERLINE_SINGLE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_SIZE.html).", ACCESSIBLE_ATTRIBUTE_SIZE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH.html).", ACCESSIBLE_ATTRIBUTE_STRETCH)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH_CONDENSED.html).", ACCESSIBLE_ATTRIBUTE_STRETCH_CONDENSED)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH_EXPANDED.html).", ACCESSIBLE_ATTRIBUTE_STRETCH_EXPANDED)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH_EXTRA_CONDENSED.html).", ACCESSIBLE_ATTRIBUTE_STRETCH_EXTRA_CONDENSED)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH_EXTRA_EXPANDED.html).", ACCESSIBLE_ATTRIBUTE_STRETCH_EXTRA_EXPANDED)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH_NORMAL.html).", ACCESSIBLE_ATTRIBUTE_STRETCH_NORMAL)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH_SEMI_CONDENSED.html).", ACCESSIBLE_ATTRIBUTE_STRETCH_SEMI_CONDENSED)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH_SEMI_EXPANDED.html).", ACCESSIBLE_ATTRIBUTE_STRETCH_SEMI_EXPANDED)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH_ULTRA_CONDENSED.html).", ACCESSIBLE_ATTRIBUTE_STRETCH_ULTRA_CONDENSED)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRETCH_ULTRA_EXPANDED.html).", ACCESSIBLE_ATTRIBUTE_STRETCH_ULTRA_EXPANDED)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STRIKETHROUGH.html).", ACCESSIBLE_ATTRIBUTE_STRIKETHROUGH)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STYLE.html).", ACCESSIBLE_ATTRIBUTE_STYLE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STYLE_ITALIC.html).", ACCESSIBLE_ATTRIBUTE_STYLE_ITALIC)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STYLE_NORMAL.html).", ACCESSIBLE_ATTRIBUTE_STYLE_NORMAL)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_STYLE_OBLIQUE.html).", ACCESSIBLE_ATTRIBUTE_STYLE_OBLIQUE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_UNDERLINE.html).", ACCESSIBLE_ATTRIBUTE_UNDERLINE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_UNDERLINE_DOUBLE.html).", ACCESSIBLE_ATTRIBUTE_UNDERLINE_DOUBLE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_UNDERLINE_ERROR.html).", ACCESSIBLE_ATTRIBUTE_UNDERLINE_ERROR)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_UNDERLINE_NONE.html).", ACCESSIBLE_ATTRIBUTE_UNDERLINE_NONE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_UNDERLINE_SINGLE.html).", ACCESSIBLE_ATTRIBUTE_UNDERLINE_SINGLE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_VARIANT.html).", ACCESSIBLE_ATTRIBUTE_VARIANT)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_VARIANT_ALL_PETITE_CAPS.html).", ACCESSIBLE_ATTRIBUTE_VARIANT_ALL_PETITE_CAPS)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_VARIANT_ALL_SMALL_CAPS.html).", ACCESSIBLE_ATTRIBUTE_VARIANT_ALL_SMALL_CAPS)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_VARIANT_PETITE_CAPS.html).", ACCESSIBLE_ATTRIBUTE_VARIANT_PETITE_CAPS)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_VARIANT_SMALL_CAPS.html).", ACCESSIBLE_ATTRIBUTE_VARIANT_SMALL_CAPS)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_VARIANT_TITLE_CAPS.html).", ACCESSIBLE_ATTRIBUTE_VARIANT_TITLE_CAPS)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_VARIANT_UNICASE.html).", ACCESSIBLE_ATTRIBUTE_VARIANT_UNICASE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_ATTRIBUTE_WEIGHT.html).", ACCESSIBLE_ATTRIBUTE_WEIGHT)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.ACCESSIBLE_VALUE_UNDEFINED.html).", ACCESSIBLE_VALUE_UNDEFINED)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.BINARY_AGE.html).", BINARY_AGE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.INPUT_ERROR.html).", INPUT_ERROR)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.INTERFACE_AGE.html).", INTERFACE_AGE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.INVALID_LIST_POSITION.html).", INVALID_LIST_POSITION)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.LEVEL_BAR_OFFSET_FULL.html).", LEVEL_BAR_OFFSET_FULL)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.LEVEL_BAR_OFFSET_HIGH.html).", LEVEL_BAR_OFFSET_HIGH)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.LEVEL_BAR_OFFSET_LOW.html).", LEVEL_BAR_OFFSET_LOW)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.MAJOR_VERSION.html).", MAJOR_VERSION)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.MICRO_VERSION.html).", MICRO_VERSION)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.MINOR_VERSION.html).", MINOR_VERSION)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_A3.html).", PAPER_NAME_A3)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_A4.html).", PAPER_NAME_A4)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_A5.html).", PAPER_NAME_A5)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_B5.html).", PAPER_NAME_B5)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_EXECUTIVE.html).", PAPER_NAME_EXECUTIVE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_LEGAL.html).", PAPER_NAME_LEGAL)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PAPER_NAME_LETTER.html).", PAPER_NAME_LETTER)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PRINT_SETTINGS_OUTPUT_BASENAME.html).", PRINT_SETTINGS_OUTPUT_BASENAME)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PRINT_SETTINGS_OUTPUT_DIR.html).", PRINT_SETTINGS_OUTPUT_DIR)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PRINT_SETTINGS_OUTPUT_FILE_FORMAT.html).", PRINT_SETTINGS_OUTPUT_FILE_FORMAT)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PRINT_SETTINGS_OUTPUT_URI.html).", PRINT_SETTINGS_OUTPUT_URI)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.PRIORITY_RESIZE.html).", PRIORITY_RESIZE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_APPLICATION.html).", STYLE_PROVIDER_PRIORITY_APPLICATION)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_FALLBACK.html).", STYLE_PROVIDER_PRIORITY_FALLBACK)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_SETTINGS.html).", STYLE_PROVIDER_PRIORITY_SETTINGS)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_THEME.html).", STYLE_PROVIDER_PRIORITY_THEME)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.STYLE_PROVIDER_PRIORITY_USER.html).", STYLE_PROVIDER_PRIORITY_USER)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.TEXT_VIEW_PRIORITY_VALIDATE.html).", TEXT_VIEW_PRIORITY_VALIDATE)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID.html).", TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/const.TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID.html).", TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleAnnouncementPriority.html).", AccessibleAnnouncementPriority)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleAutocomplete.html).", AccessibleAutocomplete)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleInvalidState.html).", AccessibleInvalidState)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessiblePlatformState.html).", AccessiblePlatformState)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleProperty.html).", AccessibleProperty)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleRelation.html).", AccessibleRelation)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleRole.html).", AccessibleRole)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleSort.html).", AccessibleSort)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleState.html).", AccessibleState)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleTextContentChange.html).", AccessibleTextContentChange)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleTextGranularity.html).", AccessibleTextGranularity)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AccessibleTristate.html).", AccessibleTristate)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.Align.html).", Align)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ArrowType.html).", ArrowType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.AssistantPageType.html).", AssistantPageType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.BaselinePosition.html).", BaselinePosition)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.BorderStyle.html).", BorderStyle)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.BuilderError.html).", BuilderError)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ButtonsType.html).", ButtonsType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.CellRendererAccelMode.html).", CellRendererAccelMode)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.CellRendererMode.html).", CellRendererMode)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.Collation.html).", Collation)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ConstraintAttribute.html).", ConstraintAttribute)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ConstraintRelation.html).", ConstraintRelation)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ConstraintStrength.html).", ConstraintStrength)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ConstraintVflParserError.html).", ConstraintVflParserError)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ContentFit.html).", ContentFit)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.CornerType.html).", CornerType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.CssParserError.html).", CssParserError)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.CssParserWarning.html).", CssParserWarning)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.DeleteType.html).", DeleteType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.DialogError.html).", DialogError)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.DirectionType.html).", DirectionType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.EditableProperties.html).", EditableProperties)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.EntryIconPosition.html).", EntryIconPosition)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.EventSequenceState.html).", EventSequenceState)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.FileChooserAction.html).", FileChooserAction)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.FileChooserError.html).", FileChooserError)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.FilterChange.html).", FilterChange)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.FilterMatch.html).", FilterMatch)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.FontLevel.html).", FontLevel)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.GraphicsOffloadEnabled.html).", GraphicsOffloadEnabled)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.IconSize.html).", IconSize)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.IconThemeError.html).", IconThemeError)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.IconViewDropPosition.html).", IconViewDropPosition)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ImageType.html).", ImageType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.InputPurpose.html).", InputPurpose)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.InscriptionOverflow.html).", InscriptionOverflow)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.Justification.html).", Justification)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.LevelBarMode.html).", LevelBarMode)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.License.html).", License)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ListTabBehavior.html).", ListTabBehavior)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.MessageType.html).", MessageType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.MovementStep.html).", MovementStep)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.NaturalWrapMode.html).", NaturalWrapMode)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.NotebookTab.html).", NotebookTab)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.NumberUpLayout.html).", NumberUpLayout)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.Ordering.html).", Ordering)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.Orientation.html).", Orientation)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.Overflow.html).", Overflow)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PackType.html).", PackType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PadActionType.html).", PadActionType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PageOrientation.html).", PageOrientation)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PageSet.html).", PageSet)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PanDirection.html).", PanDirection)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PolicyType.html).", PolicyType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PositionType.html).", PositionType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintDuplex.html).", PrintDuplex)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintError.html).", PrintError)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintOperationAction.html).", PrintOperationAction)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintOperationResult.html).", PrintOperationResult)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintPages.html).", PrintPages)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintQuality.html).", PrintQuality)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PrintStatus.html).", PrintStatus)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PropagationLimit.html).", PropagationLimit)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.PropagationPhase.html).", PropagationPhase)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.RecentManagerError.html).", RecentManagerError)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ResponseType.html).", ResponseType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.RevealerTransitionType.html).", RevealerTransitionType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ScrollStep.html).", ScrollStep)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ScrollType.html).", ScrollType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ScrollablePolicy.html).", ScrollablePolicy)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SelectionMode.html).", SelectionMode)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SensitivityType.html).", SensitivityType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ShortcutScope.html).", ShortcutScope)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.ShortcutType.html).", ShortcutType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SizeGroupMode.html).", SizeGroupMode)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SizeRequestMode.html).", SizeRequestMode)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SortType.html).", SortType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SorterChange.html).", SorterChange)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SorterOrder.html).", SorterOrder)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SpinButtonUpdatePolicy.html).", SpinButtonUpdatePolicy)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SpinType.html).", SpinType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.StackTransitionType.html).", StackTransitionType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.StringFilterMatchMode.html).", StringFilterMatchMode)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SymbolicColor.html).", SymbolicColor)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.SystemSetting.html).", SystemSetting)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.TextDirection.html).", TextDirection)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.TextExtendSelection.html).", TextExtendSelection)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.TextViewLayer.html).", TextViewLayer)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.TextWindowType.html).", TextWindowType)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.TreeViewColumnSizing.html).", TreeViewColumnSizing)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.TreeViewDropPosition.html).", TreeViewDropPosition)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.TreeViewGridLines.html).", TreeViewGridLines)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.Unit.html).", Unit)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/enum.WrapMode.html).", WrapMode)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.ApplicationInhibitFlags.html).", ApplicationInhibitFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.BuilderClosureFlags.html).", BuilderClosureFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.CellRendererState.html).", CellRendererState)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.DebugFlags.html).", DebugFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.DialogFlags.html).", DialogFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.EventControllerScrollFlags.html).", EventControllerScrollFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.FontChooserLevel.html).", FontChooserLevel)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.IconLookupFlags.html).", IconLookupFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.InputHints.html).", InputHints)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.ListScrollFlags.html).", ListScrollFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.PickFlags.html).", PickFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.PopoverMenuFlags.html).", PopoverMenuFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.PrintCapabilities.html).", PrintCapabilities)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.ShortcutActionFlags.html).", ShortcutActionFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.StateFlags.html).", StateFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.StyleContextPrintFlags.html).", StyleContextPrintFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gtk4/flags.TextSearchFlags.html).", TextSearchFlags)
export AccessibleAnnouncementPriority, AccessibleAutocomplete, AccessibleInvalidState, AccessiblePlatformState, AccessibleProperty, AccessibleRelation, AccessibleRole, AccessibleSort, AccessibleState, AccessibleTextContentChange, AccessibleTextGranularity, AccessibleTristate, Align, ArrowType, AssistantPageType, BaselinePosition, BorderStyle, BuilderError, ButtonsType, CellRendererAccelMode, CellRendererMode, Collation, ConstraintAttribute, ConstraintRelation, ConstraintStrength, ConstraintVflParserError, ContentFit, CornerType, CssParserError, CssParserWarning, DeleteType, DialogError, DirectionType, EditableProperties, EntryIconPosition, EventSequenceState, FileChooserAction, FileChooserError, FilterChange, FilterMatch, FontLevel, GraphicsOffloadEnabled, IconSize, IconThemeError, IconViewDropPosition, ImageType, InputPurpose, InscriptionOverflow, Justification, LevelBarMode, License, ListTabBehavior, MessageType, MovementStep, NaturalWrapMode, NotebookTab, NumberUpLayout, Ordering, Orientation, Overflow, PackType, PadActionType, PageOrientation, PageSet, PanDirection, PolicyType, PositionType, PrintDuplex, PrintError, PrintOperationAction, PrintOperationResult, PrintPages, PrintQuality, PrintStatus, PropagationLimit, PropagationPhase, RecentManagerError, ResponseType, RevealerTransitionType, ScrollStep, ScrollType, ScrollablePolicy, SelectionMode, SensitivityType, ShortcutScope, ShortcutType, SizeGroupMode, SizeRequestMode, SortType, SorterChange, SorterOrder, SpinButtonUpdatePolicy, SpinType, StackTransitionType, StringFilterMatchMode, SymbolicColor, SystemSetting, TextDirection, TextExtendSelection, TextViewLayer, TextWindowType, TreeViewColumnSizing, TreeViewDropPosition, TreeViewGridLines, Unit, WrapMode, ApplicationInhibitFlags, BuilderClosureFlags, CellRendererState, DebugFlags, DialogFlags, EventControllerScrollFlags, FontChooserLevel, IconLookupFlags, InputHints, ListScrollFlags, PickFlags, PopoverMenuFlags, PrintCapabilities, ShortcutActionFlags, StateFlags, StyleContextPrintFlags, TextSearchFlags
