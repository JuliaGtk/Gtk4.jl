const DBUS_METHOD_INVOCATION_HANDLED = true
const DBUS_METHOD_INVOCATION_UNHANDLED = false
const DEBUG_CONTROLLER_EXTENSION_POINT_NAME = "gio-debug-controller"
const DRIVE_IDENTIFIER_KIND_UNIX_DEVICE = "unix-device"
const FILE_ATTRIBUTE_ACCESS_CAN_DELETE = "access::can-delete"
const FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE = "access::can-execute"
const FILE_ATTRIBUTE_ACCESS_CAN_READ = "access::can-read"
const FILE_ATTRIBUTE_ACCESS_CAN_RENAME = "access::can-rename"
const FILE_ATTRIBUTE_ACCESS_CAN_TRASH = "access::can-trash"
const FILE_ATTRIBUTE_ACCESS_CAN_WRITE = "access::can-write"
const FILE_ATTRIBUTE_DOS_IS_ARCHIVE = "dos::is-archive"
const FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT = "dos::is-mountpoint"
const FILE_ATTRIBUTE_DOS_IS_SYSTEM = "dos::is-system"
const FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG = "dos::reparse-point-tag"
const FILE_ATTRIBUTE_ETAG_VALUE = "etag::value"
const FILE_ATTRIBUTE_FILESYSTEM_FREE = "filesystem::free"
const FILE_ATTRIBUTE_FILESYSTEM_READONLY = "filesystem::readonly"
const FILE_ATTRIBUTE_FILESYSTEM_REMOTE = "filesystem::remote"
const FILE_ATTRIBUTE_FILESYSTEM_SIZE = "filesystem::size"
const FILE_ATTRIBUTE_FILESYSTEM_TYPE = "filesystem::type"
const FILE_ATTRIBUTE_FILESYSTEM_USED = "filesystem::used"
const FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW = "filesystem::use-preview"
const FILE_ATTRIBUTE_GVFS_BACKEND = "gvfs::backend"
const FILE_ATTRIBUTE_ID_FILE = "id::file"
const FILE_ATTRIBUTE_ID_FILESYSTEM = "id::filesystem"
const FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT = "mountable::can-eject"
const FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT = "mountable::can-mount"
const FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL = "mountable::can-poll"
const FILE_ATTRIBUTE_MOUNTABLE_CAN_START = "mountable::can-start"
const FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED = "mountable::can-start-degraded"
const FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP = "mountable::can-stop"
const FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT = "mountable::can-unmount"
const FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI = "mountable::hal-udi"
const FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC = "mountable::is-media-check-automatic"
const FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE = "mountable::start-stop-type"
const FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE = "mountable::unix-device"
const FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE = "mountable::unix-device-file"
const FILE_ATTRIBUTE_OWNER_GROUP = "owner::group"
const FILE_ATTRIBUTE_OWNER_USER = "owner::user"
const FILE_ATTRIBUTE_OWNER_USER_REAL = "owner::user-real"
const FILE_ATTRIBUTE_PREVIEW_ICON = "preview::icon"
const FILE_ATTRIBUTE_RECENT_MODIFIED = "recent::modified"
const FILE_ATTRIBUTE_SELINUX_CONTEXT = "selinux::context"
const FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE = "standard::allocated-size"
const FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE = "standard::content-type"
const FILE_ATTRIBUTE_STANDARD_COPY_NAME = "standard::copy-name"
const FILE_ATTRIBUTE_STANDARD_DESCRIPTION = "standard::description"
const FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME = "standard::display-name"
const FILE_ATTRIBUTE_STANDARD_EDIT_NAME = "standard::edit-name"
const FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE = "standard::fast-content-type"
const FILE_ATTRIBUTE_STANDARD_ICON = "standard::icon"
const FILE_ATTRIBUTE_STANDARD_IS_BACKUP = "standard::is-backup"
const FILE_ATTRIBUTE_STANDARD_IS_HIDDEN = "standard::is-hidden"
const FILE_ATTRIBUTE_STANDARD_IS_SYMLINK = "standard::is-symlink"
const FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL = "standard::is-virtual"
const FILE_ATTRIBUTE_STANDARD_IS_VOLATILE = "standard::is-volatile"
const FILE_ATTRIBUTE_STANDARD_NAME = "standard::name"
const FILE_ATTRIBUTE_STANDARD_SIZE = "standard::size"
const FILE_ATTRIBUTE_STANDARD_SORT_ORDER = "standard::sort-order"
const FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON = "standard::symbolic-icon"
const FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET = "standard::symlink-target"
const FILE_ATTRIBUTE_STANDARD_TARGET_URI = "standard::target-uri"
const FILE_ATTRIBUTE_STANDARD_TYPE = "standard::type"
const FILE_ATTRIBUTE_THUMBNAILING_FAILED = "thumbnail::failed"
const FILE_ATTRIBUTE_THUMBNAILING_FAILED_LARGE = "thumbnail::failed-large"
const FILE_ATTRIBUTE_THUMBNAILING_FAILED_NORMAL = "thumbnail::failed-normal"
const FILE_ATTRIBUTE_THUMBNAILING_FAILED_XLARGE = "thumbnail::failed-xlarge"
const FILE_ATTRIBUTE_THUMBNAILING_FAILED_XXLARGE = "thumbnail::failed-xxlarge"
const FILE_ATTRIBUTE_THUMBNAIL_IS_VALID = "thumbnail::is-valid"
const FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_LARGE = "thumbnail::is-valid-large"
const FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_NORMAL = "thumbnail::is-valid-normal"
const FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XLARGE = "thumbnail::is-valid-xlarge"
const FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XXLARGE = "thumbnail::is-valid-xxlarge"
const FILE_ATTRIBUTE_THUMBNAIL_PATH = "thumbnail::path"
const FILE_ATTRIBUTE_THUMBNAIL_PATH_LARGE = "thumbnail::path-large"
const FILE_ATTRIBUTE_THUMBNAIL_PATH_NORMAL = "thumbnail::path-normal"
const FILE_ATTRIBUTE_THUMBNAIL_PATH_XLARGE = "thumbnail::path-xlarge"
const FILE_ATTRIBUTE_THUMBNAIL_PATH_XXLARGE = "thumbnail::path-xxlarge"
const FILE_ATTRIBUTE_TIME_ACCESS = "time::access"
const FILE_ATTRIBUTE_TIME_ACCESS_NSEC = "time::access-nsec"
const FILE_ATTRIBUTE_TIME_ACCESS_USEC = "time::access-usec"
const FILE_ATTRIBUTE_TIME_CHANGED = "time::changed"
const FILE_ATTRIBUTE_TIME_CHANGED_NSEC = "time::changed-nsec"
const FILE_ATTRIBUTE_TIME_CHANGED_USEC = "time::changed-usec"
const FILE_ATTRIBUTE_TIME_CREATED = "time::created"
const FILE_ATTRIBUTE_TIME_CREATED_NSEC = "time::created-nsec"
const FILE_ATTRIBUTE_TIME_CREATED_USEC = "time::created-usec"
const FILE_ATTRIBUTE_TIME_MODIFIED = "time::modified"
const FILE_ATTRIBUTE_TIME_MODIFIED_NSEC = "time::modified-nsec"
const FILE_ATTRIBUTE_TIME_MODIFIED_USEC = "time::modified-usec"
const FILE_ATTRIBUTE_TRASH_DELETION_DATE = "trash::deletion-date"
const FILE_ATTRIBUTE_TRASH_ITEM_COUNT = "trash::item-count"
const FILE_ATTRIBUTE_TRASH_ORIG_PATH = "trash::orig-path"
const FILE_ATTRIBUTE_UNIX_BLOCKS = "unix::blocks"
const FILE_ATTRIBUTE_UNIX_BLOCK_SIZE = "unix::block-size"
const FILE_ATTRIBUTE_UNIX_DEVICE = "unix::device"
const FILE_ATTRIBUTE_UNIX_GID = "unix::gid"
const FILE_ATTRIBUTE_UNIX_INODE = "unix::inode"
const FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT = "unix::is-mountpoint"
const FILE_ATTRIBUTE_UNIX_MODE = "unix::mode"
const FILE_ATTRIBUTE_UNIX_NLINK = "unix::nlink"
const FILE_ATTRIBUTE_UNIX_RDEV = "unix::rdev"
const FILE_ATTRIBUTE_UNIX_UID = "unix::uid"
const MEMORY_MONITOR_EXTENSION_POINT_NAME = "gio-memory-monitor"
const MENU_ATTRIBUTE_ACTION = "action"
const MENU_ATTRIBUTE_ACTION_NAMESPACE = "action-namespace"
const MENU_ATTRIBUTE_ICON = "icon"
const MENU_ATTRIBUTE_LABEL = "label"
const MENU_ATTRIBUTE_TARGET = "target"
const MENU_EXPORTER_MAX_SECTION_SIZE = 1000
const MENU_LINK_SECTION = "section"
const MENU_LINK_SUBMENU = "submenu"
const NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME = "gio-native-volume-monitor"
const NETWORK_MONITOR_EXTENSION_POINT_NAME = "gio-network-monitor"
const POWER_PROFILE_MONITOR_EXTENSION_POINT_NAME = "gio-power-profile-monitor"
const PROXY_EXTENSION_POINT_NAME = "gio-proxy"
const PROXY_RESOLVER_EXTENSION_POINT_NAME = "gio-proxy-resolver"
const SETTINGS_BACKEND_EXTENSION_POINT_NAME = "gsettings-backend"
const TLS_BACKEND_EXTENSION_POINT_NAME = "gio-tls-backend"
const TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT = "1.3.6.1.5.5.7.3.2"
const TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER = "1.3.6.1.5.5.7.3.1"
const VFS_EXTENSION_POINT_NAME = "gio-vfs"
const VOLUME_IDENTIFIER_KIND_CLASS = "class"
const VOLUME_IDENTIFIER_KIND_LABEL = "label"
const VOLUME_IDENTIFIER_KIND_NFS_MOUNT = "nfs-mount"
const VOLUME_IDENTIFIER_KIND_UNIX_DEVICE = "unix-device"
const VOLUME_IDENTIFIER_KIND_UUID = "uuid"
const VOLUME_MONITOR_EXTENSION_POINT_NAME = "gio-volume-monitor"
@cenum(BusType::UInt16, BusType_STARTER = 0xffff, BusType_NONE = 0x0000, BusType_SYSTEM = 0x0001, BusType_SESSION = 0x0002)
(GLib.g_type(::Type{T}) where T <: BusType) = ccall(("g_bus_type_get_type", libgio), GType, ())
@cenum(ConverterResult::Int32, ConverterResult_ERROR = 0, ConverterResult_CONVERTED = 1, ConverterResult_FINISHED = 2, ConverterResult_FLUSHED = 3)
(GLib.g_type(::Type{T}) where T <: ConverterResult) = ccall(("g_converter_result_get_type", libgio), GType, ())
@cenum(CredentialsType::Int32, CredentialsType_INVALID = 0, CredentialsType_LINUX_UCRED = 1, CredentialsType_FREEBSD_CMSGCRED = 2, CredentialsType_OPENBSD_SOCKPEERCRED = 3, CredentialsType_SOLARIS_UCRED = 4, CredentialsType_NETBSD_UNPCBID = 5, CredentialsType_APPLE_XUCRED = 6, CredentialsType_WIN32_PID = 7)
(GLib.g_type(::Type{T}) where T <: CredentialsType) = ccall(("g_credentials_type_get_type", libgio), GType, ())
@cenum(DBusError::Int32, DBusError_FAILED = 0, DBusError_NO_MEMORY = 1, DBusError_SERVICE_UNKNOWN = 2, DBusError_NAME_HAS_NO_OWNER = 3, DBusError_NO_REPLY = 4, DBusError_IO_ERROR = 5, DBusError_BAD_ADDRESS = 6, DBusError_NOT_SUPPORTED = 7, DBusError_LIMITS_EXCEEDED = 8, DBusError_ACCESS_DENIED = 9, DBusError_AUTH_FAILED = 10, DBusError_NO_SERVER = 11, DBusError_TIMEOUT = 12, DBusError_NO_NETWORK = 13, DBusError_ADDRESS_IN_USE = 14, DBusError_DISCONNECTED = 15, DBusError_INVALID_ARGS = 16, DBusError_FILE_NOT_FOUND = 17, DBusError_FILE_EXISTS = 18, DBusError_UNKNOWN_METHOD = 19, DBusError_TIMED_OUT = 20, DBusError_MATCH_RULE_NOT_FOUND = 21, DBusError_MATCH_RULE_INVALID = 22, DBusError_SPAWN_EXEC_FAILED = 23, DBusError_SPAWN_FORK_FAILED = 24, DBusError_SPAWN_CHILD_EXITED = 25, DBusError_SPAWN_CHILD_SIGNALED = 26, DBusError_SPAWN_FAILED = 27, DBusError_SPAWN_SETUP_FAILED = 28, DBusError_SPAWN_CONFIG_INVALID = 29, DBusError_SPAWN_SERVICE_INVALID = 30, DBusError_SPAWN_SERVICE_NOT_FOUND = 31, DBusError_SPAWN_PERMISSIONS_INVALID = 32, DBusError_SPAWN_FILE_INVALID = 33, DBusError_SPAWN_NO_MEMORY = 34, DBusError_UNIX_PROCESS_ID_UNKNOWN = 35, DBusError_INVALID_SIGNATURE = 36, DBusError_INVALID_FILE_CONTENT = 37, DBusError_SELINUX_SECURITY_CONTEXT_UNKNOWN = 38, DBusError_ADT_AUDIT_DATA_UNKNOWN = 39, DBusError_OBJECT_PATH_IN_USE = 40, DBusError_UNKNOWN_OBJECT = 41, DBusError_UNKNOWN_INTERFACE = 42, DBusError_UNKNOWN_PROPERTY = 43, DBusError_PROPERTY_READ_ONLY = 44)
(GLib.g_type(::Type{T}) where T <: DBusError) = ccall(("g_dbus_error_get_type", libgio), GType, ())
@cenum(DBusMessageByteOrder::Int32, DBusMessageByteOrder_BIG_ENDIAN = 66, DBusMessageByteOrder_LITTLE_ENDIAN = 108)
(GLib.g_type(::Type{T}) where T <: DBusMessageByteOrder) = ccall(("g_dbus_message_byte_order_get_type", libgio), GType, ())
@cenum(DBusMessageHeaderField::Int32, DBusMessageHeaderField_INVALID = 0, DBusMessageHeaderField_PATH = 1, DBusMessageHeaderField_INTERFACE = 2, DBusMessageHeaderField_MEMBER = 3, DBusMessageHeaderField_ERROR_NAME = 4, DBusMessageHeaderField_REPLY_SERIAL = 5, DBusMessageHeaderField_DESTINATION = 6, DBusMessageHeaderField_SENDER = 7, DBusMessageHeaderField_SIGNATURE = 8, DBusMessageHeaderField_NUM_UNIX_FDS = 9)
(GLib.g_type(::Type{T}) where T <: DBusMessageHeaderField) = ccall(("g_dbus_message_header_field_get_type", libgio), GType, ())
@cenum(DBusMessageType::Int32, DBusMessageType_INVALID = 0, DBusMessageType_METHOD_CALL = 1, DBusMessageType_METHOD_RETURN = 2, DBusMessageType_ERROR = 3, DBusMessageType_SIGNAL = 4)
(GLib.g_type(::Type{T}) where T <: DBusMessageType) = ccall(("g_dbus_message_type_get_type", libgio), GType, ())
@cenum(DataStreamByteOrder::Int32, DataStreamByteOrder_BIG_ENDIAN = 0, DataStreamByteOrder_LITTLE_ENDIAN = 1, DataStreamByteOrder_HOST_ENDIAN = 2)
(GLib.g_type(::Type{T}) where T <: DataStreamByteOrder) = ccall(("g_data_stream_byte_order_get_type", libgio), GType, ())
@cenum(DataStreamNewlineType::Int32, DataStreamNewlineType_LF = 0, DataStreamNewlineType_CR = 1, DataStreamNewlineType_CR_LF = 2, DataStreamNewlineType_ANY = 3)
(GLib.g_type(::Type{T}) where T <: DataStreamNewlineType) = ccall(("g_data_stream_newline_type_get_type", libgio), GType, ())
@cenum(DriveStartStopType::Int32, DriveStartStopType_UNKNOWN = 0, DriveStartStopType_SHUTDOWN = 1, DriveStartStopType_NETWORK = 2, DriveStartStopType_MULTIDISK = 3, DriveStartStopType_PASSWORD = 4)
(GLib.g_type(::Type{T}) where T <: DriveStartStopType) = ccall(("g_drive_start_stop_type_get_type", libgio), GType, ())
@cenum(EmblemOrigin::Int32, EmblemOrigin_UNKNOWN = 0, EmblemOrigin_DEVICE = 1, EmblemOrigin_LIVEMETADATA = 2, EmblemOrigin_TAG = 3)
(GLib.g_type(::Type{T}) where T <: EmblemOrigin) = ccall(("g_emblem_origin_get_type", libgio), GType, ())
@cenum(FileAttributeStatus::Int32, FileAttributeStatus_UNSET = 0, FileAttributeStatus_SET = 1, FileAttributeStatus_ERROR_SETTING = 2)
(GLib.g_type(::Type{T}) where T <: FileAttributeStatus) = ccall(("g_file_attribute_status_get_type", libgio), GType, ())
@cenum(FileAttributeType::Int32, FileAttributeType_INVALID = 0, FileAttributeType_STRING = 1, FileAttributeType_BYTE_STRING = 2, FileAttributeType_BOOLEAN = 3, FileAttributeType_UINT32 = 4, FileAttributeType_INT32 = 5, FileAttributeType_UINT64 = 6, FileAttributeType_INT64 = 7, FileAttributeType_OBJECT = 8, FileAttributeType_STRINGV = 9)
(GLib.g_type(::Type{T}) where T <: FileAttributeType) = ccall(("g_file_attribute_type_get_type", libgio), GType, ())
@cenum(FileMonitorEvent::Int32, FileMonitorEvent_CHANGED = 0, FileMonitorEvent_CHANGES_DONE_HINT = 1, FileMonitorEvent_DELETED = 2, FileMonitorEvent_CREATED = 3, FileMonitorEvent_ATTRIBUTE_CHANGED = 4, FileMonitorEvent_PRE_UNMOUNT = 5, FileMonitorEvent_UNMOUNTED = 6, FileMonitorEvent_MOVED = 7, FileMonitorEvent_RENAMED = 8, FileMonitorEvent_MOVED_IN = 9, FileMonitorEvent_MOVED_OUT = 10)
(GLib.g_type(::Type{T}) where T <: FileMonitorEvent) = ccall(("g_file_monitor_event_get_type", libgio), GType, ())
@cenum(FileType::Int32, FileType_UNKNOWN = 0, FileType_REGULAR = 1, FileType_DIRECTORY = 2, FileType_SYMBOLIC_LINK = 3, FileType_SPECIAL = 4, FileType_SHORTCUT = 5, FileType_MOUNTABLE = 6)
(GLib.g_type(::Type{T}) where T <: FileType) = ccall(("g_file_type_get_type", libgio), GType, ())
@cenum(FilesystemPreviewType::Int32, FilesystemPreviewType_IF_ALWAYS = 0, FilesystemPreviewType_IF_LOCAL = 1, FilesystemPreviewType_NEVER = 2)
(GLib.g_type(::Type{T}) where T <: FilesystemPreviewType) = ccall(("g_filesystem_preview_type_get_type", libgio), GType, ())
@cenum(IOErrorEnum::Int32, IOErrorEnum_FAILED = 0, IOErrorEnum_NOT_FOUND = 1, IOErrorEnum_EXISTS = 2, IOErrorEnum_IS_DIRECTORY = 3, IOErrorEnum_NOT_DIRECTORY = 4, IOErrorEnum_NOT_EMPTY = 5, IOErrorEnum_NOT_REGULAR_FILE = 6, IOErrorEnum_NOT_SYMBOLIC_LINK = 7, IOErrorEnum_NOT_MOUNTABLE_FILE = 8, IOErrorEnum_FILENAME_TOO_LONG = 9, IOErrorEnum_INVALID_FILENAME = 10, IOErrorEnum_TOO_MANY_LINKS = 11, IOErrorEnum_NO_SPACE = 12, IOErrorEnum_INVALID_ARGUMENT = 13, IOErrorEnum_PERMISSION_DENIED = 14, IOErrorEnum_NOT_SUPPORTED = 15, IOErrorEnum_NOT_MOUNTED = 16, IOErrorEnum_ALREADY_MOUNTED = 17, IOErrorEnum_CLOSED = 18, IOErrorEnum_CANCELLED = 19, IOErrorEnum_PENDING = 20, IOErrorEnum_READ_ONLY = 21, IOErrorEnum_CANT_CREATE_BACKUP = 22, IOErrorEnum_WRONG_ETAG = 23, IOErrorEnum_TIMED_OUT = 24, IOErrorEnum_WOULD_RECURSE = 25, IOErrorEnum_BUSY = 26, IOErrorEnum_WOULD_BLOCK = 27, IOErrorEnum_HOST_NOT_FOUND = 28, IOErrorEnum_WOULD_MERGE = 29, IOErrorEnum_FAILED_HANDLED = 30, IOErrorEnum_TOO_MANY_OPEN_FILES = 31, IOErrorEnum_NOT_INITIALIZED = 32, IOErrorEnum_ADDRESS_IN_USE = 33, IOErrorEnum_PARTIAL_INPUT = 34, IOErrorEnum_INVALID_DATA = 35, IOErrorEnum_DBUS_ERROR = 36, IOErrorEnum_HOST_UNREACHABLE = 37, IOErrorEnum_NETWORK_UNREACHABLE = 38, IOErrorEnum_CONNECTION_REFUSED = 39, IOErrorEnum_PROXY_FAILED = 40, IOErrorEnum_PROXY_AUTH_FAILED = 41, IOErrorEnum_PROXY_NEED_AUTH = 42, IOErrorEnum_PROXY_NOT_ALLOWED = 43, IOErrorEnum_BROKEN_PIPE = 44, IOErrorEnum_CONNECTION_CLOSED = 44, IOErrorEnum_NOT_CONNECTED = 45, IOErrorEnum_MESSAGE_TOO_LARGE = 46, IOErrorEnum_NO_SUCH_DEVICE = 47, IOErrorEnum_DESTINATION_UNSET = 48)
(GLib.g_type(::Type{T}) where T <: IOErrorEnum) = ccall(("g_io_error_enum_get_type", libgio), GType, ())
@cenum(IOModuleScopeFlags::Int32, IOModuleScopeFlags_NONE = 0, IOModuleScopeFlags_BLOCK_DUPLICATES = 1)
(GLib.g_type(::Type{T}) where T <: IOModuleScopeFlags) = ccall(("g_io_module_scope_flags_get_type", libgio), GType, ())
@cenum(MemoryMonitorWarningLevel::Int32, MemoryMonitorWarningLevel_LOW = 50, MemoryMonitorWarningLevel_MEDIUM = 100, MemoryMonitorWarningLevel_CRITICAL = 255)
(GLib.g_type(::Type{T}) where T <: MemoryMonitorWarningLevel) = ccall(("g_memory_monitor_warning_level_get_type", libgio), GType, ())
@cenum(MountOperationResult::Int32, MountOperationResult_HANDLED = 0, MountOperationResult_ABORTED = 1, MountOperationResult_UNHANDLED = 2)
(GLib.g_type(::Type{T}) where T <: MountOperationResult) = ccall(("g_mount_operation_result_get_type", libgio), GType, ())
@cenum(NetworkConnectivity::Int32, NetworkConnectivity_LOCAL = 1, NetworkConnectivity_LIMITED = 2, NetworkConnectivity_PORTAL = 3, NetworkConnectivity_FULL = 4)
(GLib.g_type(::Type{T}) where T <: NetworkConnectivity) = ccall(("g_network_connectivity_get_type", libgio), GType, ())
@cenum(NotificationPriority::Int32, NotificationPriority_NORMAL = 0, NotificationPriority_LOW = 1, NotificationPriority_HIGH = 2, NotificationPriority_URGENT = 3)
(GLib.g_type(::Type{T}) where T <: NotificationPriority) = ccall(("g_notification_priority_get_type", libgio), GType, ())
@cenum(PasswordSave::Int32, PasswordSave_NEVER = 0, PasswordSave_FOR_SESSION = 1, PasswordSave_PERMANENTLY = 2)
(GLib.g_type(::Type{T}) where T <: PasswordSave) = ccall(("g_password_save_get_type", libgio), GType, ())
@cenum(PollableReturn::UInt16, PollableReturn_FAILED = 0x0000, PollableReturn_OK = 0x0001, PollableReturn_WOULD_BLOCK = 0xffe5)
(GLib.g_type(::Type{T}) where T <: PollableReturn) = ccall(("g_pollable_return_get_type", libgio), GType, ())
@cenum(ResolverError::Int32, ResolverError_NOT_FOUND = 0, ResolverError_TEMPORARY_FAILURE = 1, ResolverError_INTERNAL = 2)
(GLib.g_type(::Type{T}) where T <: ResolverError) = ccall(("g_resolver_error_get_type", libgio), GType, ())
@cenum(ResolverRecordType::Int32, ResolverRecordType_SRV = 1, ResolverRecordType_MX = 2, ResolverRecordType_TXT = 3, ResolverRecordType_SOA = 4, ResolverRecordType_NS = 5)
(GLib.g_type(::Type{T}) where T <: ResolverRecordType) = ccall(("g_resolver_record_type_get_type", libgio), GType, ())
@cenum(ResourceError::Int32, ResourceError_NOT_FOUND = 0, ResourceError_INTERNAL = 1)
(GLib.g_type(::Type{T}) where T <: ResourceError) = ccall(("g_resource_error_get_type", libgio), GType, ())
@cenum(SocketClientEvent::Int32, SocketClientEvent_RESOLVING = 0, SocketClientEvent_RESOLVED = 1, SocketClientEvent_CONNECTING = 2, SocketClientEvent_CONNECTED = 3, SocketClientEvent_PROXY_NEGOTIATING = 4, SocketClientEvent_PROXY_NEGOTIATED = 5, SocketClientEvent_TLS_HANDSHAKING = 6, SocketClientEvent_TLS_HANDSHAKED = 7, SocketClientEvent_COMPLETE = 8)
(GLib.g_type(::Type{T}) where T <: SocketClientEvent) = ccall(("g_socket_client_event_get_type", libgio), GType, ())
@cenum(SocketFamily::Int32, SocketFamily_INVALID = 0, SocketFamily_UNIX = 1, SocketFamily_IPV4 = 2, SocketFamily_IPV6 = 10)
(GLib.g_type(::Type{T}) where T <: SocketFamily) = ccall(("g_socket_family_get_type", libgio), GType, ())
@cenum(SocketListenerEvent::Int32, SocketListenerEvent_BINDING = 0, SocketListenerEvent_BOUND = 1, SocketListenerEvent_LISTENING = 2, SocketListenerEvent_LISTENED = 3)
(GLib.g_type(::Type{T}) where T <: SocketListenerEvent) = ccall(("g_socket_listener_event_get_type", libgio), GType, ())
@cenum(SocketProtocol::UInt16, SocketProtocol_UNKNOWN = 0xffff, SocketProtocol_DEFAULT = 0x0000, SocketProtocol_TCP = 0x0006, SocketProtocol_UDP = 0x0011, SocketProtocol_SCTP = 0x0084)
(GLib.g_type(::Type{T}) where T <: SocketProtocol) = ccall(("g_socket_protocol_get_type", libgio), GType, ())
@cenum(SocketType::Int32, SocketType_INVALID = 0, SocketType_STREAM = 1, SocketType_DATAGRAM = 2, SocketType_SEQPACKET = 3)
(GLib.g_type(::Type{T}) where T <: SocketType) = ccall(("g_socket_type_get_type", libgio), GType, ())
@cenum(TlsAuthenticationMode::Int32, TlsAuthenticationMode_NONE = 0, TlsAuthenticationMode_REQUESTED = 1, TlsAuthenticationMode_REQUIRED = 2)
(GLib.g_type(::Type{T}) where T <: TlsAuthenticationMode) = ccall(("g_tls_authentication_mode_get_type", libgio), GType, ())
@cenum(TlsCertificateRequestFlags::Int32, TlsCertificateRequestFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: TlsCertificateRequestFlags) = ccall(("g_tls_certificate_request_flags_get_type", libgio), GType, ())
@cenum(TlsChannelBindingError::Int32, TlsChannelBindingError_NOT_IMPLEMENTED = 0, TlsChannelBindingError_INVALID_STATE = 1, TlsChannelBindingError_NOT_AVAILABLE = 2, TlsChannelBindingError_NOT_SUPPORTED = 3, TlsChannelBindingError_GENERAL_ERROR = 4)
(GLib.g_type(::Type{T}) where T <: TlsChannelBindingError) = ccall(("g_tls_channel_binding_error_get_type", libgio), GType, ())
@cenum(TlsChannelBindingType::Int32, TlsChannelBindingType_UNIQUE = 0, TlsChannelBindingType_SERVER_END_POINT = 1, TlsChannelBindingType_EXPORTER = 2)
(GLib.g_type(::Type{T}) where T <: TlsChannelBindingType) = ccall(("g_tls_channel_binding_type_get_type", libgio), GType, ())
@cenum(TlsDatabaseLookupFlags::Int32, TlsDatabaseLookupFlags_NONE = 0, TlsDatabaseLookupFlags_KEYPAIR = 1)
(GLib.g_type(::Type{T}) where T <: TlsDatabaseLookupFlags) = ccall(("g_tls_database_lookup_flags_get_type", libgio), GType, ())
@cenum(TlsError::Int32, TlsError_UNAVAILABLE = 0, TlsError_MISC = 1, TlsError_BAD_CERTIFICATE = 2, TlsError_NOT_TLS = 3, TlsError_HANDSHAKE = 4, TlsError_CERTIFICATE_REQUIRED = 5, TlsError_EOF = 6, TlsError_INAPPROPRIATE_FALLBACK = 7, TlsError_BAD_CERTIFICATE_PASSWORD = 8)
(GLib.g_type(::Type{T}) where T <: TlsError) = ccall(("g_tls_error_get_type", libgio), GType, ())
@cenum(TlsInteractionResult::Int32, TlsInteractionResult_UNHANDLED = 0, TlsInteractionResult_HANDLED = 1, TlsInteractionResult_FAILED = 2)
(GLib.g_type(::Type{T}) where T <: TlsInteractionResult) = ccall(("g_tls_interaction_result_get_type", libgio), GType, ())
@cenum(UnixSocketAddressType::Int32, UnixSocketAddressType_INVALID = 0, UnixSocketAddressType_ANONYMOUS = 1, UnixSocketAddressType_PATH = 2, UnixSocketAddressType_ABSTRACT = 3, UnixSocketAddressType_ABSTRACT_PADDED = 4)
(GLib.g_type(::Type{T}) where T <: UnixSocketAddressType) = ccall(("g_unix_socket_address_type_get_type", libgio), GType, ())
@cenum(ZlibCompressorFormat::Int32, ZlibCompressorFormat_ZLIB = 0, ZlibCompressorFormat_GZIP = 1, ZlibCompressorFormat_RAW = 2)
(GLib.g_type(::Type{T}) where T <: ZlibCompressorFormat) = ccall(("g_zlib_compressor_format_get_type", libgio), GType, ())
@bitflag(AppInfoCreateFlags::UInt32, AppInfoCreateFlags_NONE = 0, AppInfoCreateFlags_NEEDS_TERMINAL = 1, AppInfoCreateFlags_SUPPORTS_URIS = 2, AppInfoCreateFlags_SUPPORTS_STARTUP_NOTIFICATION = 4)
(GLib.g_type(::Type{T}) where T <: AppInfoCreateFlags) = ccall(("g_app_info_create_flags_get_type", libgio), GType, ())
@bitflag(ApplicationFlags::UInt32, ApplicationFlags_FLAGS_NONE = 0, ApplicationFlags_IS_SERVICE = 1, ApplicationFlags_IS_LAUNCHER = 2, ApplicationFlags_HANDLES_OPEN = 4, ApplicationFlags_HANDLES_COMMAND_LINE = 8, ApplicationFlags_SEND_ENVIRONMENT = 16, ApplicationFlags_NON_UNIQUE = 32, ApplicationFlags_CAN_OVERRIDE_APP_ID = 64, ApplicationFlags_ALLOW_REPLACEMENT = 128, ApplicationFlags_REPLACE = 256)
(GLib.g_type(::Type{T}) where T <: ApplicationFlags) = ccall(("g_application_flags_get_type", libgio), GType, ())
@bitflag(AskPasswordFlags::UInt32, AskPasswordFlags_NEED_PASSWORD = 1, AskPasswordFlags_NEED_USERNAME = 2, AskPasswordFlags_NEED_DOMAIN = 4, AskPasswordFlags_SAVING_SUPPORTED = 8, AskPasswordFlags_ANONYMOUS_SUPPORTED = 16, AskPasswordFlags_TCRYPT = 32, AskPasswordFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: AskPasswordFlags) = ccall(("g_ask_password_flags_get_type", libgio), GType, ())
@bitflag(BusNameOwnerFlags::UInt32, BusNameOwnerFlags_NONE = 0, BusNameOwnerFlags_ALLOW_REPLACEMENT = 1, BusNameOwnerFlags_REPLACE = 2, BusNameOwnerFlags_DO_NOT_QUEUE = 4)
(GLib.g_type(::Type{T}) where T <: BusNameOwnerFlags) = ccall(("g_bus_name_owner_flags_get_type", libgio), GType, ())
@bitflag(BusNameWatcherFlags::UInt32, BusNameWatcherFlags_NONE = 0, BusNameWatcherFlags_AUTO_START = 1)
(GLib.g_type(::Type{T}) where T <: BusNameWatcherFlags) = ccall(("g_bus_name_watcher_flags_get_type", libgio), GType, ())
@bitflag(ConverterFlags::UInt32, ConverterFlags_NONE = 0, ConverterFlags_INPUT_AT_END = 1, ConverterFlags_FLUSH = 2)
(GLib.g_type(::Type{T}) where T <: ConverterFlags) = ccall(("g_converter_flags_get_type", libgio), GType, ())
@bitflag(DBusCallFlags::UInt32, DBusCallFlags_NONE = 0, DBusCallFlags_NO_AUTO_START = 1, DBusCallFlags_ALLOW_INTERACTIVE_AUTHORIZATION = 2)
(GLib.g_type(::Type{T}) where T <: DBusCallFlags) = ccall(("g_dbus_call_flags_get_type", libgio), GType, ())
@bitflag(DBusCapabilityFlags::UInt32, DBusCapabilityFlags_NONE = 0, DBusCapabilityFlags_UNIX_FD_PASSING = 1)
(GLib.g_type(::Type{T}) where T <: DBusCapabilityFlags) = ccall(("g_dbus_capability_flags_get_type", libgio), GType, ())
@bitflag(DBusConnectionFlags::UInt32, DBusConnectionFlags_NONE = 0, DBusConnectionFlags_AUTHENTICATION_CLIENT = 1, DBusConnectionFlags_AUTHENTICATION_SERVER = 2, DBusConnectionFlags_AUTHENTICATION_ALLOW_ANONYMOUS = 4, DBusConnectionFlags_MESSAGE_BUS_CONNECTION = 8, DBusConnectionFlags_DELAY_MESSAGE_PROCESSING = 16, DBusConnectionFlags_AUTHENTICATION_REQUIRE_SAME_USER = 32, DBusConnectionFlags_CROSS_NAMESPACE = 64)
(GLib.g_type(::Type{T}) where T <: DBusConnectionFlags) = ccall(("g_dbus_connection_flags_get_type", libgio), GType, ())
@bitflag(DBusInterfaceSkeletonFlags::UInt32, DBusInterfaceSkeletonFlags_NONE = 0, DBusInterfaceSkeletonFlags_HANDLE_METHOD_INVOCATIONS_IN_THREAD = 1)
(GLib.g_type(::Type{T}) where T <: DBusInterfaceSkeletonFlags) = ccall(("g_dbus_interface_skeleton_flags_get_type", libgio), GType, ())
@bitflag(DBusMessageFlags::UInt32, DBusMessageFlags_NONE = 0, DBusMessageFlags_NO_REPLY_EXPECTED = 1, DBusMessageFlags_NO_AUTO_START = 2, DBusMessageFlags_ALLOW_INTERACTIVE_AUTHORIZATION = 4)
(GLib.g_type(::Type{T}) where T <: DBusMessageFlags) = ccall(("g_dbus_message_flags_get_type", libgio), GType, ())
@bitflag(DBusObjectManagerClientFlags::UInt32, DBusObjectManagerClientFlags_NONE = 0, DBusObjectManagerClientFlags_DO_NOT_AUTO_START = 1)
(GLib.g_type(::Type{T}) where T <: DBusObjectManagerClientFlags) = ccall(("g_dbus_object_manager_client_flags_get_type", libgio), GType, ())
@bitflag(DBusPropertyInfoFlags::UInt32, DBusPropertyInfoFlags_NONE = 0, DBusPropertyInfoFlags_READABLE = 1, DBusPropertyInfoFlags_WRITABLE = 2)
(GLib.g_type(::Type{T}) where T <: DBusPropertyInfoFlags) = ccall(("g_dbus_property_info_flags_get_type", libgio), GType, ())
@bitflag(DBusProxyFlags::UInt32, DBusProxyFlags_NONE = 0, DBusProxyFlags_DO_NOT_LOAD_PROPERTIES = 1, DBusProxyFlags_DO_NOT_CONNECT_SIGNALS = 2, DBusProxyFlags_DO_NOT_AUTO_START = 4, DBusProxyFlags_GET_INVALIDATED_PROPERTIES = 8, DBusProxyFlags_DO_NOT_AUTO_START_AT_CONSTRUCTION = 16, DBusProxyFlags_NO_MATCH_RULE = 32)
(GLib.g_type(::Type{T}) where T <: DBusProxyFlags) = ccall(("g_dbus_proxy_flags_get_type", libgio), GType, ())
@bitflag(DBusSendMessageFlags::UInt32, DBusSendMessageFlags_NONE = 0, DBusSendMessageFlags_PRESERVE_SERIAL = 1)
(GLib.g_type(::Type{T}) where T <: DBusSendMessageFlags) = ccall(("g_dbus_send_message_flags_get_type", libgio), GType, ())
@bitflag(DBusServerFlags::UInt32, DBusServerFlags_NONE = 0, DBusServerFlags_RUN_IN_THREAD = 1, DBusServerFlags_AUTHENTICATION_ALLOW_ANONYMOUS = 2, DBusServerFlags_AUTHENTICATION_REQUIRE_SAME_USER = 4)
(GLib.g_type(::Type{T}) where T <: DBusServerFlags) = ccall(("g_dbus_server_flags_get_type", libgio), GType, ())
@bitflag(DBusSignalFlags::UInt32, DBusSignalFlags_NONE = 0, DBusSignalFlags_NO_MATCH_RULE = 1, DBusSignalFlags_MATCH_ARG0_NAMESPACE = 2, DBusSignalFlags_MATCH_ARG0_PATH = 4)
(GLib.g_type(::Type{T}) where T <: DBusSignalFlags) = ccall(("g_dbus_signal_flags_get_type", libgio), GType, ())
@bitflag(DBusSubtreeFlags::UInt32, DBusSubtreeFlags_NONE = 0, DBusSubtreeFlags_DISPATCH_TO_UNENUMERATED_NODES = 1)
(GLib.g_type(::Type{T}) where T <: DBusSubtreeFlags) = ccall(("g_dbus_subtree_flags_get_type", libgio), GType, ())
@bitflag(DriveStartFlags::UInt32, DriveStartFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: DriveStartFlags) = ccall(("g_drive_start_flags_get_type", libgio), GType, ())
@bitflag(FileAttributeInfoFlags::UInt32, FileAttributeInfoFlags_NONE = 0, FileAttributeInfoFlags_COPY_WITH_FILE = 1, FileAttributeInfoFlags_COPY_WHEN_MOVED = 2)
(GLib.g_type(::Type{T}) where T <: FileAttributeInfoFlags) = ccall(("g_file_attribute_info_flags_get_type", libgio), GType, ())
@bitflag(FileCopyFlags::UInt32, FileCopyFlags_NONE = 0, FileCopyFlags_OVERWRITE = 1, FileCopyFlags_BACKUP = 2, FileCopyFlags_NOFOLLOW_SYMLINKS = 4, FileCopyFlags_ALL_METADATA = 8, FileCopyFlags_NO_FALLBACK_FOR_MOVE = 16, FileCopyFlags_TARGET_DEFAULT_PERMS = 32, FileCopyFlags_TARGET_DEFAULT_MODIFIED_TIME = 64)
(GLib.g_type(::Type{T}) where T <: FileCopyFlags) = ccall(("g_file_copy_flags_get_type", libgio), GType, ())
@bitflag(FileCreateFlags::UInt32, FileCreateFlags_NONE = 0, FileCreateFlags_PRIVATE = 1, FileCreateFlags_REPLACE_DESTINATION = 2)
(GLib.g_type(::Type{T}) where T <: FileCreateFlags) = ccall(("g_file_create_flags_get_type", libgio), GType, ())
@bitflag(FileMeasureFlags::UInt32, FileMeasureFlags_NONE = 0, FileMeasureFlags_REPORT_ANY_ERROR = 2, FileMeasureFlags_APPARENT_SIZE = 4, FileMeasureFlags_NO_XDEV = 8)
(GLib.g_type(::Type{T}) where T <: FileMeasureFlags) = ccall(("g_file_measure_flags_get_type", libgio), GType, ())
@bitflag(FileMonitorFlags::UInt32, FileMonitorFlags_NONE = 0, FileMonitorFlags_WATCH_MOUNTS = 1, FileMonitorFlags_SEND_MOVED = 2, FileMonitorFlags_WATCH_HARD_LINKS = 4, FileMonitorFlags_WATCH_MOVES = 8)
(GLib.g_type(::Type{T}) where T <: FileMonitorFlags) = ccall(("g_file_monitor_flags_get_type", libgio), GType, ())
@bitflag(FileQueryInfoFlags::UInt32, FileQueryInfoFlags_NONE = 0, FileQueryInfoFlags_NOFOLLOW_SYMLINKS = 1)
(GLib.g_type(::Type{T}) where T <: FileQueryInfoFlags) = ccall(("g_file_query_info_flags_get_type", libgio), GType, ())
@bitflag(IOStreamSpliceFlags::UInt32, IOStreamSpliceFlags_NONE = 0, IOStreamSpliceFlags_CLOSE_STREAM1 = 1, IOStreamSpliceFlags_CLOSE_STREAM2 = 2, IOStreamSpliceFlags_WAIT_FOR_BOTH = 4)
(GLib.g_type(::Type{T}) where T <: IOStreamSpliceFlags) = ccall(("g_io_stream_splice_flags_get_type", libgio), GType, ())
@bitflag(MountMountFlags::UInt32, MountMountFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: MountMountFlags) = ccall(("g_mount_mount_flags_get_type", libgio), GType, ())
@bitflag(MountUnmountFlags::UInt32, MountUnmountFlags_NONE = 0, MountUnmountFlags_FORCE = 1)
(GLib.g_type(::Type{T}) where T <: MountUnmountFlags) = ccall(("g_mount_unmount_flags_get_type", libgio), GType, ())
@bitflag(OutputStreamSpliceFlags::UInt32, OutputStreamSpliceFlags_NONE = 0, OutputStreamSpliceFlags_CLOSE_SOURCE = 1, OutputStreamSpliceFlags_CLOSE_TARGET = 2)
(GLib.g_type(::Type{T}) where T <: OutputStreamSpliceFlags) = ccall(("g_output_stream_splice_flags_get_type", libgio), GType, ())
@bitflag(ResolverNameLookupFlags::UInt32, ResolverNameLookupFlags_DEFAULT = 0, ResolverNameLookupFlags_IPV4_ONLY = 1, ResolverNameLookupFlags_IPV6_ONLY = 2)
(GLib.g_type(::Type{T}) where T <: ResolverNameLookupFlags) = ccall(("g_resolver_name_lookup_flags_get_type", libgio), GType, ())
@bitflag(ResourceFlags::UInt32, ResourceFlags_NONE = 0, ResourceFlags_COMPRESSED = 1)
(GLib.g_type(::Type{T}) where T <: ResourceFlags) = ccall(("g_resource_flags_get_type", libgio), GType, ())
@bitflag(ResourceLookupFlags::UInt32, ResourceLookupFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: ResourceLookupFlags) = ccall(("g_resource_lookup_flags_get_type", libgio), GType, ())
@bitflag(SettingsBindFlags::UInt32, SettingsBindFlags_DEFAULT = 0, SettingsBindFlags_GET = 1, SettingsBindFlags_SET = 2, SettingsBindFlags_NO_SENSITIVITY = 4, SettingsBindFlags_GET_NO_CHANGES = 8, SettingsBindFlags_INVERT_BOOLEAN = 16)
(GLib.g_type(::Type{T}) where T <: SettingsBindFlags) = ccall(("g_settings_bind_flags_get_type", libgio), GType, ())
@bitflag(SocketMsgFlags::UInt32, SocketMsgFlags_NONE = 0, SocketMsgFlags_OOB = 1, SocketMsgFlags_PEEK = 2, SocketMsgFlags_DONTROUTE = 4)
(GLib.g_type(::Type{T}) where T <: SocketMsgFlags) = ccall(("g_socket_msg_flags_get_type", libgio), GType, ())
@bitflag(SubprocessFlags::UInt32, SubprocessFlags_NONE = 0, SubprocessFlags_STDIN_PIPE = 1, SubprocessFlags_STDIN_INHERIT = 2, SubprocessFlags_STDOUT_PIPE = 4, SubprocessFlags_STDOUT_SILENCE = 8, SubprocessFlags_STDERR_PIPE = 16, SubprocessFlags_STDERR_SILENCE = 32, SubprocessFlags_STDERR_MERGE = 64, SubprocessFlags_INHERIT_FDS = 128, SubprocessFlags_SEARCH_PATH_FROM_ENVP = 256)
(GLib.g_type(::Type{T}) where T <: SubprocessFlags) = ccall(("g_subprocess_flags_get_type", libgio), GType, ())
@bitflag(TestDBusFlags::UInt32, TestDBusFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: TestDBusFlags) = ccall(("g_test_dbus_flags_get_type", libgio), GType, ())
@bitflag(TlsCertificateFlags::UInt32, TlsCertificateFlags_NO_FLAGS = 0, TlsCertificateFlags_UNKNOWN_CA = 1, TlsCertificateFlags_BAD_IDENTITY = 2, TlsCertificateFlags_NOT_ACTIVATED = 4, TlsCertificateFlags_EXPIRED = 8, TlsCertificateFlags_REVOKED = 16, TlsCertificateFlags_INSECURE = 32, TlsCertificateFlags_GENERIC_ERROR = 64)
(GLib.g_type(::Type{T}) where T <: TlsCertificateFlags) = ccall(("g_tls_certificate_flags_get_type", libgio), GType, ())
@bitflag(TlsDatabaseVerifyFlags::UInt32, TlsDatabaseVerifyFlags_NONE = 0)
(GLib.g_type(::Type{T}) where T <: TlsDatabaseVerifyFlags) = ccall(("g_tls_database_verify_flags_get_type", libgio), GType, ())
@bitflag(TlsPasswordFlags::UInt32, TlsPasswordFlags_NONE = 0, TlsPasswordFlags_RETRY = 2, TlsPasswordFlags_MANY_TRIES = 4, TlsPasswordFlags_FINAL_TRY = 8, TlsPasswordFlags_PKCS11_USER = 16, TlsPasswordFlags_PKCS11_SECURITY_OFFICER = 32, TlsPasswordFlags_PKCS11_CONTEXT_SPECIFIC = 64)
(GLib.g_type(::Type{T}) where T <: TlsPasswordFlags) = ccall(("g_tls_password_flags_get_type", libgio), GType, ())
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.DBUS_METHOD_INVOCATION_HANDLED.html).", DBUS_METHOD_INVOCATION_HANDLED)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.DBUS_METHOD_INVOCATION_UNHANDLED.html).", DBUS_METHOD_INVOCATION_UNHANDLED)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.DEBUG_CONTROLLER_EXTENSION_POINT_NAME.html).", DEBUG_CONTROLLER_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.DRIVE_IDENTIFIER_KIND_UNIX_DEVICE.html).", DRIVE_IDENTIFIER_KIND_UNIX_DEVICE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_ACCESS_CAN_DELETE.html).", FILE_ATTRIBUTE_ACCESS_CAN_DELETE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE.html).", FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_ACCESS_CAN_READ.html).", FILE_ATTRIBUTE_ACCESS_CAN_READ)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_ACCESS_CAN_RENAME.html).", FILE_ATTRIBUTE_ACCESS_CAN_RENAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_ACCESS_CAN_TRASH.html).", FILE_ATTRIBUTE_ACCESS_CAN_TRASH)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_ACCESS_CAN_WRITE.html).", FILE_ATTRIBUTE_ACCESS_CAN_WRITE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_DOS_IS_ARCHIVE.html).", FILE_ATTRIBUTE_DOS_IS_ARCHIVE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT.html).", FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_DOS_IS_SYSTEM.html).", FILE_ATTRIBUTE_DOS_IS_SYSTEM)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG.html).", FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_ETAG_VALUE.html).", FILE_ATTRIBUTE_ETAG_VALUE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_FILESYSTEM_FREE.html).", FILE_ATTRIBUTE_FILESYSTEM_FREE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_FILESYSTEM_READONLY.html).", FILE_ATTRIBUTE_FILESYSTEM_READONLY)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_FILESYSTEM_REMOTE.html).", FILE_ATTRIBUTE_FILESYSTEM_REMOTE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_FILESYSTEM_SIZE.html).", FILE_ATTRIBUTE_FILESYSTEM_SIZE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_FILESYSTEM_TYPE.html).", FILE_ATTRIBUTE_FILESYSTEM_TYPE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_FILESYSTEM_USED.html).", FILE_ATTRIBUTE_FILESYSTEM_USED)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW.html).", FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_GVFS_BACKEND.html).", FILE_ATTRIBUTE_GVFS_BACKEND)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_ID_FILE.html).", FILE_ATTRIBUTE_ID_FILE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_ID_FILESYSTEM.html).", FILE_ATTRIBUTE_ID_FILESYSTEM)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT.html).", FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT.html).", FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL.html).", FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_CAN_START.html).", FILE_ATTRIBUTE_MOUNTABLE_CAN_START)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED.html).", FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP.html).", FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT.html).", FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI.html).", FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC.html).", FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE.html).", FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE.html).", FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE.html).", FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_OWNER_GROUP.html).", FILE_ATTRIBUTE_OWNER_GROUP)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_OWNER_USER.html).", FILE_ATTRIBUTE_OWNER_USER)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_OWNER_USER_REAL.html).", FILE_ATTRIBUTE_OWNER_USER_REAL)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_PREVIEW_ICON.html).", FILE_ATTRIBUTE_PREVIEW_ICON)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_RECENT_MODIFIED.html).", FILE_ATTRIBUTE_RECENT_MODIFIED)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_SELINUX_CONTEXT.html).", FILE_ATTRIBUTE_SELINUX_CONTEXT)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE.html).", FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE.html).", FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_COPY_NAME.html).", FILE_ATTRIBUTE_STANDARD_COPY_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_DESCRIPTION.html).", FILE_ATTRIBUTE_STANDARD_DESCRIPTION)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME.html).", FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_EDIT_NAME.html).", FILE_ATTRIBUTE_STANDARD_EDIT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE.html).", FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_ICON.html).", FILE_ATTRIBUTE_STANDARD_ICON)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_IS_BACKUP.html).", FILE_ATTRIBUTE_STANDARD_IS_BACKUP)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_IS_HIDDEN.html).", FILE_ATTRIBUTE_STANDARD_IS_HIDDEN)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_IS_SYMLINK.html).", FILE_ATTRIBUTE_STANDARD_IS_SYMLINK)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL.html).", FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_IS_VOLATILE.html).", FILE_ATTRIBUTE_STANDARD_IS_VOLATILE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_NAME.html).", FILE_ATTRIBUTE_STANDARD_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_SIZE.html).", FILE_ATTRIBUTE_STANDARD_SIZE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_SORT_ORDER.html).", FILE_ATTRIBUTE_STANDARD_SORT_ORDER)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON.html).", FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET.html).", FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_TARGET_URI.html).", FILE_ATTRIBUTE_STANDARD_TARGET_URI)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_STANDARD_TYPE.html).", FILE_ATTRIBUTE_STANDARD_TYPE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAILING_FAILED.html).", FILE_ATTRIBUTE_THUMBNAILING_FAILED)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAILING_FAILED_LARGE.html).", FILE_ATTRIBUTE_THUMBNAILING_FAILED_LARGE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAILING_FAILED_NORMAL.html).", FILE_ATTRIBUTE_THUMBNAILING_FAILED_NORMAL)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAILING_FAILED_XLARGE.html).", FILE_ATTRIBUTE_THUMBNAILING_FAILED_XLARGE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAILING_FAILED_XXLARGE.html).", FILE_ATTRIBUTE_THUMBNAILING_FAILED_XXLARGE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_IS_VALID.html).", FILE_ATTRIBUTE_THUMBNAIL_IS_VALID)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_LARGE.html).", FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_LARGE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_NORMAL.html).", FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_NORMAL)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XLARGE.html).", FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XLARGE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XXLARGE.html).", FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XXLARGE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_PATH.html).", FILE_ATTRIBUTE_THUMBNAIL_PATH)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_PATH_LARGE.html).", FILE_ATTRIBUTE_THUMBNAIL_PATH_LARGE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_PATH_NORMAL.html).", FILE_ATTRIBUTE_THUMBNAIL_PATH_NORMAL)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_PATH_XLARGE.html).", FILE_ATTRIBUTE_THUMBNAIL_PATH_XLARGE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_THUMBNAIL_PATH_XXLARGE.html).", FILE_ATTRIBUTE_THUMBNAIL_PATH_XXLARGE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_ACCESS.html).", FILE_ATTRIBUTE_TIME_ACCESS)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_ACCESS_NSEC.html).", FILE_ATTRIBUTE_TIME_ACCESS_NSEC)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_ACCESS_USEC.html).", FILE_ATTRIBUTE_TIME_ACCESS_USEC)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_CHANGED.html).", FILE_ATTRIBUTE_TIME_CHANGED)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_CHANGED_NSEC.html).", FILE_ATTRIBUTE_TIME_CHANGED_NSEC)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_CHANGED_USEC.html).", FILE_ATTRIBUTE_TIME_CHANGED_USEC)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_CREATED.html).", FILE_ATTRIBUTE_TIME_CREATED)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_CREATED_NSEC.html).", FILE_ATTRIBUTE_TIME_CREATED_NSEC)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_CREATED_USEC.html).", FILE_ATTRIBUTE_TIME_CREATED_USEC)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_MODIFIED.html).", FILE_ATTRIBUTE_TIME_MODIFIED)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_MODIFIED_NSEC.html).", FILE_ATTRIBUTE_TIME_MODIFIED_NSEC)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TIME_MODIFIED_USEC.html).", FILE_ATTRIBUTE_TIME_MODIFIED_USEC)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TRASH_DELETION_DATE.html).", FILE_ATTRIBUTE_TRASH_DELETION_DATE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TRASH_ITEM_COUNT.html).", FILE_ATTRIBUTE_TRASH_ITEM_COUNT)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_TRASH_ORIG_PATH.html).", FILE_ATTRIBUTE_TRASH_ORIG_PATH)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_BLOCKS.html).", FILE_ATTRIBUTE_UNIX_BLOCKS)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_BLOCK_SIZE.html).", FILE_ATTRIBUTE_UNIX_BLOCK_SIZE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_DEVICE.html).", FILE_ATTRIBUTE_UNIX_DEVICE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_GID.html).", FILE_ATTRIBUTE_UNIX_GID)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_INODE.html).", FILE_ATTRIBUTE_UNIX_INODE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT.html).", FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_MODE.html).", FILE_ATTRIBUTE_UNIX_MODE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_NLINK.html).", FILE_ATTRIBUTE_UNIX_NLINK)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_RDEV.html).", FILE_ATTRIBUTE_UNIX_RDEV)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.FILE_ATTRIBUTE_UNIX_UID.html).", FILE_ATTRIBUTE_UNIX_UID)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.MEMORY_MONITOR_EXTENSION_POINT_NAME.html).", MEMORY_MONITOR_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.MENU_ATTRIBUTE_ACTION.html).", MENU_ATTRIBUTE_ACTION)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.MENU_ATTRIBUTE_ACTION_NAMESPACE.html).", MENU_ATTRIBUTE_ACTION_NAMESPACE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.MENU_ATTRIBUTE_ICON.html).", MENU_ATTRIBUTE_ICON)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.MENU_ATTRIBUTE_LABEL.html).", MENU_ATTRIBUTE_LABEL)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.MENU_ATTRIBUTE_TARGET.html).", MENU_ATTRIBUTE_TARGET)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.MENU_EXPORTER_MAX_SECTION_SIZE.html).", MENU_EXPORTER_MAX_SECTION_SIZE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.MENU_LINK_SECTION.html).", MENU_LINK_SECTION)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.MENU_LINK_SUBMENU.html).", MENU_LINK_SUBMENU)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.NETWORK_MONITOR_EXTENSION_POINT_NAME.html).", NETWORK_MONITOR_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.POWER_PROFILE_MONITOR_EXTENSION_POINT_NAME.html).", POWER_PROFILE_MONITOR_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.PROXY_EXTENSION_POINT_NAME.html).", PROXY_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.PROXY_RESOLVER_EXTENSION_POINT_NAME.html).", PROXY_RESOLVER_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.SETTINGS_BACKEND_EXTENSION_POINT_NAME.html).", SETTINGS_BACKEND_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.TLS_BACKEND_EXTENSION_POINT_NAME.html).", TLS_BACKEND_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT.html).", TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER.html).", TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.VFS_EXTENSION_POINT_NAME.html).", VFS_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.VOLUME_IDENTIFIER_KIND_CLASS.html).", VOLUME_IDENTIFIER_KIND_CLASS)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.VOLUME_IDENTIFIER_KIND_LABEL.html).", VOLUME_IDENTIFIER_KIND_LABEL)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.VOLUME_IDENTIFIER_KIND_NFS_MOUNT.html).", VOLUME_IDENTIFIER_KIND_NFS_MOUNT)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.VOLUME_IDENTIFIER_KIND_UNIX_DEVICE.html).", VOLUME_IDENTIFIER_KIND_UNIX_DEVICE)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.VOLUME_IDENTIFIER_KIND_UUID.html).", VOLUME_IDENTIFIER_KIND_UUID)
@doc("See the [GTK docs](https://docs.gtk.org/gio/const.VOLUME_MONITOR_EXTENSION_POINT_NAME.html).", VOLUME_MONITOR_EXTENSION_POINT_NAME)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.BusType.html).", BusType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.ConverterResult.html).", ConverterResult)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.CredentialsType.html).", CredentialsType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.DBusError.html).", DBusError)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.DBusMessageByteOrder.html).", DBusMessageByteOrder)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.DBusMessageHeaderField.html).", DBusMessageHeaderField)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.DBusMessageType.html).", DBusMessageType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.DataStreamByteOrder.html).", DataStreamByteOrder)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.DataStreamNewlineType.html).", DataStreamNewlineType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.DriveStartStopType.html).", DriveStartStopType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.EmblemOrigin.html).", EmblemOrigin)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.FileAttributeStatus.html).", FileAttributeStatus)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.FileAttributeType.html).", FileAttributeType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.FileMonitorEvent.html).", FileMonitorEvent)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.FileType.html).", FileType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.FilesystemPreviewType.html).", FilesystemPreviewType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.IOErrorEnum.html).", IOErrorEnum)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.IOModuleScopeFlags.html).", IOModuleScopeFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.MemoryMonitorWarningLevel.html).", MemoryMonitorWarningLevel)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.MountOperationResult.html).", MountOperationResult)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.NetworkConnectivity.html).", NetworkConnectivity)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.NotificationPriority.html).", NotificationPriority)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.PasswordSave.html).", PasswordSave)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.PollableReturn.html).", PollableReturn)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.ResolverError.html).", ResolverError)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.ResolverRecordType.html).", ResolverRecordType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.ResourceError.html).", ResourceError)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.SocketClientEvent.html).", SocketClientEvent)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.SocketFamily.html).", SocketFamily)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.SocketListenerEvent.html).", SocketListenerEvent)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.SocketProtocol.html).", SocketProtocol)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.SocketType.html).", SocketType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.TlsAuthenticationMode.html).", TlsAuthenticationMode)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.TlsCertificateRequestFlags.html).", TlsCertificateRequestFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.TlsChannelBindingError.html).", TlsChannelBindingError)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.TlsChannelBindingType.html).", TlsChannelBindingType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.TlsDatabaseLookupFlags.html).", TlsDatabaseLookupFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.TlsError.html).", TlsError)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.TlsInteractionResult.html).", TlsInteractionResult)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.UnixSocketAddressType.html).", UnixSocketAddressType)
@doc("See the [GTK docs](https://docs.gtk.org/gio/enum.ZlibCompressorFormat.html).", ZlibCompressorFormat)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.AppInfoCreateFlags.html).", AppInfoCreateFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.ApplicationFlags.html).", ApplicationFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.AskPasswordFlags.html).", AskPasswordFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.BusNameOwnerFlags.html).", BusNameOwnerFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.BusNameWatcherFlags.html).", BusNameWatcherFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.ConverterFlags.html).", ConverterFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusCallFlags.html).", DBusCallFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusCapabilityFlags.html).", DBusCapabilityFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusConnectionFlags.html).", DBusConnectionFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusInterfaceSkeletonFlags.html).", DBusInterfaceSkeletonFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusMessageFlags.html).", DBusMessageFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusObjectManagerClientFlags.html).", DBusObjectManagerClientFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusPropertyInfoFlags.html).", DBusPropertyInfoFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusProxyFlags.html).", DBusProxyFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusSendMessageFlags.html).", DBusSendMessageFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusServerFlags.html).", DBusServerFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusSignalFlags.html).", DBusSignalFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DBusSubtreeFlags.html).", DBusSubtreeFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.DriveStartFlags.html).", DriveStartFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.FileAttributeInfoFlags.html).", FileAttributeInfoFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.FileCopyFlags.html).", FileCopyFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.FileCreateFlags.html).", FileCreateFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.FileMeasureFlags.html).", FileMeasureFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.FileMonitorFlags.html).", FileMonitorFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.FileQueryInfoFlags.html).", FileQueryInfoFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.IOStreamSpliceFlags.html).", IOStreamSpliceFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.MountMountFlags.html).", MountMountFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.MountUnmountFlags.html).", MountUnmountFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.OutputStreamSpliceFlags.html).", OutputStreamSpliceFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.ResolverNameLookupFlags.html).", ResolverNameLookupFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.ResourceFlags.html).", ResourceFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.ResourceLookupFlags.html).", ResourceLookupFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.SettingsBindFlags.html).", SettingsBindFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.SocketMsgFlags.html).", SocketMsgFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.SubprocessFlags.html).", SubprocessFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.TestDBusFlags.html).", TestDBusFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.TlsCertificateFlags.html).", TlsCertificateFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.TlsDatabaseVerifyFlags.html).", TlsDatabaseVerifyFlags)
@doc("See the [GTK docs](https://docs.gtk.org/gio/flags.TlsPasswordFlags.html).", TlsPasswordFlags)
export BusType, ConverterResult, CredentialsType, DBusError, DBusMessageByteOrder, DBusMessageHeaderField, DBusMessageType, DataStreamByteOrder, DataStreamNewlineType, DriveStartStopType, EmblemOrigin, FileAttributeStatus, FileAttributeType, FileMonitorEvent, FileType, FilesystemPreviewType, IOErrorEnum, IOModuleScopeFlags, MemoryMonitorWarningLevel, MountOperationResult, NetworkConnectivity, NotificationPriority, PasswordSave, PollableReturn, ResolverError, ResolverRecordType, ResourceError, SocketClientEvent, SocketFamily, SocketListenerEvent, SocketProtocol, SocketType, TlsAuthenticationMode, TlsCertificateRequestFlags, TlsChannelBindingError, TlsChannelBindingType, TlsDatabaseLookupFlags, TlsError, TlsInteractionResult, UnixSocketAddressType, ZlibCompressorFormat, AppInfoCreateFlags, ApplicationFlags, AskPasswordFlags, BusNameOwnerFlags, BusNameWatcherFlags, ConverterFlags, DBusCallFlags, DBusCapabilityFlags, DBusConnectionFlags, DBusInterfaceSkeletonFlags, DBusMessageFlags, DBusObjectManagerClientFlags, DBusPropertyInfoFlags, DBusProxyFlags, DBusSendMessageFlags, DBusServerFlags, DBusSignalFlags, DBusSubtreeFlags, DriveStartFlags, FileAttributeInfoFlags, FileCopyFlags, FileCreateFlags, FileMeasureFlags, FileMonitorFlags, FileQueryInfoFlags, IOStreamSpliceFlags, MountMountFlags, MountUnmountFlags, OutputStreamSpliceFlags, ResolverNameLookupFlags, ResourceFlags, ResourceLookupFlags, SettingsBindFlags, SocketMsgFlags, SubprocessFlags, TestDBusFlags, TlsCertificateFlags, TlsDatabaseVerifyFlags, TlsPasswordFlags
