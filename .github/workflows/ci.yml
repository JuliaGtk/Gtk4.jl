name: CI

on:
  push:
    branches: "main"
    tags: ["*"]
  pull_request:
  release:

jobs:
  test:
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ matrix.julia-arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - "1"
          #- "nightly"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        julia-arch:
          - x64
          - x86
        include:
          - os: ubuntu-latest
            prefix: xvfb-run
        # 32-bit Julia binaries are not available on macOS
        exclude:
          - os: macOS-latest
            julia-arch: x86

    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@latest
      - name: GObjectIntrospection tests
        shell: julia --project=@. --color=yes {0}
        run: |
          using Pkg
          Pkg.develop(path="GI"); Pkg.test("GI"; coverage=true)
      - uses: julia-actions/julia-runtest@latest
        with:
          prefix: ${{ matrix.prefix }}
          coverage: ${{ matrix.version == '1' && matrix.os == 'ubuntu-latest' && matrix.arch == 'x64' }}
      - uses: julia-actions/julia-processcoverage@latest
        if: matrix.version == '1' && matrix.os == 'ubuntu-latest' && matrix.arch == 'x64'
        with:
          directories: GI/src,src
      - uses: codecov/codecov-action@v4
        if: matrix.version == '1' && matrix.os == 'ubuntu-latest' && matrix.arch == 'x64'
        with:
          file: lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  Documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@latest
        with:
          version: 1
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-docdeploy@v1
        with:
          prefix: xvfb-run
        env:
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
