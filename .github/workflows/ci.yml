name: CI

on:
  push:
    branches: "main"
    tags: ["*"]
  pull_request:
  release:

jobs:
  GItest:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ matrix.julia-arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - "1"
        os:
          - ubuntu-latest
        julia-arch:
          - x64
        include:
          - os: ubuntu-latest
            prefix: xvfb-run

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - name: Cache artifacts
        uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: GObjectIntrospection tests
        shell: julia --project=@. --color=yes {0}
        run: |
          using Pkg
          Pkg.develop(path="GI"); Pkg.test("GI"; coverage=true)

        with:
          prefix: ${{ matrix.prefix }}
      - uses: julia-actions/julia-uploadcodecov@v0.1
        continue-on-error: true

  test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ matrix.julia-arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - "1.6"
          - "1"
          #- "nightly"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        julia-arch:
          - x64
          #- x86
        include:
          - os: ubuntu-latest
            prefix: xvfb-run
        # 32-bit Julia binaries are not available on macOS
        exclude:
          - os: macOS-latest
            julia-arch: x86

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - name: Cache artifacts
        uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@v1
        with:
          prefix: ${{ matrix.prefix }}
      - uses: julia-actions/julia-uploadcodecov@v0.1
        continue-on-error: true

  Documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: 1
      - name: Cache artifacts
        uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/docs/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-docdeploy@v1
        with:
          prefix: xvfb-run
        env:
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
